{"version":3,"sources":["component/Loader.tsx","component/Title.tsx","component/admin/Progres.tsx","component/admin/AdminDashboard.tsx","util/util.tsx","component/admin/CreateNewUser.tsx","component/admin/AdminList.tsx","component/admin/AgentList.tsx","component/admin/CreateNewPlan.tsx","component/admin/CreateNewPlanLocation.tsx","component/admin/PlanList.tsx","component/admin/UserList.tsx","component/ListItems.tsx","component/StickyFooter.tsx","component/Dashboard.tsx","component/ForgotPassword.tsx","component/ViewDocumentDialog.tsx","component/forms/EmailVerification.tsx","component/forms/filepond.tsx","component/forms/schema/CompanySchema.tsx","component/forms/Company.tsx","component/forms/schema/LLPSchema.tsx","component/forms/LLP.tsx","component/forms/schema/PartnerSchema.tsx","component/forms/Partnership.tsx","component/forms/schema/SoleProprietorSchama.tsx","component/forms/SoleProprietor.tsx","component/forms/ApplyForGST.tsx","component/OrderList.tsx","component/TimeLine.tsx","component/SignIn.tsx","component/SignUp.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","LoaderComponent","classes","React","useState","loadingCount","setLoadingCount","useEffect","axios","interceptors","request","use","config","error","Promise","reject","response","data","Backdrop","className","open","style","CircularProgress","Title","props","Typography","component","variant","gutterBottom","children","BorderLinearProgress","withStyles","root","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","flexGrow","ProgressBar","value","progress","depositContext","flex","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","AdminDashboard","history","useHistory","sessionStorage","getItem","push","fixedHeightPaper","clsx","dashboardData","setDashboardData","get","then","console","log","catch","reponse","Grid","container","textAlign","justifyContent","item","xs","md","lg","Paper","src","alt","todaysBusiness","fontSize","todaysApplication","totalCustomers","marginTop","paddingTop","applicationsManagement","paddingBottom","customerManagement","List","Divider","ListItem","ListItemText","primary","pending","pendingPercentage","approved","approvedPercentage","background","rejected","rejectedPercentage","anchorOrigin","vertical","horizontal","successToast","autoHideDuration","failureToast","alignItems","avatar","margin","secondary","main","form","submit","CreateNewUserDialog","withSnackbar","SignupSchema","Yup","shape","businessName","min","required","userEmail","email","mobile","vendorType","Dialog","DialogTitle","id","initialValues","validationSchema","onSubmit","values","role","post","enqueueSnackbar","handleClose","message","signUpSubmit","errors","touched","handleChange","setFieldValue","noValidate","sm","TextField","autoComplete","name","fullWidth","label","autoFocus","onChange","helperText","FormControl","InputLabel","Select","labelId","event","MenuItem","Button","onClick","AdminList","adminList","setAdminList","fetchUserList","filter","row","setOpen","Fragment","cursor","Tooltip","title","Add","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","defaultValue","loginUserName","target","loginPassword","user","undefined","alert","IconButton","delete","userId","Delete","AgentList","agentList","setAgentList","PlanSchema","payplanname","max","remarks","CreateNewPlan","fetchPlanList","DialogContent","DialogActions","payplanLocation","payplanamount","CreateNewPlanLocationDialog","planLocationList","setPlanLocationList","maxWidth","plan","marginBottom","Row","KeyboardArrowUpOutlined","KeyboardArrowDownOutlined","handleDeletePlan","colSpan","Collapse","in","timeout","unmountOnExit","openLocationModal","historyRow","ref","createRef","scope","inputRef","titleAccess","current","updatePlanLocationAmount","planLocation","PlanList","planList","setPlanList","openLocation","setOpenLocation","setPlan","handleModalLocationClose","refresh","TableContainer","UserList","userList","setUserList","marginLeft","assignedToAgent","agent","MainListItems","button","href","ListItemIcon","width","nested","paddingLeft","SecondaryListItems","admin","disablePadding","footer","opacity","StickyFooter","minWidth","grow","toolbar","paddingRight","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","sectionDesktop","sectionMobile","Dashboard","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","innerText","menuId","renderMenu","Menu","keepMounted","transformOrigin","onClose","mobileMenuId","renderMobileMenu","CssBaseline","AppBar","Toolbar","edge","noWrap","url","Drawer","Container","secondaryRoutes","route","path","exact","ForgotPassword","justify","Link","ViewDocumentDialogComponent","DialogContentText","EmailVerification","float","Send","test","subType","sendVerificationMail","verificationObject","verified","FileUpload","stripAndShowFileName","fileName","substring","lastIndexOf","length","files","source","field","options","labelFileSizeNotAvailable","allowReorder","allowMultiple","maxFiles","onupdatefiles","filea","fieldName","server","process","onload","labelIdle","Visibility","setImageName","GetApp","downloadReport","panRegex","aadharRegex","schema","firmName","legalbusinessName","tradeName","panphoto","composition","commencementDate","hsn1","accountnumber","ifsccode","cancelcheqphoto","certificateOfIncorportation","pannumber","matches","numberOfDirectors","Array","forEach","index","when","is","numberOfOtherGST","buildSchema","layout","stepper","buttons","Company","params","useRouteMatch","orderDetails","setOrderDetails","split","directorList","director","directorName","directorDin","directorFatherName","directorAadharNo","directorAadharPhotoCopyFront","directorAadharPhotoCopyBack","pannumberCopy","directorResidentialAddress","directorPhoto","isAuthorisedSignatory","gstCertificatesInOtherStates","gst","gstNumber","gstAttachment","upload","includes","formData","FormData","append","headers","submitForm","save","paymentPlanLocationDetails","directorListAuthorised","p","trading","manufacture","service","imageName","filename","responseType","element","document","createElement","file","Blob","download","URL","createObjectURL","click","remove","curr","Date","setDate","getDate","date","toISOString","substr","valuesForDirectors","valuesOfGSTInOtherStates","isAdmin","isAgent","handleClickOpen","enableReinitialize","principleplace","pricipleelectricityphoto","priciplerentphoto","priciplenocphoto","additionalplace","additionalelectricityphoto","additionalrentphoto","additionalnocphoto","hsn2","hsn3","hsn4","hsn5","tradelicensenumber","tradelicensephoto","status","createdBy","isActive","remark","declarationOfAuthorisedSignatory","InputLabelProps","shrink","emailVerification","onaddfile","InputProps","inputProps","num","FormGroup","FormControlLabel","control","Checkbox","checked","numberOfPartners","LLP","partnerList","partner","partnerName","partnerFatherName","partnerAadharNo","partnerAadharPhotoCopyFront","partnerAadharPhotoCopyBack","partnerResidentialAddress","partnerPhoto","partnerMobile","partnerEmail","partnerListEmail","duplicates","indexOf","toString","partnerListMobile","duplicatesMobile","partnerListAuthorised","valuesForPartners","partnershipDeed","Partnership","personName","soleProprietorPhoto","propfatherName","propadharphotoFront","propadharphotoBack","resident_address","photo","propadharnumber","SoleProprietor","paymentPlanDetailsId","location","ApplyForGstComponent","setName","setPlanLocation","setLocation","dropdown","setDropdown","disabled","OrderList","orderList","setOrderList","orderType","setOrderType","fetchOrderList","searchText","view","proprietorshipid","partnershipid","llpid","companydetailsid","loadScript","resolve","script","onerror","body","appendChild","displayRazorpay","a","razor","JSON","parse","razorpayOrder","key","amount","currency","description","image","order_id","handler","orderTypeText","orderTypeId","w","window","Razorpay","documentUrl","setSearchText","Input","placeholder","endAdornment","Search","gstDocument","CustomizedTimeline","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","SignInSchema","SignIn","verifyEmailFlow","setItem","signInSubmit","SignUp","dashboardRoutes","icon","App","ReactDOM","render","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.6b81c4a1.chunk.js","sourcesContent":["import {\n  Backdrop,\n  CircularProgress,\n  createStyles,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\nexport const LoaderComponent = () => {\n  const classes = useStyles();\n  const [loadingCount, setLoadingCount] = React.useState(0);\n  useEffect(() => {\n    axios.interceptors.request.use(\n      function (config: any) {\n        setLoadingCount(loadingCount + 1);\n        return config;\n      },\n      function (error: any) {\n        return Promise.reject({ ...error.response?.data });\n      }\n    );\n\n    axios.interceptors.response.use(\n      function (response: any) {\n        // spinning hide\n        setLoadingCount(loadingCount - 1);\n        return response;\n      },\n      function (error: any) {\n        setLoadingCount(loadingCount - 1);\n        return Promise.reject({ ...error.response?.data });\n      }\n    );\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  return (\n    <div>\n      {loadingCount > 0 ? (\n        <Backdrop\n          className={classes.backdrop}\n          open={true}\n          style={{ zIndex: 10000 }}\n        >\n          <CircularProgress color=\"primary\" />\n        </Backdrop>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props: any) {\n  return (\n    <Typography\n      component=\"h2\"\n      variant=\"h6\"\n      color=\"primary\"\n      gutterBottom\n      style={props.style}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n};\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 10,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor:\n        theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: \"#1a90ff\",\n    },\n  })\n)(LinearProgress);\n\n// Inspired by the former Facebook spinners.\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport const ProgressBar = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <BorderLinearProgress variant=\"determinate\" value={props.progress?props.progress:0} />\n    </div>\n  );\n};\n","import {\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Title from \"../Title\";\r\nimport { ProgressBar } from \"./Progres\";\r\n\r\n// function preventDefault(event: any) {\r\n//   event.preventDefault();\r\n// }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 180,\r\n  },\r\n}));\r\n\r\nexport const AdminDashboard = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [dashboardData, setDashboardData] = React.useState<any>({});\r\n\r\n  const fetchAdminDashboard = () => {\r\n    axios\r\n      .get(\"/api/get-admin-dashboard\")\r\n      .then((response: any) => {\r\n        console.log(response);\r\n        setDashboardData(response.data);\r\n        // props.enqueueSnackbar(\r\n        //   \"Application Rejected Successfully\",\r\n        //   successToast\r\n        // );\r\n        // history.push(\"/dashboard/admin\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(\"Unable To fetch Admin Dashboard\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchAdminDashboard();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  return (\r\n    <Grid container style={{ textAlign: \"center\" }}>\r\n      <Grid container spacing={4} justifyContent=\"center\">\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              <img src=\"currency-inr.png\" alt=\"\" />\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n              {dashboardData.todaysBusiness}\r\n            </Typography>\r\n            <Title> Today's Business</Title>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              <WorkIcon style={{ fontSize: \"3rem\" }}></WorkIcon>\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n              {dashboardData.todaysApplication}\r\n            </Typography>\r\n            <Title> Today's Application</Title>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              <GroupIcon style={{ fontSize: \"3rem\" }}></GroupIcon>\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n              {dashboardData.totalCustomers}\r\n            </Typography>\r\n            <Title> Total Users</Title>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Grid container item xs={12} spacing={4}>\r\n            <Grid item xs={12} md={6} lg={6}>\r\n              <Paper style={{ textAlign: \"center\" }}>\r\n                <Typography\r\n                  component=\"div\"\r\n                  variant=\"h4\"\r\n                  style={{ paddingTop: \"8px\" }}\r\n                >\r\n                  <VerifiedUserIcon\r\n                    style={{ fontSize: \"2rem\" }}\r\n                  ></VerifiedUserIcon>\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                  {dashboardData.applicationsManagement}\r\n                </Typography>\r\n                <Typography\r\n                  component=\"h2\"\r\n                  variant=\"h6\"\r\n                  color=\"primary\"\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                  gutterBottom\r\n                >\r\n                  Applications Management\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={6}>\r\n              <Paper style={{ textAlign: \"center\" }}>\r\n                <Typography\r\n                  component=\"div\"\r\n                  variant=\"h4\"\r\n                  style={{ paddingTop: \"8px\" }}\r\n                >\r\n                  <GroupAddIcon style={{ fontSize: \"2rem\" }}></GroupAddIcon>\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                  {dashboardData.customerManagement}\r\n                </Typography>\r\n                <Typography\r\n                  component=\"h2\"\r\n                  variant=\"h6\"\r\n                  color=\"primary\"\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                  gutterBottom\r\n                >\r\n                  Customer Management\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper style={{ textAlign: \"center\" }}>\r\n            <Typography\r\n              component=\"div\"\r\n              variant=\"h5\"\r\n              style={{ paddingTop: \"8px\" }}\r\n            >\r\n              This Weeks Report\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"mailbox folders\">\r\n              <Divider />\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    \"Review Pending Applications - \" + dashboardData.pending\r\n                  }\r\n                />\r\n                <ListItemText\r\n                  primary={dashboardData.pendingPercentage + \"%\"}\r\n                  style={{ textAlign: \"right\" }}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ProgressBar\r\n                  progress={dashboardData.pendingPercentage}\r\n                ></ProgressBar>\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\"Approved Applications - \" + dashboardData.approved}\r\n                />\r\n                <ListItemText\r\n                  primary={dashboardData.approvedPercentage + \"%\"}\r\n                  style={{ textAlign: \"right\" }}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ProgressBar\r\n                  progress={dashboardData.approvedPercentage}\r\n                  style={{ background: \"green\" }}\r\n                ></ProgressBar>\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\"Rejected Applications - \" + dashboardData.rejected}\r\n                />\r\n                <ListItemText\r\n                  primary={dashboardData.rejectedPercentage + \"%\"}\r\n                  style={{ textAlign: \"right\" }}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ProgressBar\r\n                  progress={dashboardData.rejectedPercentage}\r\n                ></ProgressBar>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","const anchorOrigin = {\n  vertical: \"bottom\",\n  horizontal: \"right\",\n};\nexport const successToast = {\n  autoHideDuration: 3000,\n  variant: \"success\",\n  anchorOrigin,\n};\nexport const infoToast = {\n  autoHideDuration: 3000,\n  variant: \"info\",\n  anchorOrigin,\n};\nexport const failureToast = {\n  autoHideDuration: 3000,\n  variant: \"error\",\n  anchorOrigin,\n};\n","import {\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../../util/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    margin: theme.spacing(6),\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst CreateNewUserDialogComponent = (props: any) => {\n  const classes = useStyles();\n  const signUpSubmit = (values: any) => {\n    values.role = props.type;\n    axios\n      .post(\"/api/createRegistration\", values)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\"User Sign Up Complete\", successToast);\n        props.handleClose();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n  let SignupSchema;\n  if (props.type !== \"Admin\" && props.type !== \"Agent\") {\n    SignupSchema = Yup.object().shape({\n      businessName: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n      userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n      mobile: Yup.string().required(\"Required\"),\n    });\n  } else {\n    SignupSchema = Yup.object().shape({\n      businessName: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n      vendorType: Yup.string().required(\"Required\"),\n      userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n      mobile: Yup.string().required(\"Required\"),\n    });\n  }\n  return (\n    <div>\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          Create New {props.type} Form\n        </DialogTitle>\n        <Formik\n          initialValues={{\n            businessName: \"\",\n            vendorType: \"P0\",\n            userEmail: \"\",\n            mobile: \"\",\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values: any) => {\n            signUpSubmit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange, setFieldValue }) => (\n            // obj: any\n            <Form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    autoComplete=\"businessName\"\n                    required\n                    name=\"businessName\"\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"businessName\"\n                    label=\"Name\"\n                    autoFocus\n                    onChange={handleChange}\n                    value={values.businessName}\n                    error={\n                      errors.businessName && touched.businessName ? true : false\n                    }\n                    helperText={touched.businessName && errors.businessName}\n                  />\n                </Grid>\n                {props.type !== \"Admin\" && props.type !== \"Agent\" && (\n                  <Grid item xs={12}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Vendor Type\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        fullWidth\n                        id=\"demo-simple-select-helper\"\n                        value={values.vendorType}\n                        error={\n                          errors.vendorType && touched.vendorType ? true : false\n                        }\n                        onChange={(event: any, data: any) => {\n                          setFieldValue(\"vendorType\", data?.props?.children);\n                        }}\n                      >\n                        <MenuItem value={\"P0\"}>P0</MenuItem>\n                        <MenuItem value={\"P1\"}>P1</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"userEmail\"\n                    label=\"Email Address\"\n                    name=\"userEmail\"\n                    autoComplete=\"userEmail\"\n                    onChange={handleChange}\n                    value={values.userEmail}\n                    error={errors.userEmail && touched.userEmail ? true : false}\n                    helperText={touched.userEmail && errors.userEmail}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"mobile\"\n                    label=\"Mobile Number\"\n                    name=\"mobile\"\n                    onChange={handleChange}\n                    value={values.mobile}\n                    error={errors.mobile && touched.mobile ? true : false}\n                    helperText={touched.mobile && errors.mobile}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={props.handleClose}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Add\n                  </Button>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\nexport const CreateNewUserDialog = withSnackbar(CreateNewUserDialogComponent);\n","import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Add, Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport Title from \"../Title\";\r\nimport { CreateNewUserDialog } from \"./CreateNewUser\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function AdminListComponent(props: any) {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [adminList, setAdminList] = React.useState<any>([]);\r\n\r\n  const fetchUserList = () => {\r\n    axios\r\n      .get(\"/api/getAllUsers\")\r\n      .then((response: any) => {\r\n        const adminList = response.data?.filter((row: any) => {\r\n          return row.role === \"Admin\";\r\n        });\r\n        setAdminList(adminList);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  // const activateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User activated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\r\n  //     });\r\n  // };\r\n  // const deActivateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const deleteAccount = (user: any) => {\r\n    axios\r\n      .delete(\"/api/delete-user/\" + user.userId)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Deleted\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Delete User\", failureToast);\r\n      });\r\n  };\r\n\r\n  const sendmail = (user: any) => {\r\n    if (\r\n      user.loginUserName === undefined ||\r\n      user.loginUserName === null ||\r\n      user.loginUserName === \"\" ||\r\n      user.loginPassword === undefined ||\r\n      user.loginPassword === null ||\r\n      user.loginPassword === \"\"\r\n    ) {\r\n      alert(\r\n        \"Please make sure you have a valid username and password before you send the credentials.\"\r\n      );\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/api/generateLoginDetails\", user)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const [open, setOpen] = React.useState<any>(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchUserList();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Title style={{ marginTop: \"20px\" }}>List of registered Admin</Title>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Title\r\n            style={{ marginTop: \"20px\", textAlign: \"right\", cursor: \"pointer\" }}\r\n          >\r\n            <Tooltip title=\"Add\">\r\n              <Add onClick={handleOpen}></Add>\r\n            </Tooltip>\r\n            <CreateNewUserDialog\r\n              open={open}\r\n              type=\"Admin\"\r\n              handleClose={handleClose}\r\n            ></CreateNewUserDialog>\r\n          </Title>\r\n        </Grid>\r\n      </Grid>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>User Name</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {adminList.map((row: any) => (\r\n            <TableRow key={row.userId}>\r\n              <TableCell>{row.userEmail}</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginUserName\"\r\n                  name=\"loginUserName\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginUserName\"\r\n                  defaultValue={row.loginUserName}\r\n                  onChange={(event: any) => {\r\n                    row.loginUserName = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginPassword\"\r\n                  name=\"loginPassword\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginPassword\"\r\n                  defaultValue={row.loginPassword}\r\n                  onChange={(event: any) => {\r\n                    row.loginPassword = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell align=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => sendmail(row)}\r\n                >\r\n                  Send Credentials\r\n                </Button>\r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const AdminList = withSnackbar(AdminListComponent);\r\n","import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Add, Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport Title from \"../Title\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CreateNewUserDialog } from \"./CreateNewUser\";\r\nexport function AgentListComponent(props: any) {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [agentList, setAgentList] = React.useState<any>([]);\r\n  const fetchUserList = () => {\r\n    axios\r\n      .get(\"/api/getAllUsers\")\r\n      .then((response: any) => {\r\n        const agentList = response.data?.filter((row: any) => {\r\n          return row.role === \"Agent\";\r\n        });\r\n        setAgentList(agentList);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  // const activateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User activated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\r\n  //     });\r\n  // };\r\n  // const deActivateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const deleteAccount = (user: any) => {\r\n    axios\r\n      .delete(\"/api/delete-user/\" + user.userId)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Deleted\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Delete User\", failureToast);\r\n      });\r\n  };\r\n  // const submitNewUser = (user: any) => {\r\n  //   console.log(user);\r\n  //   axios\r\n  //     .post(\"/api/v1/admin/user/add/\", user)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Added\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const sendmail = (user: any) => {\r\n    if (\r\n      user.loginUserName === undefined ||\r\n      user.loginUserName === null ||\r\n      user.loginUserName === \"\" ||\r\n      user.loginPassword === undefined ||\r\n      user.loginPassword === null ||\r\n      user.loginPassword === \"\"\r\n    ) {\r\n      alert(\r\n        \"Please make sure you have a valid username and password before you send the credentials.\"\r\n      );\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/api/generateLoginDetails\", user)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const [open, setOpen] = React.useState<any>(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchUserList();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Title style={{ marginTop: \"20px\" }}>List of Agents</Title>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Title\r\n            style={{ marginTop: \"20px\", textAlign: \"right\", cursor: \"pointer\" }}\r\n          >\r\n            <Tooltip title=\"Add\">\r\n              <Add onClick={handleOpen}></Add>\r\n            </Tooltip>\r\n            <CreateNewUserDialog\r\n              open={open}\r\n              type=\"Agent\"\r\n              handleClose={handleClose}\r\n            ></CreateNewUserDialog>\r\n          </Title>\r\n        </Grid>\r\n      </Grid>{\" \"}\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>User Name</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {agentList.map((row: any) => (\r\n            <TableRow key={row.userId}>\r\n              <TableCell>{row.userEmail}</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginUserName\"\r\n                  name=\"loginUserName\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginUserName\"\r\n                  defaultValue={row.loginUserName}\r\n                  onChange={(event: any) => {\r\n                    row.loginUserName = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginPassword\"\r\n                  name=\"loginPassword\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginPassword\"\r\n                  defaultValue={row.loginPassword}\r\n                  onChange={(event: any) => {\r\n                    row.loginPassword = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell align=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => sendmail(row)}\r\n                >\r\n                  Send Credentials\r\n                </Button>\r\n                {/* {!row.enabled ? (\r\n                  <IconButton\r\n                    aria-label=\"PlayCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      activateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PlayCircleFilledIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label=\"PauseCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      deActivateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PauseCircleFilledIcon />\r\n                  </IconButton>\r\n                )}\r\n                \r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton> */}\r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const AgentList = withSnackbar(AgentListComponent);\r\n","import { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../../util/util\";\n\nconst PlanSchema = Yup.object().shape({\n  payplanname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  remarks: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(100, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst CreateNewPlanComponent = (props: any) => {\n  const submit = (values: any) => {\n    axios\n      .post(\"/api/plan\", { ...values })\n      .then((response: any) => {\n        props.enqueueSnackbar(\"Plan Added successfully\", successToast);\n        props.handleClose(true);\n        props.fetchPlanList();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(\"Unable To Add Plan\", failureToast);\n      });\n  };\n  return (\n    <div>\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Plan Form</DialogTitle>\n        <Formik\n          initialValues={{\n            payplanname: \"\",\n            remarks: \"\",\n          }}\n          validationSchema={PlanSchema}\n          onSubmit={(values: any) => {\n            submit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange }) => (\n            <Form noValidate>\n              <DialogContent style={{ paddingTop: \"10px\" }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      autoComplete=\"payplanname\"\n                      name=\"payplanname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"payplanname\"\n                      label=\"Plan Name\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.payplanname}\n                      error={\n                        errors.payplanname && touched.payplanname ? true : false\n                      }\n                      helperText={touched.payplanname && errors.payplanname}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"remarks\"\n                      label=\"Remarks\"\n                      name=\"remarks\"\n                      autoComplete=\"remarks\"\n                      onChange={handleChange}\n                      value={values.remarks}\n                      error={errors.remarks && touched.remarks ? true : false}\n                      helperText={touched.remarks && errors.remarks}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={() => props.handleClose(false)}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                >\n                  Cancel\n                </Button>\n                <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                  Save\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\nexport const CreateNewPlan = withSnackbar(CreateNewPlanComponent);\n","import {\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  payplanLocation: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\r\n  payplanamount: Yup.number().required(\"Required\"),\r\n});\r\n\r\nconst CreateNewPlanLocationDialogComponent = (props: any) => {\r\n  const [planLocationList, setPlanLocationList] = React.useState<any>([]);\r\n\r\n  const submit = (values: any) => {\r\n    axios\r\n      .post(\"/api/plan-location/\" + props.plan.id, values)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"Plan Location Added successfully\", successToast);\r\n        props.handleClose(true);\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable to Add Location \", failureToast);\r\n      });\r\n  };\r\n  const fetchStateList = () => {\r\n    axios\r\n      .get(\"/api/state-list\")\r\n      .then((response: any) => {\r\n        setPlanLocationList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchStateList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  return (\r\n    <Dialog open={props.open} aria-labelledby=\"form-dialog-title\" maxWidth=\"xs\">\r\n      <DialogTitle id=\"form-dialog-title\">Create New Plan Location</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          payplanLocation: \"\",\r\n          payplanamount: \"\",\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={(values: any) => {\r\n          submit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched, values, handleChange }) => (\r\n          <Form noValidate>\r\n            <DialogContent>\r\n              <Grid container spacing={2} justifyContent=\"center\">\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                    {/* <TextField\r\n                        autoComplete=\"payplanLocation\"\r\n                        name=\"payplanLocation\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        id=\"payplanLocation\"\r\n                        label=\"Payplan Location\"\r\n                        autoFocus\r\n                        onChange={handleChange}\r\n                        value={values.payplanLocation}\r\n                        error={\r\n                          errors.payplanLocation && touched.payplanLocation\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.payplanLocation && errors.payplanLocation\r\n                        }\r\n                      /> */}\r\n                    <InputLabel id=\"payplanLocation\">Select a plan</InputLabel>\r\n                    <Select\r\n                      name=\"payplanLocation\"\r\n                      id=\"payplanLocation\"\r\n                      label=\"Select a plan\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      {planLocationList.map((plan: any) => {\r\n                        return (\r\n                          <MenuItem value={plan.name} key={plan.id}>\r\n                            {plan.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginBottom: \"10px\" }}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    size=\"small\"\r\n                    id=\"payplanamount\"\r\n                    label=\"Pay Plan Amount\"\r\n                    name=\"payplanamount\"\r\n                    autoComplete=\"payplanamount\"\r\n                    onChange={handleChange}\r\n                    value={values.payplanamount}\r\n                    error={\r\n                      errors.payplanamount && touched.payplanamount\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={touched.payplanamount && errors.payplanamount}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => props.handleClose(false)}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\" variant=\"contained\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\nexport const CreateNewPlanLocationDialog = withSnackbar(\r\n  CreateNewPlanLocationDialogComponent\r\n);\r\n","import {\r\n  Collapse,\r\n  IconButton,\r\n  Paper,\r\n  TableContainer,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  Add,\r\n  Delete,\r\n  KeyboardArrowDownOutlined,\r\n  KeyboardArrowUpOutlined,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast } from \"../../util/util\";\r\nimport { CreateNewPlan } from \"./CreateNewPlan\";\r\nimport Title from \"../Title\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CreateNewPlanLocationDialog } from \"./CreateNewPlanLocation\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nfunction RowComponent(props: any) {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const updatePlanLocationAmount = (id: any, ref: any) => {\r\n    axios\r\n      .get(\"/api/update-plan-location-amount/\" + id + \"/\" + ref.current.value)\r\n      .then((response: any) => {\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Error updating the location amount\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const row = props.row;\r\n  const handleDeletePlan = (row: any) => {\r\n    axios\r\n      .delete(\"/api/plan/\" + row.id)\r\n      .then((response: any) => {\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const handleDeletePlanLocation = (plan: any, planLocation: any) => {\r\n    axios\r\n      .delete(\"/api/plan-location/\" + plan.id + \"/\" + planLocation.id)\r\n      .then((response: any) => {\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse?.message, failureToast);\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow key={row.id}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpOutlined /> : <KeyboardArrowDownOutlined />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"left\">{row.payplanname}</TableCell>\r\n        <TableCell align=\"left\">{row.remarks}</TableCell>\r\n        <TableCell align=\"left\">\r\n          <IconButton>\r\n            <Delete onClick={() => handleDeletePlan(row)}></Delete>\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Table size=\"small\" aria-label=\"purchases\" padding=\"checkbox\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Location</b>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <b>AMOUNT</b>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <IconButton>\r\n                      <Add onClick={() => props.openLocationModal(row)}></Add>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {row.payplanLocation.map((historyRow: any) => {\r\n                  const ref = React.createRef();\r\n                  return (\r\n                    <TableRow key={historyRow.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.payplanLocation}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <TextField\r\n                          inputRef={ref}\r\n                          style={{ padding: \"10px\" }}\r\n                          size=\"small\"\r\n                          defaultValue={historyRow.payplanamount}\r\n                          type=\"number\"\r\n                        />\r\n                        <PublishIcon\r\n                          style={{ marginTop: \"10px\", cursor: \"pointer\" }}\r\n                          titleAccess=\"Save Amount\"\r\n                          onClick={() =>\r\n                            updatePlanLocationAmount(historyRow.id, ref)\r\n                          }\r\n                        ></PublishIcon>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <IconButton>\r\n                          <Delete\r\n                            onClick={() =>\r\n                              handleDeletePlanLocation(row.id, historyRow)\r\n                            }\r\n                          ></Delete>\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst Row = withSnackbar(RowComponent);\r\nexport const PlanListComponent = (props: any) => {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [planList, setPlanList] = React.useState<any>([]);\r\n  // const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  const fetchPlanList = () => {\r\n    axios\r\n      .get(\"/api/plan-list\")\r\n      .then((response: any) => {\r\n        setPlanList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchPlanList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [openLocation, setOpenLocation] = React.useState<boolean>(false);\r\n  const [plan, setPlan] = React.useState<any>();\r\n\r\n  const openLocationModal = (row: any) => {\r\n    setOpenLocation(true);\r\n    setPlan(row);\r\n  };\r\n  const handleModalOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleModalClose = (refresh: any) => {\r\n    if (refresh) {\r\n      // fetchUserList();\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const handleModalLocationClose = (refresh: any) => {\r\n    if (refresh) {\r\n      // fetchUserList();\r\n    }\r\n    setOpenLocation(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Title>List of registered Plans</Title>\r\n      <TableContainer component={Paper}>\r\n        <CreateNewPlan\r\n          open={open}\r\n          handleClose={handleModalClose}\r\n          fetchPlanList={fetchPlanList}\r\n        ></CreateNewPlan>\r\n        <CreateNewPlanLocationDialog\r\n          fetchPlanList={fetchPlanList}\r\n          open={openLocation}\r\n          plan={plan}\r\n          handleClose={handleModalLocationClose}\r\n        ></CreateNewPlanLocationDialog>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell align=\"left\">\r\n                <b>Particulars</b>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <b>Remarks</b>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <IconButton>\r\n                  <Add onClick={handleModalOpen}></Add>\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {planList.map((row: any) => (\r\n              <Row\r\n                key={row.id}\r\n                row={row}\r\n                fetchPlanList={fetchPlanList}\r\n                openLocation={openLocation}\r\n                openLocationModal={openLocationModal}\r\n                handleModalLocationClose={handleModalLocationClose}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\nexport const PlanList = withSnackbar(PlanListComponent);\r\n","import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport Title from \"../Title\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function UserListComponent(props: any) {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [userList, setUserList] = React.useState<any>([]);\r\n  const [agentList, setAgentList] = React.useState<any>([]);\r\n  // const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  const fetchUserList = () => {\r\n    axios\r\n      .get(\"/api/getAllUsers\")\r\n      .then((response: any) => {\r\n        const agentList = response.data?.filter((row: any) => {\r\n          return row.role === \"Agent\";\r\n        });\r\n        setAgentList(agentList);\r\n        setUserList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  // const activateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User activated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\r\n  //     });\r\n  // };\r\n  // const deActivateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const deleteAccount = (user: any) => {\r\n    axios\r\n      .delete(\"/api/delete-user/\" + user.userId)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Deleted\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Delete User\", failureToast);\r\n      });\r\n  };\r\n  // const submitNewUser = (user: any) => {\r\n  //   console.log(user);\r\n  //   axios\r\n  //     .post(\"/api/v1/admin/user/add/\", user)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Added\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const sendmail = (user: any) => {\r\n    if (\r\n      user.loginUserName === undefined ||\r\n      user.loginUserName === null ||\r\n      user.loginUserName === \"\" ||\r\n      user.loginPassword === undefined ||\r\n      user.loginPassword === null ||\r\n      user.loginPassword === \"\"\r\n    ) {\r\n      alert(\r\n        \"Please make sure you have a valid username and password before you send the credentials.\"\r\n      );\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/api/generateLoginDetails\", user)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const updateUserAgentMapping = (user: any, loginUserName: any) => {\r\n    axios\r\n      .get(\"/api/updateUserAgentMapping/\" + user.userId + \"/\" + loginUserName)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Assigned Successfully\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable to assigned User to Agent\", failureToast);\r\n        fetchUserList();\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  // const [open, setOpen] = React.useState<any>(false);\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  //   fetchUserList();\r\n  // };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Title style={{ marginTop: \"20px\" }}>List of Customers</Title>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Title\r\n            style={{ marginTop: \"20px\", textAlign: \"right\", cursor: \"pointer\" }}\r\n          >\r\n            {/* <Tooltip title=\"Add\">\r\n              <Add onClick={handleOpen}></Add>\r\n            </Tooltip>\r\n            <CreateNewUserDialog\r\n              open={open}\r\n              type=\"Customer\"\r\n              handleClose={handleClose}\r\n            ></CreateNewUserDialog> */}\r\n          </Title>\r\n        </Grid>\r\n      </Grid>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>User Name</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell>Assign To Agent</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {userList\r\n            ?.filter((row: any) => {\r\n              return row.role === \"Customer\";\r\n            })\r\n            ?.map((row: any) => (\r\n              <TableRow key={row.userId}>\r\n                <TableCell>{row.userEmail}</TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    autoComplete=\"loginUserName\"\r\n                    name=\"loginUserName\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    id=\"loginUserName\"\r\n                    defaultValue={row.loginUserName}\r\n                    onChange={(event: any) => {\r\n                      row.loginUserName = event.target.value;\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    autoComplete=\"loginPassword\"\r\n                    name=\"loginPassword\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    id=\"loginPassword\"\r\n                    defaultValue={row.loginPassword}\r\n                    onChange={(event: any) => {\r\n                      row.loginPassword = event.target.value;\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Select\r\n                    style={{ marginLeft: \"30px\", marginBottom: \"9px\" }}\r\n                    value={row.assignedToAgent ? row.assignedToAgent : \"\"}\r\n                    onChange={(event: any, data: any) => {\r\n                      updateUserAgentMapping(row, event.target.value);\r\n                    }}\r\n                  >\r\n                    {agentList.map((agent: any) => {\r\n                      return (\r\n                        <MenuItem\r\n                          value={agent.loginUserName}\r\n                          key={agent.loginUserName}\r\n                        >\r\n                          {agent.loginUserName}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={() => sendmail(row)}\r\n                  >\r\n                    Send Credentials\r\n                  </Button>\r\n                  <IconButton\r\n                    aria-label=\"DeleteIcon\"\r\n                    onClick={() => {\r\n                      deleteAccount(row);\r\n                    }}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                  {/* {!row.enabled ? (\r\n                  <IconButton\r\n                    aria-label=\"PlayCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      activateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PlayCircleFilledIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label=\"PauseCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      deActivateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PauseCircleFilledIcon />\r\n                  </IconButton>\r\n                )}\r\n                \r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton> */}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const UserList = withSnackbar(UserListComponent);\r\n","import {\r\n  Collapse,\r\n  createStyles,\r\n  List,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Queue } from \"@material-ui/icons\";\r\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\";\r\n// import AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\n// import LayersIcon from \"@material-ui/icons/Layers\";\r\n// import LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n// import ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport React from \"react\";\r\n\r\nexport const MainListItems = () => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const admin = role === \"Admin\";\r\n  return admin ? (\r\n    <div>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/home\">\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/order-list\">\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Applications\" />\r\n      </ListItem>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/order-list\">\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Applications\" />\r\n      </ListItem>\r\n      {role !== \"Agent\" && (\r\n        <ListItem button component=\"a\" href=\"/#/dashboard/apply-for-gst\">\r\n          <ListItemIcon>\r\n            <AccessibilityIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Apply For GST\" />\r\n        </ListItem>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\nexport const SecondaryListItems = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const classes = useStyles();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const admin = role === \"Admin\";\r\n  return (\r\n    <>\r\n      {admin && (\r\n        <div>\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n              <SupervisorAccountIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Admin\" />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/userList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PersonOutlineIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customer List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/agentList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PersonIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Agent List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/adminList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <RecordVoiceOverIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Admin List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/planList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <Queue />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Plan List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\"#3F51B5\",\n    opacity:1\n  },\n}));\n\nexport const StickyFooter = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={\"footer\"}>\n      <footer className={classes.footer}>\n        <Grid container>\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\n            <Typography\n              variant=\"body1\"\n              style={{ color: \"white\", margin: \"auto\" }}\n            >\n              Copyright © 2021 Spiraea. All Rights Reserved (A){\" \"}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\n            <Typography variant=\"body1\">\n              <img\n                src=\"/NextSAA-Logo1.png\"\n                alt=\"\"\n                style={{ height: \"30px\" }}\n              ></img>\n            </Typography>\n          </Grid>\n        </Grid>\n      </footer>\n    </div>\n  );\n};\n","import {\r\n  AppBar,\r\n  Container,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { secondaryRoutes } from \"../routes/routes\";\r\nimport { MainListItems, SecondaryListItems } from \"./ListItems\";\r\nimport { StickyFooter } from \"./StickyFooter\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    minWidth: \"700px\",\r\n    display: \"flex\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: \"100%\",\r\n    marginLeft: drawerWidth,\r\n    // width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: \"200px\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [\r\n    mobileMoreAnchorEl,\r\n    setMobileMoreAnchorEl,\r\n  ] = React.useState<null | HTMLElement>(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = (event: any) => {\r\n    if (event.target.innerText === \"Logout\") {\r\n      history.push(\"/signIn\");\r\n      // history.push(\"/api/auth/logout\");\r\n    } else if (event.target.innerText === \"Profile\") {\r\n      history.push(\"/dashboard/profile\");\r\n      // history.push(\"/api/auth/profile\");\r\n    }\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const user = sessionStorage.getItem(\"user\");\r\n  if (role === null || user === null) {\r\n    history.push(\"/signIn\");\r\n  }\r\n  // const admin = role === \"Admin\";\r\n  const navigate = (url: string) => {\r\n    history.push(url);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            onClick={() => navigate(\"/#/dashboard/home\")}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            Welcome {sessionStorage.getItem(\"user\")}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <img\r\n            alt=\"\"\r\n            src=\"/spiraea-logo-bw-web-1.png\"\r\n            style={{ height: \"50px\", marginRight: \"130px\" }}\r\n          />\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          {/* <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton> */}\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MainListItems></MainListItems>\r\n        </List>\r\n        <Divider />\r\n        <SecondaryListItems></SecondaryListItems>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container>\r\n            <Switch>\r\n              {secondaryRoutes.map((route: any) => {\r\n                return (\r\n                  <Route path={route.path} key={route.path} exact>\r\n                    {route.component}\r\n                  </Route>\r\n                );\r\n              })}\r\n            </Switch>\r\n          </Grid>\r\n        </Container>\r\n        <StickyFooter />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\nimport { StickyFooter } from \"./StickyFooter\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignupSchema = Yup.object().shape({\n  userEmail: Yup.string().email(\"Invalid Email\").required(\"Required\"),\n});\nexport function ForgotPasswordComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n  function navigateToLogin() {\n    history.push(\"/signin\");\n  }\n  const signUpSubmit = (values: any) => {\n    axios\n      .get(\"/api/forgot-password/\" + values.userEmail)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\n          \"Credentials sent on the registered mail\",\n          successToast\n        );\n        navigateToLogin();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <img\n            alt=\"\"\n            src=\"/spiraea-logo-bw-web-1.png\"\n            style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            Forgot password\n          </Typography>\n          <Formik\n            initialValues={{\n              userEmail: \"\",\n              mobile: \"\",\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values: any) => {\n              signUpSubmit(values);\n            }}\n          >\n            {({ errors, touched, values, handleChange, setFieldValue }) => (\n              // obj: any\n              <Form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"userEmail\"\n                      label=\"Email Address\"\n                      name=\"userEmail\"\n                      autoComplete=\"userEmail\"\n                      onChange={handleChange}\n                      value={values.userEmail}\n                      error={\n                        errors.userEmail && touched.userEmail ? true : false\n                      }\n                      helperText={touched.userEmail && errors.userEmail}\n                    />\n                  </Grid>\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Request\n                </Button>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"/#/signIn\" variant=\"body2\">\n                      Back to Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </Container>\n      <StickyFooter />\n    </>\n  );\n}\nexport const ForgotPassword = withSnackbar(ForgotPasswordComponent);\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React from \"react\";\n\nexport const ViewDocumentDialogComponent = (props: any) => {\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img\n              src={\"/api/document/downloadFile/\" + props.name}\n              alt=\"\"\n              style={{ height: \"50vh\" }}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { Send, VerifiedUser } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport { withSnackbar } from \"notistack\";\r\n// Import React FilePond\r\nimport React from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nfunction validateEmail(email: any) {\r\n  var re = /\\S+@\\S+\\.\\S+/;\r\n  return re.test(email);\r\n}\r\n\r\nfunction EmailVerificationComponent(props: any) {\r\n  const sendVerificationMail = () => {\r\n    const emailValid = validateEmail(props.value);\r\n    if (!emailValid) {\r\n      props.enqueueSnackbar(\"Invalid Email : \" + props.value, failureToast);\r\n    } else {\r\n      let url =\r\n        \"/api/send-validation-mail/\" +\r\n        props.type +\r\n        \"/\" +\r\n        props.subType +\r\n        \"/\" +\r\n        props.id;\r\n      axios\r\n        .get(url)\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Verification Mail Sent Successfully\",\r\n            successToast\r\n          );\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.error, failureToast);\r\n        });\r\n    }\r\n  };\r\n  // console.log(props.id);\r\n  // props.subType\r\n  // props.type\r\n  // props.value\r\n  return (\r\n    <>\r\n      <span style={{ float: \"right\", marginTop: \"25px\" }}>\r\n        {props.id && (\r\n          <>\r\n            <Send\r\n              titleAccess=\"Send Verification Mail\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                sendVerificationMail();\r\n              }}\r\n            ></Send>\r\n          </>\r\n        )}\r\n\r\n        {props?.verificationObject?.verified && (\r\n          <VerifiedUser\r\n            titleAccess=\"User Verified\"\r\n            style={{ color: \"green\", cursor: \"pointer\" }}\r\n          ></VerifiedUser>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\nexport const EmailVerification = withSnackbar(EmailVerificationComponent);\r\n","import { Grid, Tooltip } from \"@material-ui/core\";\r\nimport { GetApp, Visibility } from \"@material-ui/icons\";\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n// Import React FilePond\r\nimport { FilePond } from \"react-filepond\";\r\nimport React from \"react\";\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\n\r\n// Register the plugins\r\n// Our app\r\nexport function FileUpload(props: any) {\r\n  const stripAndShowFileName = (fileName: any) => {\r\n    if (fileName) {\r\n      return (\r\n        fileName.substring(0, fileName.lastIndexOf(\"--==\")) +\r\n        fileName.substring(fileName.lastIndexOf(\".\"), fileName.length)\r\n      );\r\n    }\r\n  };\r\n  // const title = props.fieldName;\r\n\r\n  const files: any = [\r\n    {\r\n      source: stripAndShowFileName(props.field),\r\n      options: {\r\n        type: \"local\",\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={10}>\r\n        {props.title}\r\n        <FilePond\r\n          labelFileSizeNotAvailable=\"\"\r\n          files={props.field ? files : null}\r\n          allowReorder={false}\r\n          allowMultiple={false}\r\n          maxFiles={1}\r\n          onupdatefiles={(filea: any) => {\r\n            if (filea.length === 0) {\r\n              props.setFieldValue(props.fieldName, null);\r\n            }\r\n            // else if (\r\n            //   filea.length > 0 &&\r\n            //   filea[0]?.file?.size > 100000 &&\r\n            //   props?.fieldName?.includes(\"partnerPhoto\")\r\n            // ) {\r\n            //   alert(\"Partner photo is too big\");\r\n            //   props.setFieldValue(props.fieldName, null);\r\n            // }\r\n          }}\r\n          server={{\r\n            process: {\r\n              url: \"/api/document/uploadFile\",\r\n              onload: (response: any) => {\r\n                // props.upload(props.field, response.key);\r\n                // return response.key;\r\n                console.log(response);\r\n                props.setFieldValue(props.fieldName, response);\r\n                return stripAndShowFileName(response);\r\n              },\r\n            },\r\n          }}\r\n          name=\"file\"\r\n          labelIdle={'<span class=\"filepond--label-action\">Browse</span>'}\r\n        />\r\n        {props.error ? (\r\n          <span\r\n            className=\"MuiFormHelperText-root Mui-error Mui-required MuiFormHelperText-marginDense\"\r\n            style={{ color: \"red\" }}\r\n          >\r\n            Required\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={2} style={{ padding: \"0px\" }}>\r\n        {props.field && (\r\n          <div>\r\n            <Tooltip title=\"View\">\r\n              <Visibility\r\n                className=\"file-action-icon\"\r\n                onClick={() => {\r\n                  props.setImageName(props.field);\r\n                  props.setOpen(true);\r\n                }}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Download\">\r\n              <GetApp\r\n                className=\"file-action-icon\"\r\n                onClick={() => {\r\n                  props.downloadReport(props.field);\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\nfunction buildSchema() {\n  const shape: any = {\n    firmName: Yup.string().required(\"Required\"),\n    legalbusinessName: Yup.string().required(\"Required\"),\n    tradeName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\n    panphoto: Yup.string().required(\"Required\"),\n    composition: Yup.string().required(\"Required\"),\n    commencementDate: Yup.date().required(\"Required\"),\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\n\n    // branchname: Yup.string().required(\"Required\"),\n    accountnumber: Yup.string().required(\"Required\"),\n    ifsccode: Yup.string().required(\"Required\"),\n    cancelcheqphoto: Yup.string().required(\"Required\"),\n    // tradelicensenumber: Yup.string().required(\"Required\"),\n    // tradelicensephoto: Yup.string().required(\"Required\"),\n    certificateOfIncorportation: Yup.string().required(\"Required\"),\n    pannumber: Yup.string()\n      .required(\"Please enter your Pan Number\")\n      .matches(panRegex, \"Invalid Pan Number\"),\n    numberOfDirectors: Yup.number()\n      .required(\"Please enter No Of Partners\")\n      .min(1, \"Minimum 1 number of Partners\")\n      .max(15, \"Maximum 15 number of Partners\"),\n  };\n  [...Array(15)].forEach((value: any, index: any) => {\n    shape[\"directorName\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"directorDin\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"directorFatherName\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"directorAadharNo\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter Aadhar Number\")\n        .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n    });\n    shape[\"directorAadharPhotoCopyFront\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"directorAadharPhotoCopyBack\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"pannumber\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter your Pan Number\")\n        .matches(panRegex, \"Invalid Pan Number\"),\n    });\n    shape[\"pannumberCopy\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"directorResidentialAddress\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"directorPhoto\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    // shape[\"partnerMobile\" + index] = Yup.number().when(\"numberOfDirectors\", {\n    //   is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n    //   then: Yup.number().required(\"Required\"),\n    // });\n    // shape[\"partnerEmail\" + index] = Yup.string()\n    //   .email(\"Invalid\")\n    //   .when(\"numberOfDirectors\", {\n    //     is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n    //     then: Yup.string().email(\"Invalid\").required(\"Required\"),\n    //   });\n  });\n  return Yup.object().shape(shape);\n}\nexport const schema = buildSchema();\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/CompanySchema\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CompanyComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Company/\" + id)\r\n      .then((response: any) => {\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        response.data.directorList.forEach((director: any, index: any) => {\r\n          response.data[\"id\" + index] = director.id;\r\n          response.data[\"directorName\" + index] = director.directorName;\r\n          response.data[\"directorDin\" + index] = director.directorDin;\r\n          response.data[\"directorFatherName\" + index] =\r\n            director.directorFatherName;\r\n          response.data[\"directorAadharNo\" + index] = director.directorAadharNo;\r\n          response.data[\"directorAadharPhotoCopyFront\" + index] =\r\n            director.directorAadharPhotoCopyFront;\r\n          response.data[\"directorAadharPhotoCopyBack\" + index] =\r\n            director.directorAadharPhotoCopyBack;\r\n          response.data[\"pannumber\" + index] = director.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = director.pannumberCopy;\r\n          response.data[\"directorResidentialAddress\" + index] =\r\n            director.directorResidentialAddress;\r\n          response.data[\"directorPhoto\" + index] = director.directorPhoto;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            director.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfDirectors = response.data.directorList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Error fetching order details\", failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Company/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Company/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"directorPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", event.currentTarget.files[0]);\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const directorList: any = [];\r\n    [...Array(values.numberOfDirectors)].forEach((value: any, index: any) => {\r\n      directorList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        directorName: values[\"directorName\" + index],\r\n        directorDin: values[\"directorDin\" + index],\r\n        directorFatherName: values[\"directorFatherName\" + index],\r\n        directorAadharNo: values[\"directorAadharNo\" + index],\r\n        directorAadharPhotoCopyFront:\r\n          values[\"directorAadharPhotoCopyFront\" + index],\r\n        directorAadharPhotoCopyBack:\r\n          values[\"directorAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        directorResidentialAddress:\r\n          values[\"directorResidentialAddress\" + index],\r\n        directorPhoto: values[\"directorPhoto\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n\r\n    const directorListAuthorised = directorList\r\n      .map((p: any) => p.isAuthorisedSignatory)\r\n      .filter((p: any) => p);\r\n    if (directorListAuthorised?.length === 0) {\r\n      alert(\"Please select atleast on Authorised Director\");\r\n      return;\r\n    }\r\n    if (directorListAuthorised?.length > 1) {\r\n      alert(\"Only one Partner can be Authorised Director\");\r\n      return;\r\n    }\r\n\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n\r\n    values.directorList = directorList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-company-details\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-company-details\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  let valuesForDirectors: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForDirectors[\"directorName\" + index] = \"\";\r\n    valuesForDirectors[\"directorDin\" + index] = \"\";\r\n    valuesForDirectors[\"directorFatherName\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharNo\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForDirectors[\"pannumber\" + index] = \"\";\r\n    valuesForDirectors[\"pannumberCopy\" + index] = \"\";\r\n    valuesForDirectors[\"directorResidentialAddress\" + index] = \"\";\r\n    valuesForDirectors[\"directorPhoto\" + index] = \"\";\r\n    valuesForDirectors[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Company\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      certificateOfIncorportation: \"\",\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      isActive: true,\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfDirectors: 1,\r\n                      ...valuesForDirectors,\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the Company\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"Company\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number of Company\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"PAN Photo\"\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Photo\"\r\n                          error={\r\n                            errors.pricipleelectricityphoto &&\r\n                            touched.pricipleelectricityphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"Priciple Rent Photo\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"\"\r\n                          error={\r\n                            errors.priciplerentphoto &&\r\n                            touched.priciplerentphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"Priciple NOC Photo\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"\"\r\n                          error={\r\n                            errors.priciplenocphoto && touched.priciplenocphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                        error={\r\n                          errors.additionalelectricityphoto &&\r\n                          touched.additionalelectricityphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                        error={\r\n                          errors.additionalrentphoto &&\r\n                          touched.additionalrentphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                        error={\r\n                          errors.additionalnocphoto &&\r\n                          touched.additionalnocphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfDirectors\"\r\n                        label=\"Number of Director\"\r\n                        name=\"numberOfDirectors\"\r\n                        autoComplete=\"numberOfDirectors\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfDirectors}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfDirectors && touched.numberOfDirectors\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfDirectors && errors.numberOfDirectors\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfDirectors)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorName\" + index}\r\n                                label={\"Director's \" + (index + 1) + \" Name\"}\r\n                                name={\"directorName\" + index}\r\n                                autoComplete={\"directorName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorName\" + index] &&\r\n                                  touched[\"directorName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorName\" + index] &&\r\n                                  errors[\"directorName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Director \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorDin\" + index}\r\n                                label={\"DIN of Director \" + (index + 1)}\r\n                                name={\"directorDin\" + index}\r\n                                autoComplete={\"directorDin\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorDin\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorDin\" + index] &&\r\n                                  touched[\"directorDin\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorDin\" + index] &&\r\n                                  errors[\"directorDin\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorFatherName\" + index}\r\n                                label={\r\n                                  \"Director \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"directorFatherName\" + index}\r\n                                autoComplete={\"directorFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorFatherName\" + index] &&\r\n                                  touched[\"directorFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorFatherName\" + index] &&\r\n                                  errors[\"directorFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Director \" + (index + 1)}\r\n                                name={\"directorAadharNo\" + index}\r\n                                autoComplete={\"directorAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorAadharNo\" + index] &&\r\n                                  touched[\"directorAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorAadharNo\" + index] &&\r\n                                  errors[\"directorAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"directorAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title=\"\"\r\n                                  error={\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"directorAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title=\"\"\r\n                                  error={\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Director \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"pannumberCopy\" + index}\r\n                                field={values[\"pannumberCopy\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address of Director\" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"directorResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"directorResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"directorResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\r\n                                    \"directorResidentialAddress\" + index\r\n                                  ] &&\r\n                                  touched[\"directorResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"directorResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"directorResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"directorPhoto\" + index}\r\n                                field={values[\"directorPhoto\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"certificateOfIncorportation\"}\r\n                        field={values.certificateOfIncorportation}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"declarationOfAuthorisedSignatory\"}\r\n                          field={values.declarationOfAuthorisedSignatory}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const Company = withSnackbar(CompanyComponent);\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\nfunction buildSchema() {\n  const shape: any = {\n    firmName: Yup.string().required(\"Required\"),\n    legalbusinessName: Yup.string().required(\"Required\"),\n    tradeName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\n    panphoto: Yup.string().required(\"Required\"),\n    composition: Yup.string().required(\"Required\"),\n    commencementDate: Yup.date().required(\"Required\"),\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\n    // principleplace: Yup.string().required(\"Required\"),\n    // pricipleelectricityphoto: Yup.string().required(\"Required\"),\n    // priciplerentphoto: Yup.string().required(\"Required\"),\n    // priciplenocphoto: Yup.string().required(\"Required\"),\n    // additionalplace: Yup.string().required(\"Required\"),\n    // additionalelectricityphoto: Yup.string().required(\"Required\"),\n    // additionalrentphoto: Yup.string().required(\"Required\"),\n    // additionalnocphoto: Yup.string().required(\"Required\"),\n    // branchname: Yup.string().required(\"Required\"),\n    accountnumber: Yup.string().required(\"Required\"),\n    ifsccode: Yup.string().required(\"Required\"),\n    cancelcheqphoto: Yup.string().required(\"Required\"),\n    // tradelicensenumber: Yup.string().required(\"Required\"),\n    // tradelicensephoto: Yup.string().required(\"Required\"),\n    certificateOfIncorportation: Yup.string().required(\"Required\"),\n    pannumber: Yup.string()\n      .required(\"Please enter your Pan Number\")\n      .matches(panRegex, \"Invalid Pan Number\"),\n    numberOfPartners: Yup.number()\n      .required(\"Please enter No Of Partners\")\n      .min(1, \"Minimum 1 number of Partners\")\n      .max(15, \"Maximum 15 number of Partners\"),\n  };\n  [...Array(15)].forEach((value: any, index: any) => {\n    shape[\"partnerName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerFatherName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerAadharNo\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter Aadhar Number\")\n        .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n    });\n    shape[\"partnerAadharPhotoCopyFront\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerAadharPhotoCopyBack\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"pannumber\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter your Pan Number\")\n        .matches(panRegex, \"Invalid Pan Number\"),\n    });\n    shape[\"pannumberCopy\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerResidentialAddress\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerPhoto\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    shape[\"partnerMobile\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerEmail\" + index] = Yup.string()\n      .email(\"Invalid\")\n      .when(\"numberOfPartners\", {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().email(\"Invalid\").required(\"Required\"),\n      });\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n  });\n  return Yup.object().shape(shape);\n}\nexport const schema = buildSchema();\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/LLPSchema\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\nconst LLPComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/LLP/\" + id)\r\n      .then((response: any) => {\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        response.data.partnerList.forEach((partner: any, index: any) => {\r\n          response.data[\"partnerName\" + index] = partner.partnerName;\r\n          response.data[\"partnerFatherName\" + index] =\r\n            partner.partnerFatherName;\r\n          response.data[\"partnerAadharNo\" + index] = partner.partnerAadharNo;\r\n          response.data[\"partnerAadharPhotoCopyFront\" + index] =\r\n            partner.partnerAadharPhotoCopyFront;\r\n          response.data[\"partnerAadharPhotoCopyBack\" + index] =\r\n            partner.partnerAadharPhotoCopyBack;\r\n          response.data[\"pannumber\" + index] = partner.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = partner.pannumberCopy;\r\n          response.data[\"partnerResidentialAddress\" + index] =\r\n            partner.partnerResidentialAddress;\r\n          response.data[\"partnerPhoto\" + index] = partner.partnerPhoto;\r\n          response.data[\"partnerMobile\" + index] = partner.partnerMobile;\r\n          response.data[\"partnerEmail\" + index] = partner.partnerEmail;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            partner.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfPartners = response.data.partnerList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Error fetching order details\", failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/LLP/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/LLP/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"partnerPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const partnerList: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      partnerList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        partnerName: values[\"partnerName\" + index],\r\n        partnerFatherName: values[\"partnerFatherName\" + index],\r\n        partnerAadharNo: values[\"partnerAadharNo\" + index],\r\n        partnerAadharPhotoCopyFront:\r\n          values[\"partnerAadharPhotoCopyFront\" + index],\r\n        partnerAadharPhotoCopyBack:\r\n          values[\"partnerAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        partnerResidentialAddress: values[\"partnerResidentialAddress\" + index],\r\n        partnerPhoto: values[\"partnerPhoto\" + index],\r\n        partnerMobile: values[\"partnerMobile\" + index],\r\n        partnerEmail: values[\"partnerEmail\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n\r\n    const partnerListEmail = partnerList.map((p: any) => p.partnerEmail);\r\n    const duplicates = partnerListEmail.filter(\r\n      (item: any, index: any) => partnerListEmail.indexOf(item) !== index\r\n    );\r\n    if (duplicates?.length > 0) {\r\n      alert(\"Duplicate Partner email found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n\r\n    const partnerListMobile = partnerList.map((p: any) => p.partnerMobile);\r\n    const duplicatesMobile = partnerListMobile.filter(\r\n      (item: any, index: any) => partnerListMobile.indexOf(item) !== index\r\n    );\r\n    if (duplicatesMobile?.length > 0) {\r\n      alert(\"Duplicate Partner Mobile No found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n\r\n    const partnerListAuthorised = partnerList\r\n      .map((p: any) => p.isAuthorisedSignatory)\r\n      .filter((p: any) => p);\r\n    if (partnerListAuthorised?.length === 0) {\r\n      alert(\"Please select atleast on Authorised Partner\");\r\n      return;\r\n    }\r\n    if (partnerListAuthorised?.length > 1) {\r\n      alert(\"Only one Partner can be Authorised Partner\");\r\n      return;\r\n    }\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n    values.partnerList = partnerList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-llp\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-llp\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  let valuesForPartners: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForPartners[\"partnerName\" + index] = \"\";\r\n    valuesForPartners[\"partnerFatherName\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharNo\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForPartners[\"pannumber\" + index] = \"\";\r\n    valuesForPartners[\"pannumberCopy\" + index] = \"\";\r\n    valuesForPartners[\"partnerResidentialAddress\" + index] = \"\";\r\n    valuesForPartners[\"partnerPhoto\" + index] = \"\";\r\n    valuesForPartners[\"partnerMobile\" + index] = \"\";\r\n    valuesForPartners[\"partnerEmail\" + index] = \"\";\r\n    valuesForPartners[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            LLP\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      certificateOfIncorportation: \"\",\r\n                      partnershipDeed: \"\",\r\n                      isActive: true,\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfPartners: 1,\r\n                      ...valuesForPartners,\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the LLP\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"LLP\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"PAN Card\"\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Bill\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplerentphoto\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Agreement\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplenocphoto\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple NOC format\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Electricity Bill\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Rent Agreement\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional NOC Agreement\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfPartners\"\r\n                        label=\"Number of Partner\"\r\n                        name=\"numberOfPartners\"\r\n                        autoComplete=\"numberOfPartners\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfPartners}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfPartners && touched.numberOfPartners\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfPartners && errors.numberOfPartners\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfPartners)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerName\" + index}\r\n                                label={\"Partner \" + (index + 1) + \" Name\"}\r\n                                name={\"partnerName\" + index}\r\n                                autoComplete={\"partnerName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerName\" + index] &&\r\n                                  touched[\"partnerName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerName\" + index] &&\r\n                                  errors[\"partnerName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Partner \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerFatherName\" + index}\r\n                                label={\r\n                                  \"Partner \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"partnerFatherName\" + index}\r\n                                autoComplete={\"partnerFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerFatherName\" + index] &&\r\n                                  touched[\"partnerFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerFatherName\" + index] &&\r\n                                  errors[\"partnerFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Partner \" + (index + 1)}\r\n                                name={\"partnerAadharNo\" + index}\r\n                                autoComplete={\"partnerAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerAadharNo\" + index] &&\r\n                                  touched[\"partnerAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerAadharNo\" + index] &&\r\n                                  errors[\"partnerAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title=\"\"\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\"partnerAadharPhotoCopyBack\" + index]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\r\n                                    \"Partner \" + (index + 1) + \" Adhar Back\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Partner \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"pannumberCopy\" + index}\r\n                                field={values[\"pannumberCopy\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"partnerResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerResidentialAddress\" + index] &&\r\n                                  touched[\"partnerResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"partnerResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"partnerPhoto\" + index}\r\n                                field={values[\"partnerPhoto\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                // type=\"number\"\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerMobile\" + index}\r\n                                label={\"Mobile of Partner \" + (index + 1)}\r\n                                name={\"partnerMobile\" + index}\r\n                                autoComplete={\"partnerMobile\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerMobile\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerMobile\" + index] &&\r\n                                  touched[\"partnerMobile\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerMobile\" + index] &&\r\n                                  errors[\"partnerMobile\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                style={{ maxWidth: \"80%\" }}\r\n                                fullWidth\r\n                                id={\"partnerEmail\" + index}\r\n                                label={\"Email of Partner \" + (index + 1)}\r\n                                name={\"partnerEmail\" + index}\r\n                                autoComplete={\"partnerEmail\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerEmail\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerEmail\" + index] &&\r\n                                  touched[\"partnerEmail\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerEmail\" + index] &&\r\n                                  errors[\"partnerEmail\" + index]\r\n                                }\r\n                              />\r\n                              <EmailVerification\r\n                                id={params.id}\r\n                                value={values.email}\r\n                                verificationObject={values.emailVerification}\r\n                                type={\"LLP\"}\r\n                                subType={\"Partner\"}\r\n                              ></EmailVerification>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"partnershipDeed\"}\r\n                        field={values.partnershipDeed}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"certificateOfIncorportation\"}\r\n                        field={values.certificateOfIncorportation}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"declarationOfAuthorisedSignatory\"}\r\n                          field={values.declarationOfAuthorisedSignatory}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const LLP = withSnackbar(LLPComponent);\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\nfunction buildSchema() {\n  const shape: any = {\n    firmName: Yup.string().required(\"Required\"),\n    legalbusinessName: Yup.string().required(\"Required\"),\n    tradeName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\n    panphoto: Yup.string().required(\"Required\"),\n    composition: Yup.string().required(\"Required\"),\n    commencementDate: Yup.date().required(\"Required\"),\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\n    // principleplace: Yup.string().required(\"Required\"),\n    // pricipleelectricityphoto: Yup.string().required(\"Required\"),\n    // priciplerentphoto: Yup.string().required(\"Required\"),\n    // priciplenocphoto: Yup.string().required(\"Required\"),\n    // additionalplace: Yup.string().required(\"Required\"),\n    // additionalelectricityphoto: Yup.string().required(\"Required\"),\n    // additionalrentphoto: Yup.string().required(\"Required\"),\n    // additionalnocphoto: Yup.string().required(\"Required\"),\n    // branchname: Yup.string().required(\"Required\"),\n    accountnumber: Yup.string().required(\"Required\"),\n    ifsccode: Yup.string().required(\"Required\"),\n    cancelcheqphoto: Yup.string().required(\"Required\"),\n    // tradelicensenumber: Yup.string().required(\"Required\"),\n    // tradelicensephoto: Yup.string().required(\"Required\"),\n    pannumber: Yup.string()\n      .required(\"Please enter your Pan Number\")\n      .matches(panRegex, \"Invalid Pan Number\"),\n    numberOfPartners: Yup.number()\n      .required(\"Please enter No Of Partners\")\n      .min(1, \"Minimum 1 number of Partners\")\n      .max(15, \"Maximum 15 number of Partners\"),\n  };\n  [...Array(15)].forEach((value: any, index: any) => {\n    shape[\"partnerName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerFatherName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerAadharNo\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter Aadhar Number\")\n        .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n    });\n    shape[\"partnerAadharPhotoCopyFront\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerAadharPhotoCopyBack\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"pannumber\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter your Pan Number\")\n        .matches(panRegex, \"Invalid Pan Number\"),\n    });\n    shape[\"pannumberCopy\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerResidentialAddress\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerPhoto\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    shape[\"partnerMobile\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerEmail\" + index] = Yup.string()\n      .email(\"Invalid\")\n      .when(\"numberOfPartners\", {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().email(\"Invalid\").required(\"Required\"),\n      });\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n  });\n  return Yup.object().shape(shape);\n}\nexport const schema = buildSchema();\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/PartnerSchema\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\nconst PartnershipComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Partnership/\" + id)\r\n      .then((response: any) => {\r\n        response.data.partnerList.forEach((partner: any, index: any) => {\r\n          response.data[\"id\" + index] = partner.id;\r\n          response.data[\"partnerName\" + index] = partner.partnerName;\r\n          response.data[\"partnerFatherName\" + index] =\r\n            partner.partnerFatherName;\r\n          response.data[\"partnerAadharNo\" + index] = partner.partnerAadharNo;\r\n          response.data[\"partnerAadharPhotoCopyFront\" + index] =\r\n            partner.partnerAadharPhotoCopyFront;\r\n          response.data[\"partnerAadharPhotoCopyBack\" + index] =\r\n            partner.partnerAadharPhotoCopyBack;\r\n          response.data[\"partnerResidentialAddress\" + index] =\r\n            partner.partnerResidentialAddress;\r\n          response.data[\"partnerPhoto\" + index] = partner.partnerPhoto;\r\n          response.data[\"partnerMobile\" + index] = partner.partnerMobile;\r\n          response.data[\"partnerEmail\" + index] = partner.partnerEmail;\r\n          response.data[\"pannumber\" + index] = partner.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = partner.pannumberCopy;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            partner.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfPartners = response.data.partnerList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Partnership/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Partnership/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"partnerPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const partnerList: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      partnerList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        partnerName: values[\"partnerName\" + index],\r\n        partnerFatherName: values[\"partnerFatherName\" + index],\r\n        partnerAadharNo: values[\"partnerAadharNo\" + index],\r\n        partnerAadharPhotoCopyFront:\r\n          values[\"partnerAadharPhotoCopyFront\" + index],\r\n        partnerAadharPhotoCopyBack:\r\n          values[\"partnerAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        partnerResidentialAddress: values[\"partnerResidentialAddress\" + index],\r\n        partnerPhoto: values[\"partnerPhoto\" + index],\r\n        partnerMobile: values[\"partnerMobile\" + index],\r\n        partnerEmail: values[\"partnerEmail\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n\r\n    const partnerListEmail = partnerList.map((p: any) => p.partnerEmail);\r\n    const duplicates = partnerListEmail.filter(\r\n      (item: any, index: any) => partnerListEmail.indexOf(item) !== index\r\n    );\r\n    if (duplicates?.length > 0) {\r\n      alert(\"Duplicate Partner email found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n    const partnerListMobile = partnerList.map((p: any) => p.partnerMobile);\r\n    const duplicatesMobile = partnerListMobile.filter(\r\n      (item: any, index: any) => partnerListMobile.indexOf(item) !== index\r\n    );\r\n    if (duplicatesMobile?.length > 0) {\r\n      alert(\"Duplicate Partner Mobile No found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n    const partnerListAuthorised = partnerList\r\n      .map((p: any) => p.isAuthorisedSignatory)\r\n      .filter((p: any) => p);\r\n    if (partnerListAuthorised?.length === 0) {\r\n      alert(\"Please select atleast on Authorised Partner\");\r\n      return;\r\n    }\r\n    if (partnerListAuthorised?.length > 1) {\r\n      alert(\"Only one Partner can be Authorised Partner\");\r\n      return;\r\n    }\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n    values.partnerList = partnerList;\r\n\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-partnership\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-partnership\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  let valuesForPartners: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForPartners[\"partnerName\" + index] = \"\";\r\n    valuesForPartners[\"partnerFatherName\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharNo\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForPartners[\"pannumber\" + index] = \"\";\r\n    valuesForPartners[\"pannumberCopy\" + index] = \"\";\r\n    valuesForPartners[\"partnerResidentialAddress\" + index] = \"\";\r\n    valuesForPartners[\"partnerPhoto\" + index] = \"\";\r\n    valuesForPartners[\"partnerMobile\" + index] = \"\";\r\n    valuesForPartners[\"partnerEmail\" + index] = \"\";\r\n    valuesForPartners[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  console.log(schema);\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Partnership\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      isActive: true,\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfPartners: 1,\r\n                      ...valuesForPartners,\r\n                      partnershipDeed: \"\",\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the Partnership Firm\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"Partnership\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number of Firm\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"PAN Card Photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Photo\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplerentphoto\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Agreement\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplenocphoto\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Principle NOC\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Electricity Bill\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Rent Agreement\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional NOC\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfPartners\"\r\n                        label=\"Number of Partner\"\r\n                        name=\"numberOfPartners\"\r\n                        autoComplete=\"numberOfPartners\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfPartners}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfPartners && touched.numberOfPartners\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfPartners && errors.numberOfPartners\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfPartners)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerName\" + index}\r\n                                label={\"Partner \" + (index + 1) + \" Name\"}\r\n                                name={\"partnerName\" + index}\r\n                                autoComplete={\"partnerName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerName\" + index] &&\r\n                                  touched[\"partnerName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerName\" + index] &&\r\n                                  errors[\"partnerName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Partner \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerFatherName\" + index}\r\n                                label={\r\n                                  \"Partner \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"partnerFatherName\" + index}\r\n                                autoComplete={\"partnerFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerFatherName\" + index] &&\r\n                                  touched[\"partnerFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerFatherName\" + index] &&\r\n                                  errors[\"partnerFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Partner \" + (index + 1)}\r\n                                name={\"partnerAadharNo\" + index}\r\n                                autoComplete={\"partnerAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerAadharNo\" + index] &&\r\n                                  touched[\"partnerAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerAadharNo\" + index] &&\r\n                                  errors[\"partnerAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\r\n                                    \"Partner \" + (index + 1) + \" Adhar Front\"\r\n                                  }\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\"partnerAadharPhotoCopyBack\" + index]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\r\n                                    \"Partner \" + (index + 1) + \" Adhar Back\"\r\n                                  }\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Partner \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"pannumberCopy\" + index}\r\n                                values={values}\r\n                                field={values[\"pannumberCopy\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Partner \" + (index + 1) + \" PAN Card\"}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address Of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"partnerResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerResidentialAddress\" + index] &&\r\n                                  touched[\"partnerResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"partnerResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"partnerPhoto\" + index}\r\n                                field={values[\"partnerPhoto\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Partner \" + (index + 1) + \" Photo\"}\r\n                                error={\r\n                                  errors[\"partnerPhoto\" + index] &&\r\n                                  touched[\"partnerPhoto\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                // type=\"number\"\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerMobile\" + index}\r\n                                label={\"Mobile of Partner \" + (index + 1)}\r\n                                name={\"partnerMobile\" + index}\r\n                                autoComplete={\"partnerMobile\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerMobile\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerMobile\" + index] &&\r\n                                  touched[\"partnerMobile\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerMobile\" + index] &&\r\n                                  errors[\"partnerMobile\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                style={{ maxWidth: \"80%\" }}\r\n                                id={\"partnerEmail\" + index}\r\n                                label={\"Email of Partner \" + (index + 1)}\r\n                                name={\"partnerEmail\" + index}\r\n                                autoComplete={\"partnerEmail\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerEmail\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerEmail\" + index] &&\r\n                                  touched[\"partnerEmail\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerEmail\" + index] &&\r\n                                  errors[\"partnerEmail\" + index]\r\n                                }\r\n                              />\r\n                              <EmailVerification\r\n                                id={params.id}\r\n                                value={values.email}\r\n                                verificationObject={values.emailVerification}\r\n                                type={\"Partnership\"}\r\n                                subType={\"Partner\"}\r\n                              ></EmailVerification>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Cancelled Cheque\"\r\n                        error={\r\n                          errors.cancelcheqphoto && touched.cancelcheqphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"partnershipDeed\"}\r\n                        field={values.partnershipDeed}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Partnership Deed\"\r\n                        error={\r\n                          errors.partnershipDeed && touched.partnershipDeed\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Trade License Photo\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"declarationOfAuthorisedSignatory\"}\r\n                          field={values.declarationOfAuthorisedSignatory}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Declaration Of Authorised Signatory\"\r\n                          error={\r\n                            errors.declarationOfAuthorisedSignatory &&\r\n                            touched.declarationOfAuthorisedSignatory\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        type=\"number\"\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"GST \" + (index + 1) + \" Document\"}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const Partnership = withSnackbar(PartnershipComponent);\r\n","import * as Yup from \"yup\";\r\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\r\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\r\n\r\nfunction buildSchema() {\r\n  const shape: any = {\r\n    personName: Yup.string().required(\"Required\"),\r\n    legalbusinessName: Yup.string().required(\"Required\"),\r\n    tradeName: Yup.string().required(\"Required\"),\r\n    mobile: Yup.string().required(\"Required\"),\r\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\r\n    panphoto: Yup.string().required(\"Required\"),\r\n    soleProprietorPhoto: Yup.string().required(\"Required\"),\r\n    composition: Yup.string().required(\"Required\"),\r\n    commencementDate: Yup.date().required(\"Required\"),\r\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\r\n    // for Admin\r\n    // principleplace: Yup.string().required(\"Required\"),\r\n    // pricipleelectricityphoto: Yup.string().required(\"Required\"),\r\n    // priciplerentphoto: Yup.string().required(\"Required\"),\r\n    // priciplenocphoto: Yup.string().required(\"Required\"),\r\n    // additionalplace: Yup.string().required(\"Required\"),\r\n    // additionalelectricityphoto: Yup.string().required(\"Required\"),\r\n    // additionalrentphoto: Yup.string().required(\"Required\"),\r\n    // additionalnocphoto: Yup.string().required(\"Required\"),\r\n    propfatherName: Yup.string().required(\"Required\"),\r\n    propadharphotoFront: Yup.string().required(\"Required\"),\r\n    propadharphotoBack: Yup.string().required(\"Required\"),\r\n    resident_address: Yup.string().required(\"Required\"),\r\n    photo: Yup.string().required(\"Required\"),\r\n    // branchname: Yup.string().required(\"Required\"),\r\n    accountnumber: Yup.string().required(\"Required\"),\r\n    ifsccode: Yup.string().required(\"Required\"),\r\n    cancelcheqphoto: Yup.string().required(\"Required\"),\r\n    // tradelicensenumber: Yup.string().required(\"Required\"),\r\n    // tradelicensephoto: Yup.string().required(\"Required\"),\r\n\r\n    propadharnumber: Yup.string()\r\n      .required(\"Please enter Aadhar Number\")\r\n      .matches(aadharRegex, \"Invalid Aadhar Number (78XX 45XX 97XX)\"),\r\n\r\n    pannumber: Yup.string()\r\n      .required(\"Please enter your Pan Number\")\r\n      .matches(panRegex, \"Invalid Pan Number\"),\r\n  };\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\r\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\r\n      then: Yup.string().required(\"Required\"),\r\n    });\r\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\r\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\r\n      then: Yup.string().required(\"Required\"),\r\n    });\r\n  });\r\n  return Yup.object().shape(shape);\r\n}\r\nexport const schema = buildSchema();\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/SoleProprietorSchama\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SoleProprietorComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Proprietorship/\" + id)\r\n      .then((response: any) => {\r\n        // props.enqueueSnackbar(\"Order Rejected Successfull\", successToast);\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Proprietorship/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Proprietorship/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (event.currentTarget.files[0].size > 100000 && field === \"photo\") {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n    if (props.plan) {\r\n      values.paymentPlanDetailsId = props.plan.id;\r\n    } else if (orderDetails?.paymentPlanDetailsId) {\r\n      values.paymentPlanDetailsId = orderDetails?.paymentPlanDetailsId;\r\n    }\r\n    if (props.location) {\r\n      values.location = props.location;\r\n    } else if (orderDetails?.location) {\r\n      values.location = orderDetails?.location;\r\n    }\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-proprietorship\", { ...values })\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Application Submitted Successfully\",\r\n            successToast\r\n          );\r\n          history.push(\"/dashboard/order-list\");\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Error while submitting\", failureToast);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-proprietorship\", { ...values })\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Application Submitted Successfully\",\r\n            successToast\r\n          );\r\n          history.push(\"/dashboard/order-list\");\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Error while submitting\", failureToast);\r\n        });\r\n    }\r\n  };\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Sole Proprietor\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      personName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      soleProprietorPhoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      propfatherName: \"\",\r\n                      propadharnumber: \"\",\r\n                      propadharphotoFront: \"\",\r\n                      propadharphotoBack: \"\",\r\n                      resident_address: \"\",\r\n                      photo: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      isActive: true,\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      status: \"CREATED\",\r\n                      remark: \"\",\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                // obj: any\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"personName\"\r\n                        label=\"Name of the person\"\r\n                        name=\"personName\"\r\n                        autoComplete=\"personName\"\r\n                        onChange={handleChange}\r\n                        value={values.personName}\r\n                        error={\r\n                          errors.personName && touched.personName ? true : false\r\n                        }\r\n                        helperText={touched.personName && errors.personName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"soleProprietorPhoto\"}\r\n                        field={values.soleProprietorPhoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Proprietor Photo\"\r\n                        error={\r\n                          errors.soleProprietorPhoto &&\r\n                          touched.soleProprietorPhoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={10} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"Proprietorship\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Pan Photo\"\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Bill\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplerentphoto\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Agreement\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplenocphoto\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple NOC\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Electricity Bill\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Rent Agreement\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional NOC\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"propfatherName\"\r\n                        label=\"Proprietor's Father name\"\r\n                        name=\"propfatherName\"\r\n                        autoComplete=\"propfatherName\"\r\n                        onChange={handleChange}\r\n                        value={values.propfatherName}\r\n                        error={\r\n                          errors.propfatherName && touched.propfatherName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.propfatherName && errors.propfatherName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"propadharnumber\"\r\n                        label=\"Aadhaar No. of Proprietor\"\r\n                        name=\"propadharnumber\"\r\n                        autoComplete=\"propadharnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.propadharnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.propadharnumber && touched.propadharnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.propadharnumber && errors.propadharnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Grid item xs={12}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"propadharphotoFront\"}\r\n                          field={values.propadharphotoFront}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Proprietor Adhar Front\"\r\n                          error={\r\n                            errors.propadharphotoFront &&\r\n                            touched.propadharphotoFront\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"propadharphotoBack\"}\r\n                          field={values.propadharphotoBack}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Proprietor Adhar Back\"\r\n                          error={\r\n                            errors.propadharphotoBack &&\r\n                            touched.propadharphotoBack\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"resident_address\"\r\n                        label=\"Residential Address\"\r\n                        name=\"resident_address\"\r\n                        autoComplete=\"resident_address\"\r\n                        onChange={handleChange}\r\n                        value={values.resident_address}\r\n                        error={\r\n                          errors.resident_address && touched.resident_address\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.resident_address && errors.resident_address\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"photo\"}\r\n                        field={values.photo}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Proprietor Photo\"\r\n                        error={errors.photo && touched.photo ? true : false}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Cancel Cheque Photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Trade License Photo\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Gst Attachment \" + (index + 1)}\r\n                                error={\r\n                                  errors[\"gstAttachment\" + index] &&\r\n                                  touched[\"gstAttachment\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nexport const SoleProprietor = withSnackbar(SoleProprietorComponent);\r\n","import {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { Company } from \"./Company\";\nimport { LLP } from \"./LLP\";\nimport { Partnership } from \"./Partnership\";\nimport { SoleProprietor } from \"./SoleProprietor\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\n      width: 700,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport const ApplyForGstComponent = () => {\n  const classes = useStyles();\n  const [name, setName] = React.useState<any>(\"\");\n  const [planList, setPlanList] = React.useState<any>([]);\n  const [plan, setPlan] = React.useState<any>(\"\");\n  const [planLocationList, setPlanLocationList] = React.useState<any>([]);\n  const [planLocation, setPlanLocation] = React.useState<any>(\"\");\n  const [location, setLocation] = React.useState<any>(\"\");\n\n  const [dropdown, setDropdown] = React.useState(\"\");\n  const fetchPlanList = () => {\n    axios\n      .get(\"/api/plan-list\")\n      .then((response: any) => {\n        setPlanList(response.data);\n      })\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  const fetchStateList = () => {\n    axios\n      .get(\"/api/state-list\")\n      .then((response: any) => {\n        setPlanLocationList(response.data);\n      })\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  useEffect(() => {\n    fetchPlanList();\n    fetchStateList();\n    const name = sessionStorage.getItem(\"user\");\n    setName(name);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Apply For GST\n          </Typography>\n          <Grid container spacing={5}>\n            <Grid xs={6} item>\n              <TextField\n                size=\"small\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name of Business\"\n                name=\"name\"\n                autoComplete=\"name\"\n                value={name}\n                disabled\n                autoFocus\n              />\n            </Grid>\n            <Grid xs={6} item>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Constitution of Business\n                </InputLabel>\n                <Select\n                  margin=\"dense\"\n                  style={{ marginTop: \"16px\" }}\n                  id=\"demo-simple-select-helper\"\n                  onChange={(event: any, data: any) => {\n                    setDropdown(data?.props?.children);\n                  }}\n                >\n                  <MenuItem value={\"Proprietorship\"}>Proprietorship</MenuItem>\n                  <MenuItem value={\"Partnership\"}>Partnership</MenuItem>\n                  <MenuItem value={\"LLP\"}>LLP</MenuItem>\n                  <MenuItem value={\"Company\"}>Company</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Grid container spacing={5}>\n            <Grid xs={6} item>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Select a plan\n                </InputLabel>\n                <Select\n                  margin=\"dense\"\n                  style={{ marginTop: \"16px\" }}\n                  id=\"demo-simple-select-helper\"\n                  onChange={(event: any, data: any) => {\n                    // setPlanLocationList(data?.props?.value?.payplanLocation);\n                    setPlan(data?.props?.value);\n                  }}\n                >\n                  {planList.map((plan: any) => {\n                    return (\n                      <MenuItem value={plan} key={plan.id}>\n                        {plan.payplanname}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={6} item>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Select a Location\n                </InputLabel>\n                <Select\n                  margin=\"dense\"\n                  id=\"demo-simple-select-helper\"\n                  onChange={(event: any, data: any) => {\n                    setPlanLocation(data?.props?.value);\n                    setLocation(data.props.children);\n                  }}\n                >\n                  {planLocationList.map((plan: any) => {\n                    return <MenuItem value={plan}>{plan.name}</MenuItem>;\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid container spacing={5} style={{ padding: \"26px\" }}>\n              <Grid xs={12} item>\n                <b>Remarks : </b>\n                {plan.remarks}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"Proprietorship\" && (\n            <SoleProprietor plan={plan} location={location} />\n          )}\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"Partnership\" && (\n            <Partnership plan={plan} location={location} />\n          )}\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"LLP\" && <LLP plan={plan} location={location} />}\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"Company\" && (\n            <Company plan={plan} location={location} />\n          )}\n      </main>\n    </React.Fragment>\n  );\n};\n","import {\r\n  Button,\r\n  IconButton,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Search, Visibility } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../util/util\";\r\nimport Title from \"./Title\";\r\nimport { ViewDocumentDialogComponent } from \"./ViewDocumentDialog\";\r\n\r\nfunction OrderListComponent(props: any) {\r\n  const [orderList, setOrderList] = React.useState<any>([]);\r\n  const [orderType, setOrderType] = React.useState(\"All\");\r\n  const history = useHistory();\r\n  const fetchOrderList = () => {\r\n    let url = \"\";\r\n    if (sessionStorage.getItem(\"role\") === \"Customer\") {\r\n      url =\r\n        \"/api/get-order/\" + orderType + \"/\" + sessionStorage.getItem(\"user\");\r\n    } else if (sessionStorage.getItem(\"role\") === \"Agent\") {\r\n      url =\r\n        \"/api/get-all-order/\" +\r\n        orderType +\r\n        \"/\" +\r\n        sessionStorage.getItem(\"user\");\r\n    } else {\r\n      url = \"/api/get-all-order/\" + orderType;\r\n    }\r\n    let params = {};\r\n    if (searchText && searchText !== \"\") {\r\n      params = {\r\n        params: {\r\n          searchText: `%${searchText}%`,\r\n        },\r\n      };\r\n    }\r\n    axios\r\n      .get(url, params)\r\n      .then((response: any) => {\r\n        setOrderList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const view = (row: any) => {\r\n    if (row.proprietorshipid) {\r\n      history.push(\"/dashboard/sole-proprietor/\" + row.proprietorshipid);\r\n    } else if (row.partnershipid) {\r\n      history.push(\"/dashboard/partnership/\" + row.partnershipid);\r\n    } else if (row.llpid) {\r\n      history.push(\"/dashboard/llp/\" + row.llpid);\r\n    } else if (row.companydetailsid) {\r\n      history.push(\"/dashboard/company/\" + row.companydetailsid);\r\n    }\r\n  };\r\n  function loadScript(src: any) {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async function displayRazorpay(row: any) {\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n    const razor = JSON.parse(row.razorpayOrder);\r\n    const options = {\r\n      key: \"rzp_test_4zyGtu09Yf3TwL\", // Enter the Key ID generated from the Dashboard\r\n      amount: razor.amount,\r\n      currency: razor.currency,\r\n      name: \"spiraea\",\r\n      description: \"Test Transaction\",\r\n      image: \"/spiraea-logo-bw-web-1.png\",\r\n      order_id: razor.id,\r\n      handler: async function (response: any) {\r\n        axios\r\n          .get(\r\n            \"/api/get-order/\" +\r\n              orderTypeText(row) +\r\n              \"/\" +\r\n              orderTypeId(row) +\r\n              \"/PAID/\"\r\n          )\r\n          .then((response: any) => {\r\n            props.enqueueSnackbar(\"Order Successfully\", successToast);\r\n            fetchOrderList();\r\n          })\r\n          .catch((reponse: any) => {\r\n            props.enqueueSnackbar(\"Order Was not paid\", failureToast);\r\n          });\r\n        console.log(response);\r\n      },\r\n      theme: {\r\n        color: \"#61dafb\",\r\n      },\r\n    };\r\n    const w: any = window;\r\n    const paymentObject = new w.Razorpay(options);\r\n    paymentObject.open();\r\n  }\r\n  useEffect(() => {\r\n    fetchOrderList();\r\n  }, [orderType]); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const upload = (event: any, row: any) => {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    axios\r\n      .post(\"/api/document/uploadFile\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response: any) => {\r\n        const documentUrl = response.data;\r\n        axios\r\n          .get(\r\n            \"/api/get-order/gst/\" +\r\n              orderTypeText(row) +\r\n              \"/\" +\r\n              orderTypeId(row) +\r\n              \"/\" +\r\n              documentUrl\r\n          )\r\n          .then((response: any) => {\r\n            props.enqueueSnackbar(\r\n              \"Document Uploaded Successfully\",\r\n              successToast\r\n            );\r\n          })\r\n          .catch((reponse: any) => {\r\n            props.enqueueSnackbar(reponse.message, failureToast);\r\n            event.target.value = \"\";\r\n          });\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Failed to upload the Document\", failureToast);\r\n      });\r\n  };\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const orderTypeText = (row: any) => {\r\n    if (row.proprietorshipid) {\r\n      return \"Proprietorship\";\r\n    } else if (row.partnershipid) {\r\n      return \"Partnership\";\r\n    } else if (row.llpid) {\r\n      return \"LLP\";\r\n    } else if (row.companydetailsid) {\r\n      return \"Company\";\r\n    }\r\n  };\r\n  const orderTypeId = (row: any) => {\r\n    if (row.proprietorshipid) {\r\n      return row.proprietorshipid;\r\n    } else if (row.partnershipid) {\r\n      return row.partnershipid;\r\n    } else if (row.llpid) {\r\n      return row.llpid;\r\n    } else if (row.companydetailsid) {\r\n      return row.companydetailsid;\r\n    }\r\n  };\r\n  const search = () => {\r\n    fetchOrderList();\r\n    // let formData = new FormData();\r\n    // formData.append(\"file\", event.currentTarget.files[0]);\r\n    // axios\r\n    //   .post(\"/api/document/uploadFile\", formData, {\r\n    //     headers: {\r\n    //       \"Content-Type\": \"multipart/form-data\",\r\n    //     },\r\n    //   })\r\n    //   .then((response: any) => {\r\n    //     const documentUrl = response.data;\r\n    //     axios\r\n    //       .get(\r\n    //         \"/api/get-order/gst/\" +\r\n    //           orderTypeText(row) +\r\n    //           \"/\" +\r\n    //           orderTypeId(row) +\r\n    //           \"/\" +\r\n    //           documentUrl\r\n    //       )\r\n    //       .then((response: any) => {\r\n    //         props.enqueueSnackbar(\r\n    //           \"Document Uploaded Successfully\",\r\n    //           successToast\r\n    //         );\r\n    //       })\r\n    //       .catch((reponse: any) => {\r\n    //         props.enqueueSnackbar(reponse.message, failureToast);\r\n    //         event.target.value = \"\";\r\n    //       });\r\n    //   })\r\n    //   .catch((reponse: any) => {\r\n    //     props.enqueueSnackbar(\"Failed to upload the Document\", failureToast);\r\n    //   });\r\n  };\r\n  // let isP0: any = sessionStorage.getItem(\"type\");\r\n  // isP0 = isP0 === \"P0\";\r\n  // const getOrderAmount = (row: any) => {\r\n  //   try {\r\n  //     if (row.razorpayOrder) {\r\n  //       const json: any = JSON.parse(row.razorpayOrder);\r\n  //       row.amount = json?.amount;\r\n  //       return json?.amount / 100;\r\n  //     }\r\n  //   } catch (e: any) {}\r\n  // };\r\n  // const saveAmount = (row: any) => {\r\n  //   let url = \"\";\r\n  //   url =\r\n  //     \"/api/get-order/update-order-amount/\" +\r\n  //     orderTypeText(row) +\r\n  //     \"/\" +\r\n  //     orderTypeId(row) +\r\n  //     \"/\" +\r\n  //     row.amount;\r\n  //   axios\r\n  //     .get(url)\r\n  //     .then((response: any) => {\r\n  //       fetchOrderList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"Failed to Update the order\", failureToast);\r\n  //     });\r\n  // };\r\n  const [searchText, setSearchText] = React.useState<any>();\r\n\r\n  const handleChange = () => (event: any) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <Title>Application List</Title>{\" \"}\r\n      <Select\r\n        style={{ marginLeft: \"30px\", marginBottom: \"9px\" }}\r\n        defaultValue=\"All\"\r\n        onChange={(event: any, data: any) => {\r\n          setSearchText(\"\");\r\n          // setSelectedSample(data.props.children);\r\n          setOrderType(data?.props?.value);\r\n        }}\r\n      >\r\n        <MenuItem value={\"All\"}>All</MenuItem>\r\n        <MenuItem value={\"Proprietorship\"}>Proprietorship</MenuItem>\r\n        <MenuItem value={\"Partnership\"}>Partnership</MenuItem>\r\n        <MenuItem value={\"LLP\"}>LLP</MenuItem>\r\n        <MenuItem value={\"Company\"}>Company</MenuItem>\r\n      </Select>\r\n      {orderType !== \"All\" && (\r\n        <div>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            style={{ marginLeft: \"10vw\" }}\r\n            placeholder=\"Search\"\r\n            value={searchText}\r\n            onChange={handleChange()}\r\n            endAdornment={\r\n              <IconButton style={{ padding: \"0\" }}>\r\n                <Search\r\n                  onClick={() => {\r\n                    search();\r\n                  }}\r\n                ></Search>\r\n              </IconButton>\r\n            }\r\n          />\r\n          {/* <OutlinedInput  />\r\n     \r\n            aria-label=\"search\"\r\n            style={{ marginTop: \"10px\" }}\r\n          ></IconButton> */}\r\n        </div>\r\n      )}\r\n      {orderType === \"All\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Order Type</TableCell>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Trade Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={orderTypeId(row)}>\r\n                <TableCell>{orderTypeText(row)}</TableCell>\r\n                <TableCell>{orderTypeId(row)}</TableCell>\r\n                <TableCell>{row.tradeName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"Proprietorship\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ProprietorShip ID</TableCell>\r\n              <TableCell>Trade Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.proprietorshipid}>\r\n                <TableCell>{row.proprietorshipid}</TableCell>\r\n                <TableCell>{row.tradeName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"Partnership\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Partnership ID</TableCell>\r\n              <TableCell>Firm Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.partnershipid}>\r\n                <TableCell>{row.partnershipid}</TableCell>\r\n                <TableCell>{row.firmName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"LLP\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>LLP ID</TableCell>\r\n              <TableCell>Firm Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.llpid}>\r\n                <TableCell>{row.llpid}</TableCell>\r\n                <TableCell>{row.firmName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"Company\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Company ID</TableCell>\r\n              <TableCell>Firm Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.companydetailsid}>\r\n                <TableCell>{row.companydetailsid}</TableCell>\r\n                <TableCell>{row.firmName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const OrderList = withSnackbar(OrderListComponent);\r\n","import React from \"react\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Paper } from \"@material-ui/core\";\n\nexport const CustomizedTimeline = () => {\n  return (\n    <React.Fragment>\n      <Timeline align=\"left\">\n        <Paper style={{ padding: \"10px\" }}>\n          To Register New Candidate, Apply Six easy steps\n        </Paper>\n        <TimelineItem>\n          <TimelineSeparator>\n            {/* <TimelineDot /> */}\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography> </Typography>\n          </TimelineContent>\n        </TimelineItem>\n\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 1</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Registration</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 2</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Login</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 3</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Fill Application</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 4</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Upload Documents</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 5</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Pay Fees</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 6</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Processing by Spiraea</Typography>\n          </TimelineContent>\n        </TimelineItem>\n      </Timeline>\n    </React.Fragment>\n  );\n};\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Link,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { failureToast, successToast } from \"../util/util\";\r\nimport { StickyFooter } from \"./StickyFooter\";\r\nimport { CustomizedTimeline } from \"./TimeLine\";\r\nconst SignInSchema = Yup.object().shape({\r\n  loginUserName: Yup.string().max(10, \"Too Long!\").required(\"Required\"),\r\n  loginPassword: Yup.string().max(10, \"Too Long!\").required(\"Required\"),\r\n  role: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function SignInComponent(props: any) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { params }: any = useRouteMatch();\r\n\r\n  const sessionActive = () => {};\r\n  const verifyEmailFlow = () => {\r\n    const id = params.id;\r\n    if (id) {\r\n      axios\r\n        .get(`/api/verify-email/${id}`)\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\"Email verified successfully\", successToast);\r\n          history.push(\"/\");\r\n          // sessionStorage.setItem(\"role\", values.role);\r\n          // sessionStorage.setItem(\"user\", values.loginUserName);\r\n\r\n          // sessionStorage.setItem(\"type\", response.data.vendorType);\r\n          // if (values.role === \"Customer\") {\r\n          //   history.push(\"/dashboard/order-list\");\r\n          // } else if (values.role === \"Agent\") {\r\n          //   history.push(\"/dashboard/order-list\");\r\n          // } else if (values.role === \"Admin\") {\r\n          //   history.push(\"/dashboard/home\");\r\n          // }\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Unable to verify.\", failureToast);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    sessionActive();\r\n    verifyEmailFlow();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const signInSubmit = (values: any) => {\r\n    // navigateToDashboard();\r\n    axios\r\n      // .post(\"/api/login\", { ...values })\r\n      .post(\"/api/login\", { ...values })\r\n\r\n      .then((response: any) => {\r\n        sessionStorage.setItem(\"role\", values.role);\r\n        sessionStorage.setItem(\"user\", values.loginUserName);\r\n        sessionStorage.setItem(\"type\", response.data.vendorType);\r\n        if (values.role === \"Customer\") {\r\n          history.push(\"/dashboard/order-list\");\r\n        } else if (values.role === \"Agent\") {\r\n          history.push(\"/dashboard/order-list\");\r\n        } else if (values.role === \"Admin\") {\r\n          history.push(\"/dashboard/home\");\r\n        }\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Invalid Credentials\", failureToast);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Container component=\"main\">\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid item xs={12} sm={6}>\r\n            <div className={classes.paper}>\r\n              <img\r\n                alt=\"\"\r\n                src=\"/spiraea-logo-bw-web-1.png\"\r\n                style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\r\n              />\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Formik\r\n                initialValues={{\r\n                  loginUserName: \"\",\r\n                  loginPassword: \"\",\r\n                  role: \"\",\r\n                }}\r\n                validationSchema={SignInSchema}\r\n                onSubmit={(values: any) => {\r\n                  signInSubmit(values);\r\n                }}\r\n              >\r\n                {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                  // obj: any\r\n                  <Form className={classes.form} noValidate>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"loginUserName\"\r\n                      label=\"Username\"\r\n                      name=\"loginUserName\"\r\n                      autoComplete=\"loginUserName\"\r\n                      autoFocus\r\n                      onChange={handleChange}\r\n                      value={values.loginUserName}\r\n                      error={\r\n                        errors.loginUserName && touched.loginUserName\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      helperText={touched.loginUserName && errors.loginUserName}\r\n                    />\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      type=\"password\"\r\n                      name=\"loginPassword\"\r\n                      label=\"Password\"\r\n                      id=\"loginPassword\"\r\n                      autoComplete=\"loginPassword\"\r\n                      onChange={handleChange}\r\n                      value={values.loginPassword}\r\n                      error={\r\n                        errors.loginPassword && touched.loginPassword\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      helperText={touched.loginPassword && errors.loginPassword}\r\n                    />\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Role\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ marginTop: \"16px\" }}\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={values.role}\r\n                        error={errors.role && touched.role ? true : false}\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"role\", data?.props?.children);\r\n                        }}\r\n                        // value={age}\r\n                      >\r\n                        <MenuItem value={\"Customer\"}>Customer</MenuItem>\r\n                        <MenuItem value={\"Agent\"}>Agent</MenuItem>\r\n                        <MenuItem value={\"Admin\"}>Admin</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                      <Grid item xs>\r\n                        <Link href=\"#/forgot-password\" variant=\"body2\">\r\n                          Forgot Password?\r\n                        </Link>\r\n                        {/* TODO feature */}\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link href=\"/#/signUp\" variant=\"body2\">\r\n                          {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <div className={classes.paper}>\r\n              <CustomizedTimeline></CustomizedTimeline>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <StickyFooter />\r\n    </>\r\n  );\r\n}\r\n// export const ShareRoomDetail = connect(\r\n//   mapStateToProps,\r\n//   null\r\n// )(ShareRoomDetailComponent);\r\nexport const SignIn = withSnackbar(SignInComponent);\r\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\nimport { StickyFooter } from \"./StickyFooter\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignupSchema = Yup.object().shape({\n  businessName: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  vendorType: Yup.string().required(\"Required\"),\n  userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n  mobile: Yup.string().required(\"Required\"),\n});\nexport function SignUpComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n  function navigateToLogin() {\n    history.push(\"/signin\");\n  }\n  const signUpSubmit = (values: any) => {\n    axios\n      .post(\"/api/createRegistration\", values)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\"User Sign Up Complete\", successToast);\n        navigateToLogin();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <img\n            alt=\"\"\n            src=\"/spiraea-logo-bw-web-1.png\"\n            style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Formik\n            initialValues={{\n              businessName: \"\",\n              vendorType: \"P0\",\n              userEmail: \"\",\n              mobile: \"\",\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values: any) => {\n              signUpSubmit(values);\n            }}\n          >\n            {({ errors, touched, values, handleChange, setFieldValue }) => (\n              // obj: any\n              <Form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      autoComplete=\"businessName\"\n                      required\n                      name=\"businessName\"\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"businessName\"\n                      label=\"Business Name\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.businessName}\n                      error={\n                        errors.businessName && touched.businessName\n                          ? true\n                          : false\n                      }\n                      helperText={touched.businessName && errors.businessName}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Vendor Type\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        fullWidth\n                        id=\"demo-simple-select-helper\"\n                        value={values.vendorType}\n                        error={\n                          errors.vendorType && touched.vendorType ? true : false\n                        }\n                        onChange={(event: any, data: any) => {\n                          setFieldValue(\"vendorType\", data?.props?.children);\n                        }}\n                      >\n                        <MenuItem value={\"P0\"}>P0</MenuItem>\n                        <MenuItem value={\"P1\"}>P1</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"userEmail\"\n                      label=\"Email Address\"\n                      name=\"userEmail\"\n                      autoComplete=\"userEmail\"\n                      onChange={handleChange}\n                      value={values.userEmail}\n                      error={\n                        errors.userEmail && touched.userEmail ? true : false\n                      }\n                      helperText={touched.userEmail && errors.userEmail}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      type=\"number\"\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"mobile\"\n                      label=\"Mobile Number\"\n                      name=\"mobile\"\n                      onChange={handleChange}\n                      value={values.mobile}\n                      error={errors.mobile && touched.mobile ? true : false}\n                      helperText={touched.mobile && errors.mobile}\n                    />\n                  </Grid>\n                  {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via userEmail.\"\n              />\n            </Grid> */}\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign Up\n                </Button>\n                <Grid container justifyContent=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"/#/signIn\" variant=\"body2\">\n                      Already have an account? Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </Container>\n      <StickyFooter />\n    </>\n  );\n}\nexport const SignUp = withSnackbar(SignUpComponent);\n","import AllOutIcon from \"@material-ui/icons/AllOut\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport QueueIcon from \"@material-ui/icons/Queue\";\r\nimport React from \"react\";\r\nimport { AdminDashboard } from \"../component/admin/AdminDashboard\";\r\nimport { AdminList } from \"../component/admin/AdminList\";\r\nimport { AgentList } from \"../component/admin/AgentList\";\r\nimport { PlanList } from \"../component/admin/PlanList\";\r\nimport { UserList } from \"../component/admin/UserList\";\r\nimport Dashboard from \"../component/Dashboard\";\r\nimport { ForgotPassword } from \"../component/ForgotPassword\";\r\nimport { ApplyForGstComponent } from \"../component/forms/ApplyForGST\";\r\nimport { Company } from \"../component/forms/Company\";\r\nimport { LLP } from \"../component/forms/LLP\";\r\nimport { Partnership } from \"../component/forms/Partnership\";\r\nimport { SoleProprietor } from \"../component/forms/SoleProprietor\";\r\nimport { OrderList } from \"../component/OrderList\";\r\nimport { SignIn } from \"../component/SignIn\";\r\nimport { SignUp } from \"../component/SignUp\";\r\nexport const dashboardRoutes = [\r\n  {\r\n    path: \"/signin\",\r\n    name: \"Sign In\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignIn></SignIn>,\r\n    layout: \"/signin\",\r\n  },\r\n  {\r\n    path: \"/SignUp\",\r\n    name: \"SignUp\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignUp></SignUp>,\r\n    layout: \"/signup\",\r\n  },\r\n  {\r\n    path: \"/forgot-password\",\r\n    name: \"ForgotPassword\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <ForgotPassword></ForgotPassword>,\r\n    layout: \"/forgot-password\",\r\n  },\r\n\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <Dashboard></Dashboard>,\r\n    layout: \"/dashboard\",\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    name: \"admin\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <Dashboard></Dashboard>,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/verify-email/:id\",\r\n    component: <SignIn></SignIn>,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Sign In\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignIn></SignIn>,\r\n    layout: \"/\",\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Sign In\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignIn></SignIn>,\r\n    layout: \"/\",\r\n  },\r\n\r\n\r\n  \r\n];\r\nexport const secondaryRoutes = [\r\n  {\r\n    path: \"/dashboard/home\",\r\n    name: \"/dashboard/home\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <AdminDashboard></AdminDashboard>,\r\n    layout: \"/dashboard/home\",\r\n  },\r\n  {\r\n    path: \"/dashboard/order-list\",\r\n    name: \"Application List\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <OrderList></OrderList>,\r\n    layout: \"/dashboard/order-list\",\r\n  },\r\n  {\r\n    path: \"/dashboard/apply-for-gst\",\r\n    name: \"/dashboard/apply-for-gst\",\r\n    icon: <ApplyForGstComponent></ApplyForGstComponent>,\r\n    component: <ApplyForGstComponent></ApplyForGstComponent>,\r\n    layout: \"/apply-for-gst\",\r\n  },\r\n\r\n  {\r\n    path: \"/dashboard/sole-proprietor/:id\",\r\n    component: <SoleProprietor></SoleProprietor>,\r\n  },\r\n  {\r\n    path: \"/dashboard/partnership/:id\",\r\n    component: <Partnership></Partnership>,\r\n  },\r\n  {\r\n    path: \"/dashboard/llp/:id\",\r\n    component: <LLP></LLP>,\r\n  },\r\n  {\r\n    path: \"/dashboard/company/:id\",\r\n    component: <Company></Company>,\r\n  },\r\n  {\r\n    path: \"/dashboard/userlist\",\r\n    name: \"/dashboard/userlist\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <UserList></UserList>,\r\n    layout: \"/dashboard/userlist\",\r\n  },\r\n  {\r\n    path: \"/dashboard/agentlist\",\r\n    name: \"/dashboard/agentlist\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <AgentList></AgentList>,\r\n    layout: \"/dashboard/agentlist\",\r\n  },\r\n  {\r\n    path: \"/dashboard/adminlist\",\r\n    name: \"/dashboard/adminlist\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <AdminList></AdminList>,\r\n    layout: \"/dashboard/adminlist\",\r\n  },\r\n  {\r\n    path: \"/dashboard/planlist\",\r\n    name: \"/dashboard/planlist\",\r\n    icon: <QueueIcon></QueueIcon>,\r\n    component: <PlanList></PlanList>,\r\n    layout: \"/dashboard/planlist\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { LoaderComponent } from \"./component/Loader\";\r\nimport { dashboardRoutes } from \"./routes/routes\";\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <LoaderComponent></LoaderComponent>\r\n      <Switch>\r\n        {dashboardRoutes.map((route: any) => {\r\n          return (\r\n            <Route path={route.path} key={route.path}>\r\n              {route.component}\r\n            </Route>\r\n          );\r\n        })}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import { SnackbarProvider } from \"notistack\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { App } from \"./App\";\r\nimport \"./index.css\";\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <SnackbarProvider maxSnack={5}>\r\n      <App />\r\n    </SnackbarProvider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}