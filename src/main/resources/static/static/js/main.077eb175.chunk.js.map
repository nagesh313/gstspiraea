{"version":3,"sources":["component/Loader.tsx","component/Album.tsx","component/checkout/AddressForm.tsx","component/checkout/PaymentForm.tsx","component/checkout/Review.tsx","component/checkout/Checkout.tsx","component/ListItems.tsx","component/Dashboard.tsx","component/admin/Progres.tsx","component/Title.tsx","component/AdminDashboard.tsx","component/Deposits.tsx","util/util.tsx","component/ForgotPassword.tsx","component/Dialog.tsx","component/forms/schema/CompanySchema.tsx","component/forms/Company.tsx","component/forms/schema/LLPSchema.tsx","component/forms/LLP.tsx","component/forms/schema/PartnerSchema.tsx","component/forms/Partnership.tsx","component/forms/schema/SoleProprietorSchama.tsx","component/forms/SoleProprietor.tsx","component/forms/ApplyForGST.tsx","component/OrderList.tsx","PricingTable.tsx","component/pricing.tsx","component/StickyFooter.tsx","component/TimeLine.tsx","component/SignIn.tsx","component/SignUp.tsx","component/UserList.tsx","component/CreateNewPlan.tsx","component/CreateNewPlanLocation.tsx","component/PlanList.tsx","component/UploadGSTDashboard.tsx","routes/routes.tsx","App.tsx","redux/actionTypes.tsx","redux/reducers/abolitionData.tsx","redux/reducers/index.tsx","redux/store.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","LoaderComponent","classes","React","useState","loadingCount","setLoadingCount","useEffect","axios","interceptors","request","use","config","error","Promise","reject","response","data","Backdrop","className","open","style","CircularProgress","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","Album","Fragment","CssBaseline","Container","maxWidth","Typography","component","variant","align","gutterBottom","paragraph","Grid","container","justify","item","Button","map","xs","sm","md","Card","CardMedia","image","title","CardContent","CardActions","size","AddressForm","TextField","required","id","name","label","fullWidth","autoComplete","FormControlLabel","control","Checkbox","value","PaymentForm","helperText","products","desc","price","addresses","payments","detail","listItem","total","fontWeight","Review","List","disablePadding","product","ListItem","ListItemText","primary","secondary","join","direction","payment","appBar","position","layout","width","marginLeft","breakpoints","up","marginBottom","stepper","buttons","justifyContent","button","steps","getStepContent","step","Error","Checkout","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","length","onClick","MainListItems","sessionStorage","getItem","href","ListItemIcon","root","nested","paddingLeft","SecondaryListItems","setOpen","admin","Collapse","in","timeout","unmountOnExit","Queue","grow","toolbar","paddingRight","toolbarIcon","alignItems","mixins","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","overflow","fixedHeight","sectionDesktop","sectionMobile","Dashboard","history","useHistory","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","target","innerText","push","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","AppBar","clsx","Toolbar","edge","noWrap","url","cursor","alt","src","Drawer","Divider","secondaryRoutes","route","path","exact","BorderLinearProgress","withStyles","borderRadius","colorPrimary","grey","type","bar","LinearProgress","ProgressBar","props","progress","Title","children","depositContext","flex","AdminDashboard","fixedHeightPaper","dashboardData","setDashboardData","get","then","console","log","catch","reponse","textAlign","lg","todaysBusiness","fontSize","todaysApplication","totalCustomers","applicationsManagement","customerManagement","pending","pendingPercentage","approved","approvedPercentage","rejected","rejectedPercentage","preventDefault","Deposits","Link","successToast","autoHideDuration","failureToast","avatar","margin","main","form","submit","SignupSchema","Yup","shape","userEmail","email","mobile","min","max","ForgotPassword","withSnackbar","signUpSubmit","values","post","enqueueSnackbar","message","initialValues","validationSchema","onSubmit","errors","touched","handleChange","setFieldValue","noValidate","onChange","DialogComponent","Dialog","handleClose","DialogContent","DialogContentText","DialogActions","autoFocus","aadharRegex","schema","pannumber","matches","numberOfDirectors","directorAadharNo0","when","is","directorAadharNo1","directorAadharNo2","directorAadharNo3","directorAadharNo4","directorAadharNo5","directorAadharNo6","directorAadharNo7","directorAadharNo8","directorAadharNo9","directorAadharNo10","directorAadharNo11","directorAadharNo12","directorAadharNo13","directorAadharNo14","Company","params","useRouteMatch","orderDetails","setOrderDetails","directorList","forEach","director","index","directorName","directorDin","directorFatherName","directorAadharNo","directorAadharPhotoCopyFront","directorAadharPhotoCopyBack","pannumberCopy","directorResidentialAddress","directorPhoto","gstCertificatesInOtherStates","gst","gstNumber","gstAttachment","numberOfOtherGST","upload","field","files","includes","formData","FormData","append","headers","submitForm","save","plan","paymentPlanLocationDetails","Array","undefined","imageName","setImageName","curr","Date","setDate","getDate","date","toISOString","substr","valuesForDirectors","valuesOfGSTInOtherStates","isAdmin","handleClickOpen","enableReinitialize","firmName","legalbusinessName","tradeName","panphoto","composition","commencementDate","principleplace","pricipleelectricityphoto","priciplerentphoto","priciplenocphoto","additionalplace","additionalelectricityphoto","additionalrentphoto","additionalnocphoto","businessactivity","hsn1","hsn2","hsn3","hsn4","hsn5","accountname","accountnumber","ifsc","branchname","branchcode","cancelcheqphoto","tradelicensenumber","tradelicensephoto","certificateOfIncorportation","status","createdBy","isActive","trading","manufacture","service","remark","declarationOfAuthorisedSignatory","InputLabelProps","shrink","file","Visibility","float","InputLabel","Select","labelId","InputProps","inputProps","num","checked","numberOfPartners","partnerAadharNo0","partnerAadharNo1","partnerAadharNo2","partnerAadharNo3","partnerAadharNo4","partnerAadharNo5","partnerAadharNo6","partnerAadharNo7","partnerAadharNo8","partnerAadharNo9","partnerAadharNo10","partnerAadharNo11","partnerAadharNo12","partnerAadharNo13","partnerAadharNo14","LLP","partnerList","partner","partnerName","partnerFatherName","partnerAadharNo","partnerAadharPhotoCopyFront","partnerAadharPhotoCopyBack","partnerResidentialAddress","partnerPhoto","valuesForPartners","partnershipDeed","Partnership","partnerMobile","partnerEmail","isAuthorisedSignatory","FormGroup","propadharnumber","SoleProprietor","personName","propfatherName","propadharphotoFront","propadharphotoBack","resident_address","photo","authsignname","signfathername","signadharnumber","signadharphoto","residentsignaddress","signphoto","ApplyForGstComponent","setName","planList","setPlanList","setPlan","planLocationList","setPlanLocationList","planLocation","setPlanLocation","dropdown","setDropdown","disabled","FormControl","payplanLocation","payplanname","remarks","OrderList","orderList","setOrderList","orderType","setOrderType","fetchOrderList","view","row","proprietorshipid","partnershipid","llpid","companydetailsid","loadScript","resolve","script","document","createElement","onload","onerror","body","appendChild","displayRazorpay","a","alert","razor","JSON","parse","razorpayOrder","options","key","amount","currency","description","order_id","handler","w","window","Razorpay","documentUrl","role","defaultValue","Table","TableHead","TableRow","TableCell","TableBody","gstDocument","table","minWidth","createData","option","particulars","place1","place2","rows","PricingTable","TableContainer","scope","ul","listStyle","borderBottom","divider","flexWrap","toolbarTitle","link","cardHeader","cardPricing","pricingTable","borderTop","tiers","buttonText","buttonVariant","subheader","footers","Pricing","tier","CardHeader","titleTypographyProps","subheaderTypographyProps","action","line","StickyFooter","CustomizedTimeline","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","SignInSchema","loginUserName","loginPassword","SignIn","setItem","signInSubmit","businessName","vendorType","SignUp","UserList","userList","setUserList","fetchUserList","user","PlanSchema","CreateNewPlan","DialogTitle","fetchPlanList","payplanamount","CreateNewPlanLocationDialog","Row","KeyboardArrowUpOutlined","KeyboardArrowDownOutlined","Delete","delete","handleDeletePlan","colSpan","Add","openLocationModal","historyRow","CollapsibleTable","openLocation","setOpenLocation","handleModalLocationClose","refresh","list","PlanList","UploadGSTDocum","dashboardRoutes","App","SET_TABLE_DATA","SET_MAP_DATA","SET_TIMELINE_DATA","SET_COLUMNS","initialState","combineReducers","abolitionData","state","Object","assign","mapData","tableData","timelineData","columns","createStore","rootReducer","ReactDOM","render","StrictMode","store","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.077eb175.chunk.js","sourcesContent":["import {\n  Backdrop,\n  CircularProgress,\n  createStyles,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\nexport const LoaderComponent = () => {\n  const classes = useStyles();\n  const [loadingCount, setLoadingCount] = React.useState(0);\n  useEffect(() => {\n    axios.interceptors.request.use(\n      function (config: any) {\n        setLoadingCount(loadingCount + 1);\n        return config;\n      },\n      function (error: any) {\n        return Promise.reject({ ...error.response?.data });\n      }\n    );\n\n    axios.interceptors.response.use(\n      function (response: any) {\n        // spinning hide\n        setLoadingCount(loadingCount - 1);\n        return response;\n      },\n      function (error: any) {\n        setLoadingCount(loadingCount - 1);\n        return Promise.reject({ ...error.response?.data });\n      }\n    );\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  return (\n    <div>\n      {loadingCount > 0 ? (\n        <Backdrop\n          className={classes.backdrop}\n          open={true}\n          style={{ zIndex: 10000 }}\n        >\n          <CircularProgress color=\"primary\" />\n        </Backdrop>\n      ) : null}\n    </div>\n  );\n};\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Album() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              Album layout\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n            >\n              Something short and leading about the collection below—its\n              contents, the creator, etc. Make it short and sweet, but not too\n              short so folks don&apos;t simply skip over it entirely.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Main call to action\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Secondary action\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe\n                      the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function AddressForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            autoComplete=\"given-name\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            autoComplete=\"family-name\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"shipping address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            autoComplete=\"shipping address-line2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"shipping address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"shipping postal-code\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            autoComplete=\"shipping country\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n            label=\"Use this address for payment details\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function PaymentForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cardNumber\"\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cvv\"\n            label=\"CVV\"\n            helperText=\"Last three digits on signature strip\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n            label=\"Remember credit card details for next time\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst products = [\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n  { name: 'Card type', detail: 'Visa' },\n  { name: 'Card holder', detail: 'Mr John Smith' },\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n  { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Review() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {products.map((product) => (\n          <ListItem className={classes.listItem} key={product.name}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>John Smith</Typography>\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Payment details\n          </Typography>\n          <Grid container>\n            {payments.map((payment) => (\n              <React.Fragment key={payment.name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.detail}</Typography>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = [\"Shipping address\", \"Payment details\", \"Review your order\"];\n\nfunction getStepContent(step: any) {\n  switch (step) {\n    case 0:\n      return <AddressForm />;\n    case 1:\n      return <PaymentForm />;\n    case 2:\n      return <Review />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Checkout() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order\n                  confirmation, and will send you an update when your order has\n                  shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n","import {\r\n  Collapse,\r\n  createStyles,\r\n  List,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Queue } from \"@material-ui/icons\";\r\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\r\n\r\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\n// import AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\n// import LayersIcon from \"@material-ui/icons/Layers\";\r\n// import LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n// import ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const MainListItems = () => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const admin = role === \"Admin\";\r\n  return admin ? (\r\n    <div>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/home\">\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/order-list\">\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Applications\" />\r\n      </ListItem>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/order-list\">\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Applications\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/apply-for-gst\">\r\n        <ListItemIcon>\r\n          <AccessibilityIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Apply For GST\" />\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\nexport const SecondaryListItems = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const classes = useStyles();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const admin = role === \"Admin\";\r\n  return (\r\n    <>\r\n      {admin && (\r\n        <div>\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n              <SupervisorAccountIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Admin\" />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/userList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <ContactsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"User List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/planList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <Queue />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Plan List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  AppBar,\r\n  Container,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { secondaryRoutes } from \"../routes/routes\";\r\nimport { MainListItems, SecondaryListItems } from \"./ListItems\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [\r\n    mobileMoreAnchorEl,\r\n    setMobileMoreAnchorEl,\r\n  ] = React.useState<null | HTMLElement>(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = (event: any) => {\r\n    if (event.target.innerText === \"Logout\") {\r\n      history.push(\"/signIn\");\r\n      // history.push(\"/api/auth/logout\");\r\n    } else if (event.target.innerText === \"Profile\") {\r\n      history.push(\"/dashboard/profile\");\r\n      // history.push(\"/api/auth/profile\");\r\n    }\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  // const role = sessionStorage.getItem(\"role\");\r\n  // const admin = role === \"Admin\";\r\n  const navigate = (url: string) => {\r\n    history.push(url);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            onClick={() => navigate(\"/#/dashboard/home\")}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            gstspiraea-ui\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <img\r\n            alt=\"\"\r\n            src=\"/spiraea-logo-bw-web-1.png\"\r\n            style={{ height: \"50px\", marginRight: \"130px\" }}\r\n          />\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MainListItems></MainListItems>\r\n        </List>\r\n        <Divider />\r\n        <SecondaryListItems></SecondaryListItems>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container>\r\n            <Switch>\r\n              {secondaryRoutes.map((route: any) => {\r\n                return (\r\n                  <Route path={route.path} key={route.path} exact>\r\n                    {route.component}\r\n                  </Route>\r\n                );\r\n              })}\r\n            </Switch>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 10,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor:\n        theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: \"#1a90ff\",\n    },\n  })\n)(LinearProgress);\n\n// Inspired by the former Facebook spinners.\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport const ProgressBar = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <BorderLinearProgress variant=\"determinate\" value={props.progress} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props: any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import {\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport React, { useEffect } from \"react\";\nimport { ProgressBar } from \"./admin/Progres\";\nimport Title from \"./Title\";\n// function preventDefault(event: any) {\n//   event.preventDefault();\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 180,\n  },\n}));\n\nexport const AdminDashboard = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [dashboardData, setDashboardData] = React.useState<any>({});\n\n  const fetchAdminDashboard = () => {\n    axios\n      .get(\"/api/get-admin-dashboard\")\n      .then((response: any) => {\n        console.log(response);\n        setDashboardData(response.data);\n        // props.enqueueSnackbar(\n        //   \"Application Rejected Successfully\",\n        //   successToast\n        // );\n        // history.push(\"/dashboard/admin\");\n      })\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(\"Unable To fetch Admin Dashboard\", failureToast);\n      });\n  };\n  useEffect(() => {\n    fetchAdminDashboard();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  return (\n    <Grid container style={{ textAlign: \"center\" }}>\n      <Grid container spacing={4} justifyContent=\"center\">\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\n            <Typography component=\"div\" variant=\"h4\">\n             <img src=\"currency-inr.png\" alt=\"\"/> \n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {dashboardData.todaysBusiness}\n            </Typography>\n            <Title> Today's Business</Title>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\n            <Typography component=\"div\" variant=\"h4\">\n              <WorkIcon style={{ fontSize: \"3rem\" }}></WorkIcon>\n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {dashboardData.todaysApplication}\n            </Typography>\n            <Title> Today's Application</Title>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\n            <Typography component=\"div\" variant=\"h4\">\n              <GroupIcon style={{ fontSize: \"3rem\" }}></GroupIcon>\n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {dashboardData.totalCustomers}\n            </Typography>\n            <Title> Total Users</Title>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} md={6}>\n          <Grid container item xs={12} spacing={4}>\n            <Grid item xs={12} md={6} lg={6}>\n              <Paper style={{ textAlign: \"center\" }}>\n                <Typography\n                  component=\"div\"\n                  variant=\"h4\"\n                  style={{ paddingTop: \"8px\" }}\n                >\n                  <VerifiedUserIcon\n                    style={{ fontSize: \"2rem\" }}\n                  ></VerifiedUserIcon>\n                </Typography>\n                <Typography component=\"p\" variant=\"h4\">\n                  {dashboardData.applicationsManagement}\n                </Typography>\n                <Typography\n                  component=\"h2\"\n                  variant=\"h6\"\n                  color=\"primary\"\n                  style={{ paddingBottom: \"8px\" }}\n                  gutterBottom\n                >\n                  Applications Management\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={6} lg={6}>\n              <Paper style={{ textAlign: \"center\" }}>\n                <Typography\n                  component=\"div\"\n                  variant=\"h4\"\n                  style={{ paddingTop: \"8px\" }}\n                >\n                  <GroupAddIcon style={{ fontSize: \"2rem\" }}></GroupAddIcon>\n                </Typography>\n                <Typography component=\"p\" variant=\"h4\">\n                  {dashboardData.customerManagement}\n                </Typography>\n                <Typography\n                  component=\"h2\"\n                  variant=\"h6\"\n                  color=\"primary\"\n                  style={{ paddingBottom: \"8px\" }}\n                  gutterBottom\n                >\n                  Customer Management\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper style={{ textAlign: \"center\" }}>\n            <Typography\n              component=\"div\"\n              variant=\"h5\"\n              style={{ paddingTop: \"8px\" }}\n            >\n              This Weeks Report\n            </Typography>\n            <List component=\"nav\" aria-label=\"mailbox folders\">\n              <Divider />\n              <ListItem>\n                <ListItemText\n                  primary={\n                    \"Review Pending Applications - \" + dashboardData.pending\n                  }\n                />\n                <ListItemText\n                  primary={dashboardData.pendingPercentage + \"%\"}\n                  style={{ textAlign: \"right\" }}\n                />\n              </ListItem>\n              <ListItem>\n                <ProgressBar\n                  progress={dashboardData.pendingPercentage}\n                ></ProgressBar>\n              </ListItem>\n              <Divider />\n              <ListItem>\n                <ListItemText\n                  primary={\"Approved Applications - \" + dashboardData.approved}\n                />\n                <ListItemText\n                  primary={dashboardData.approvedPercentage + \"%\"}\n                  style={{ textAlign: \"right\" }}\n                />\n              </ListItem>\n              <ListItem>\n                <ProgressBar\n                  progress={dashboardData.approvedPercentage}\n                  style={{ background: \"green\" }}\n                ></ProgressBar>\n              </ListItem>\n              <Divider />\n              <ListItem>\n                <ListItemText\n                  primary={\"Rejected Applications - \" + dashboardData.rejected}\n                />\n                <ListItemText\n                  primary={dashboardData.rejectedPercentage + \"%\"}\n                  style={{ textAlign: \"right\" }}\n                />\n              </ListItem>\n              <ListItem>\n                <ProgressBar\n                  progress={dashboardData.rejectedPercentage}\n                ></ProgressBar>\n              </ListItem>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nfunction preventDefault(event: any) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Deposits() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <Title>Recent Deposits</Title>\n          <Typography component=\"p\" variant=\"h4\">\n            $3,024.00\n          </Typography>\n          <Typography color=\"textSecondary\" className={classes.depositContext}>\n            on 15 March, 2019\n          </Typography>\n          <div>\n            <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n              View balance\n            </Link>\n          </div>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <Title>Recent Deposits</Title>\n          <Typography component=\"p\" variant=\"h4\">\n            $3,024.00\n          </Typography>\n          <Typography color=\"textSecondary\" className={classes.depositContext}>\n            on 15 March, 2019\n          </Typography>\n          <div>\n            <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n              View balance\n            </Link>\n          </div>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","const anchorOrigin = {\n  vertical: \"bottom\",\n  horizontal: \"right\",\n};\nexport const successToast = {\n  autoHideDuration: 3000,\n  variant: \"success\",\n  anchorOrigin,\n};\nexport const infoToast = {\n  autoHideDuration: 3000,\n  variant: \"info\",\n  anchorOrigin,\n};\nexport const failureToast = {\n  autoHideDuration: 3000,\n  variant: \"error\",\n  anchorOrigin,\n};\n","import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignupSchema = Yup.object().shape({\n  userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n  mobile: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(10, \"Too Long!\")\n    .required(\"Required\"),\n});\nexport function ForgotPasswordComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n  function navigateToLogin() {\n    history.push(\"/signin\");\n  }\n  const signUpSubmit = (values: any) => {\n    axios\n      .post(\"/api/createRegistrationPost\", values)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(response.message, successToast);\n        navigateToLogin();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        {/* <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar> */}\n        <img\n          alt=\"\"\n          src=\"/spiraea-logo-bw-web-1.png\"\n          style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n        />\n        <Typography component=\"h1\" variant=\"h5\">\n          Forgot password\n        </Typography>\n        <Formik\n          initialValues={{\n            userEmail: \"\",\n            mobile: \"\",\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values: any) => {\n            signUpSubmit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange, setFieldValue }) => (\n            // obj: any\n            <Form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"userEmail\"\n                    label=\"Email Address\"\n                    name=\"userEmail\"\n                    autoComplete=\"userEmail\"\n                    onChange={handleChange}\n                    value={values.userEmail}\n                    error={errors.userEmail && touched.userEmail ? true : false}\n                    helperText={touched.userEmail && errors.userEmail}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"mobile\"\n                    label=\"Mobile Number\"\n                    name=\"mobile\"\n                    onChange={handleChange}\n                    value={values.mobile}\n                    error={errors.mobile && touched.mobile ? true : false}\n                    helperText={touched.mobile && errors.mobile}\n                  />\n                </Grid>\n                {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via userEmail.\"\n              />\n            </Grid> */}\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Send reset Link\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/#/signIn\" variant=\"body2\">\n                    Back to Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\nexport const ForgotPassword = withSnackbar(ForgotPasswordComponent);\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React from \"react\";\n\nexport const DialogComponent = (props: any) => {\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img src={\"/api/document/downloadFile/\" + props.name} alt=\"\" />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\nconst aadharRegex = /^[0-9]{4}\\s{1}[0-9]{4}\\s{1}[0-9]{4}$/;\n\nexport const schema = Yup.object().shape({\n  pannumber: Yup.string()\n    .required(\"Please enter your Pan Number\")\n    .matches(panRegex, \"Invalid Pan Number\"),\n  numberOfDirectors: Yup.number()\n    .required(\"Please enter No Of Directors\")\n    .min(1, \"Minimum 1 number of Directors\")\n    .max(15, \"Maximum 15 number of Directors\"),\n  directorAadharNo0: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 1,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo1: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 2,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo2: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 3,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo3: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 4,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo4: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 5,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo5: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 6,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo6: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 7,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo7: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 8,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo8: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 9,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo9: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 10,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo10: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 11,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo11: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 12,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo12: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 13,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo13: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 14,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  directorAadharNo14: Yup.string().when(\"numberOfDirectors\", {\n    is: (numberOfDirectors: number) => numberOfDirectors >= 15,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n});\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Visibility } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { DialogComponent } from \"../Dialog\";\r\nimport { schema } from \"./schema/CompanySchema\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CompanyComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Company/\" + id)\r\n      .then((response: any) => {\r\n        response.data.directorList.forEach((director: any, index: any) => {\r\n          response.data[\"id\" + index] = director.id;\r\n          response.data[\"directorName\" + index] = director.directorName;\r\n          response.data[\"directorDin\" + index] = director.directorDin;\r\n          response.data[\"directorFatherName\" + index] =\r\n            director.directorFatherName;\r\n          response.data[\"directorAadharNo\" + index] = director.directorAadharNo;\r\n          response.data[\"directorAadharPhotoCopyFront\" + index] =\r\n            director.directorAadharPhotoCopyFront;\r\n          response.data[\"directorAadharPhotoCopyBack\" + index] =\r\n            director.directorAadharPhotoCopyBack;\r\n          response.data[\"pannumber\" + index] = director.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = director.pannumberCopy;\r\n          response.data[\"directorResidentialAddress\" + index] =\r\n            director.directorResidentialAddress;\r\n          response.data[\"directorPhoto\" + index] = director.directorPhoto;\r\n        });\r\n        response.data.numberOfDirectors = response.data.directorList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Error fetching order details\", failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Company/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Company/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"directorPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", event.currentTarget.files[0]);\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const directorList: any = [];\r\n    [...Array(values.numberOfDirectors)].forEach((value: any, index: any) => {\r\n      directorList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        directorName: values[\"directorName\" + index],\r\n        directorDin: values[\"directorDin\" + index],\r\n        directorFatherName: values[\"directorFatherName\" + index],\r\n        directorAadharNo: values[\"directorAadharNo\" + index],\r\n        directorAadharPhotoCopyFront:\r\n          values[\"directorAadharPhotoCopyFront\" + index],\r\n        directorAadharPhotoCopyBack:\r\n          values[\"directorAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        directorResidentialAddress:\r\n          values[\"directorResidentialAddress\" + index],\r\n        directorPhoto: values[\"directorPhoto\" + index],\r\n      });\r\n    });\r\n    values.directorList = directorList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-company-details\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-company-details\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  let valuesForDirectors: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForDirectors[\"directorName\" + index] = \"\";\r\n    valuesForDirectors[\"directorDin\" + index] = \"\";\r\n    valuesForDirectors[\"directorFatherName\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharNo\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForDirectors[\"pannumber\" + index] = \"\";\r\n    valuesForDirectors[\"pannumberCopy\" + index] = \"\";\r\n    valuesForDirectors[\"directorResidentialAddress\" + index] = \"\";\r\n    valuesForDirectors[\"directorPhoto\" + index] = \"\";\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <DialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Company\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      businessactivity: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      accountname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsc: \"\",\r\n                      branchname: \"\",\r\n                      branchcode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      certificateOfIncorportation: \"\",\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      isActive: true,\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfDirectors: 1,\r\n                      ...valuesForDirectors,\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the Company\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number of Company\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"panphoto\"\r\n                        label=\"Please attach PAN card copy\"\r\n                        name=\"panphoto\"\r\n                        autoComplete=\"panphoto\"\r\n                        // onChange={handleChange}\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"panphoto\")\r\n                        }\r\n                        // value={values.panphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                        helperText={touched.panphoto && errors.panphoto}\r\n                      />\r\n                      {values.panphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.panphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"pricipleelectricityphoto\"\r\n                          label=\"Please attach Electricity bill\"\r\n                          name=\"pricipleelectricityphoto\"\r\n                          autoComplete=\"pricipleelectricityphoto\"\r\n                          onChange={(file) =>\r\n                            upload(\r\n                              file,\r\n                              setFieldValue,\r\n                              \"pricipleelectricityphoto\"\r\n                            )\r\n                          }\r\n                          // value={values.pricipleelectricityphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.pricipleelectricityphoto &&\r\n                            touched.pricipleelectricityphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.pricipleelectricityphoto &&\r\n                            errors.pricipleelectricityphoto\r\n                          }\r\n                        />\r\n                        {values.pricipleelectricityphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.pricipleelectricityphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplerentphoto\"\r\n                          label=\"Please attach Rent Agrement\"\r\n                          name=\"priciplerentphoto\"\r\n                          autoComplete=\"priciplerentphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplerentphoto\")\r\n                          }\r\n                          // value={values.priciplerentphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplerentphoto &&\r\n                            touched.priciplerentphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.priciplerentphoto &&\r\n                            errors.priciplerentphoto\r\n                          }\r\n                        />\r\n                        {values.priciplerentphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplerentphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplenocphoto\"\r\n                          label=\"Please attach NOC if Rented\"\r\n                          name=\"priciplenocphoto\"\r\n                          autoComplete=\"priciplenocphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplenocphoto\")\r\n                          }\r\n                          // value={values.priciplenocphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplenocphoto && touched.priciplenocphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.panphoto && errors.priciplenocphoto\r\n                          }\r\n                        />\r\n                        {values.priciplenocphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplenocphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalelectricityphoto\"\r\n                        label=\"Please attach Electricity bill\"\r\n                        name=\"additionalelectricityphoto\"\r\n                        autoComplete=\"additionalelectricityphoto\"\r\n                        onChange={(file) =>\r\n                          upload(\r\n                            file,\r\n                            setFieldValue,\r\n                            \"additionalelectricityphoto\"\r\n                          )\r\n                        }\r\n                        // value={values.additionalelectricityphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalelectricityphoto &&\r\n                          touched.additionalelectricityphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalelectricityphoto &&\r\n                          errors.additionalelectricityphoto\r\n                        }\r\n                      />\r\n                      {values.additionalelectricityphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalelectricityphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalrentphoto\"\r\n                        label=\"Please attach Rent Agrement\"\r\n                        name=\"additionalrentphoto\"\r\n                        autoComplete=\"additionalrentphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalrentphoto\")\r\n                        }\r\n                        // value={values.additionalrentphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalrentphoto &&\r\n                          touched.additionalrentphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalrentphoto &&\r\n                          errors.additionalrentphoto\r\n                        }\r\n                      />\r\n                      {values.additionalrentphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalrentphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalnocphoto\"\r\n                        label=\"Please attach NOC if Rented\"\r\n                        name=\"additionalnocphoto\"\r\n                        autoComplete=\"additionalnocphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalnocphoto\")\r\n                        }\r\n                        // value={values.additionalnocphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalnocphoto &&\r\n                          touched.additionalnocphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalnocphoto &&\r\n                          errors.additionalnocphoto\r\n                        }\r\n                      />\r\n                      {values.additionalnocphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalnocphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfDirectors\"\r\n                        label=\"Number of Director\"\r\n                        name=\"numberOfDirectors\"\r\n                        autoComplete=\"numberOfDirectors\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfDirectors}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfDirectors && touched.numberOfDirectors\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfDirectors && errors.numberOfDirectors\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfDirectors)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorName\" + index}\r\n                                label={\"Director's \" + (index + 1) + \" Name\"}\r\n                                name={\"directorName\" + index}\r\n                                autoComplete={\"directorName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorName\" + index] &&\r\n                                  touched[\"directorName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorName\" + index] &&\r\n                                  errors[\"directorName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorDin\" + index}\r\n                                label={\"DIN of Director \" + (index + 1)}\r\n                                name={\"directorDin\" + index}\r\n                                autoComplete={\"directorDin\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorDin\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorDin\" + index] &&\r\n                                  touched[\"directorDin\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorDin\" + index] &&\r\n                                  errors[\"directorDin\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorFatherName\" + index}\r\n                                label={\r\n                                  \"Director \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"directorFatherName\" + index}\r\n                                autoComplete={\"directorFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorFatherName\" + index] &&\r\n                                  touched[\"directorFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorFatherName\" + index] &&\r\n                                  errors[\"directorFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Director \" + (index + 1)}\r\n                                name={\"directorAadharNo\" + index}\r\n                                autoComplete={\"directorAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorAadharNo\" + index] &&\r\n                                  touched[\"directorAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorAadharNo\" + index] &&\r\n                                  errors[\"directorAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  margin=\"dense\"\r\n                                  type=\"file\"\r\n                                  style={{ width: \"90%\" }}\r\n                                  size=\"small\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id={\"directorAadharPhotoCopyFront\" + index}\r\n                                  label=\"Please attach Front Aadhar copy\"\r\n                                  name={\"directorAadharPhotoCopyFront\" + index}\r\n                                  autoComplete={\r\n                                    \"directorAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  onChange={(file) =>\r\n                                    upload(\r\n                                      file,\r\n                                      setFieldValue,\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    )\r\n                                  }\r\n                                  // value={values.directorAadharPhotoCopyFront}\r\n                                  InputLabelProps={{ shrink: true }}\r\n                                  error={\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                />\r\n                                {values[\r\n                                  \"directorAadharPhotoCopyFront\" + index\r\n                                ] && (\r\n                                  <Visibility\r\n                                    onClick={() => {\r\n                                      setImageName(\r\n                                        values[\r\n                                          \"directorAadharPhotoCopyFront\" + index\r\n                                        ]\r\n                                      );\r\n                                      setOpen(true);\r\n                                    }}\r\n                                    style={{\r\n                                      float: \"right\",\r\n                                      marginTop: \"25px\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  margin=\"dense\"\r\n                                  type=\"file\"\r\n                                  style={{ width: \"90%\" }}\r\n                                  size=\"small\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id={\"directorAadharPhotoCopyBack\" + index}\r\n                                  label=\"Please attach Back Aadhar copy\"\r\n                                  name={\"directorAadharPhotoCopyBack\" + index}\r\n                                  autoComplete={\r\n                                    \"directorAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  onChange={(file) =>\r\n                                    upload(\r\n                                      file,\r\n                                      setFieldValue,\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    )\r\n                                  }\r\n                                  // value={values.directorAadharPhotoCopyBack}\r\n                                  InputLabelProps={{ shrink: true }}\r\n                                  error={\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                  }\r\n                                />\r\n                                {values[\r\n                                  \"directorAadharPhotoCopyBack\" + index\r\n                                ] && (\r\n                                  <Visibility\r\n                                    onClick={() => {\r\n                                      setImageName(\r\n                                        values[\r\n                                          \"directorAadharPhotoCopyBack\" + index\r\n                                        ]\r\n                                      );\r\n                                      setOpen(true);\r\n                                    }}\r\n                                    style={{\r\n                                      float: \"right\",\r\n                                      marginTop: \"25px\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Director \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumberCopy\" + index}\r\n                                label=\"Please attach PAN copy\"\r\n                                name={\"pannumberCopy\" + index}\r\n                                autoComplete={\"pannumberCopy\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"pannumberCopy\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.pannumberCopy}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumberCopy\" + index] &&\r\n                                  touched[\"pannumberCopy\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumberCopy\" + index] &&\r\n                                  errors[\"pannumberCopy\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"pannumberCopy\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"pannumberCopy\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address of Director\" + index\r\n                                }\r\n                                name={\"directorResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"directorResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"directorResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\r\n                                    \"directorResidentialAddress\" + index\r\n                                  ] &&\r\n                                  touched[\"directorResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"directorResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"directorResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorPhoto\" + index}\r\n                                label={\r\n                                  \"Passport Size Photo of Director \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"directorPhoto\" + index}\r\n                                autoComplete={\"directorPhoto\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"directorPhoto\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.directorPhoto}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorPhoto\" + index] &&\r\n                                  touched[\"directorPhoto\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorPhoto\" + index] &&\r\n                                  errors[\"directorPhoto\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"directorPhoto\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"directorPhoto\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{ float: \"right\", marginTop: \"25px\" }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"branchname\"\r\n                        label=\"Bank details associated with PAN number of business\"\r\n                        name=\"branchname\"\r\n                        autoComplete=\"branchname\"\r\n                        onChange={handleChange}\r\n                        value={values.branchname}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.branchname && touched.branchname ? true : false\r\n                        }\r\n                        helperText={touched.branchname && errors.branchname}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"cancelcheqphoto\"\r\n                        label=\"Attach Cancel cheque\"\r\n                        name=\"cancelcheqphoto\"\r\n                        autoComplete=\"cancelcheqphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"cancelcheqphoto\")\r\n                        }\r\n                        // value={values.cancelcheqphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.cancelcheqphoto && touched.cancelcheqphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.cancelcheqphoto && errors.cancelcheqphoto\r\n                        }\r\n                      />\r\n                      {values.cancelcheqphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.cancelcheqphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"certificateOfIncorportation\"\r\n                        label=\"Certificate Of Incorportation\"\r\n                        name=\"certificateOfIncorportation\"\r\n                        autoComplete=\"certificateOfIncorportation\"\r\n                        onChange={(file) =>\r\n                          upload(\r\n                            file,\r\n                            setFieldValue,\r\n                            \"certificateOfIncorportation\"\r\n                          )\r\n                        }\r\n                        // value={values.certificateOfIncorportation}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.certificateOfIncorportation &&\r\n                          touched.certificateOfIncorportation\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.certificateOfIncorportation &&\r\n                          errors.certificateOfIncorportation\r\n                        }\r\n                      />\r\n                      {values.certificateOfIncorportation && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.certificateOfIncorportation);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Admin\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensephoto\"\r\n                          label=\"Attach trade license\"\r\n                          name=\"tradelicensephoto\"\r\n                          autoComplete=\"tradelicensephoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"tradelicensephoto\")\r\n                          }\r\n                          // value={values.tradelicensephoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensephoto &&\r\n                            touched.tradelicensephoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensephoto &&\r\n                            errors.tradelicensephoto\r\n                          }\r\n                        />\r\n                        {values.tradelicensephoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.tradelicensephoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"declarationOfAuthorisedSignatory\"\r\n                          label=\"Declaration Of Authorised Signatory\"\r\n                          name=\"declarationOfAuthorisedSignatory\"\r\n                          autoComplete=\"declarationOfAuthorisedSignatory\"\r\n                          onChange={(file) =>\r\n                            upload(\r\n                              file,\r\n                              setFieldValue,\r\n                              \"declarationOfAuthorisedSignatory\"\r\n                            )\r\n                          }\r\n                          // value={values.declarationOfAuthorisedSignatory}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.declarationOfAuthorisedSignatory &&\r\n                            touched.declarationOfAuthorisedSignatory\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.declarationOfAuthorisedSignatory &&\r\n                            errors.declarationOfAuthorisedSignatory\r\n                          }\r\n                        />\r\n                        {values.declarationOfAuthorisedSignatory && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(\r\n                                values.declarationOfAuthorisedSignatory\r\n                              );\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstAttachment\" + index}\r\n                                label=\"Please attach GST Copy\"\r\n                                name={\"gstAttachment\" + index}\r\n                                autoComplete={\"gstAttachment\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"gstAttachment\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.gstAttachment}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstAttachment\" + index] &&\r\n                                  touched[\"gstAttachment\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstAttachment\" + index] &&\r\n                                  errors[\"gstAttachment\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"gstAttachment\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"gstAttachment\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  {params.id && sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(params.id === undefined ||\r\n                    orderDetails?.status === \"DRAFT\") && (\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                          onClick={() => {\r\n                            submitForm(values, true);\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    orderDetails?.status === \"CREATED\" && (\r\n                      <>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <Grid item xs={12}>\r\n                            <Button\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                submitForm(values, true);\r\n                              }}\r\n                            >\r\n                              Save & Update\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                approve();\r\n                              }}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                reject();\r\n                              }}\r\n                            >\r\n                              Reject\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const Company = withSnackbar(CompanyComponent);\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\nconst aadharRegex = /^[0-9]{4}\\s{1}[0-9]{4}\\s{1}[0-9]{4}$/;\n\nexport const schema = Yup.object().shape({\n  pannumber: Yup.string()\n    .required(\"Please enter your Pan Number\")\n    .matches(panRegex, \"Invalid Pan Number\"),\n  numberOfPartners: Yup.number()\n    .required(\"Please enter No Of Partners\")\n    .min(1, \"Minimum 1 number of Partners\")\n    .max(15, \"Maximum 15 number of Partners\"),\n  partnerAadharNo0: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 1,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo1: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 2,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo2: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 3,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo3: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 4,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo4: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 5,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo5: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 6,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo6: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 7,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo7: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 8,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo8: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 9,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo9: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 10,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo10: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 11,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo11: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 12,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo12: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 13,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo13: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 14,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo14: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 15,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n});\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Visibility } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { DialogComponent } from \"../Dialog\";\r\nimport { schema } from \"./schema/LLPSchema\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\nconst LLPComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/LLP/\" + id)\r\n      .then((response: any) => {\r\n        response.data.partnerList.forEach((partner: any, index: any) => {\r\n          response.data[\"partnerName\" + index] = partner.partnerName;\r\n          response.data[\"partnerFatherName\" + index] =\r\n            partner.partnerFatherName;\r\n          response.data[\"partnerAadharNo\" + index] = partner.partnerAadharNo;\r\n          response.data[\"partnerAadharPhotoCopyFront\" + index] =\r\n            partner.partnerAadharPhotoCopyFront;\r\n          response.data[\"partnerAadharPhotoCopyBack\" + index] =\r\n            partner.partnerAadharPhotoCopyBack;\r\n          response.data[\"pannumber\" + index] = partner.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = partner.pannumberCopy;\r\n          response.data[\"partnerResidentialAddress\" + index] =\r\n            partner.partnerResidentialAddress;\r\n          response.data[\"partnerPhoto\" + index] = partner.partnerPhoto;\r\n        });\r\n        response.data.numberOfPartners = response.data.partnerList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Error fetching order details\", failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/LLP/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/LLP/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"partnerPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const partnerList: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      partnerList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        partnerName: values[\"partnerName\" + index],\r\n        partnerFatherName: values[\"partnerFatherName\" + index],\r\n        partnerAadharNo: values[\"partnerAadharNo\" + index],\r\n        partnerAadharPhotoCopyFront:\r\n          values[\"partnerAadharPhotoCopyFront\" + index],\r\n        partnerAadharPhotoCopyBack:\r\n          values[\"partnerAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        partnerResidentialAddress: values[\"partnerResidentialAddress\" + index],\r\n        partnerPhoto: values[\"partnerPhoto\" + index],\r\n      });\r\n    });\r\n    values.partnerList = partnerList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-llp\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-llp\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  let valuesForPartners: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForPartners[\"partnerName\" + index] = \"\";\r\n    valuesForPartners[\"partnerFatherName\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharNo\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForPartners[\"pannumber\" + index] = \"\";\r\n    valuesForPartners[\"pannumberCopy\" + index] = \"\";\r\n    valuesForPartners[\"partnerResidentialAddress\" + index] = \"\";\r\n    valuesForPartners[\"partnerPhoto\" + index] = \"\";\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <DialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            LLP\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      businessactivity: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      accountname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsc: \"\",\r\n                      branchname: \"\",\r\n                      branchcode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      certificateOfIncorportation: \"\",\r\n                      partnershipDeed: \"\",\r\n                      isActive: true,\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfPartners: 1,\r\n                      ...valuesForPartners,\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the LLP\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"panphoto\"\r\n                        label=\"Please attach PAN card copy\"\r\n                        name=\"panphoto\"\r\n                        autoComplete=\"panphoto\"\r\n                        // onChange={handleChange}\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"panphoto\")\r\n                        }\r\n                        // value={values.panphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                        helperText={touched.panphoto && errors.panphoto}\r\n                      />\r\n                      {values.panphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.panphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"pricipleelectricityphoto\"\r\n                          label=\"Please attach Electricity bill\"\r\n                          name=\"pricipleelectricityphoto\"\r\n                          autoComplete=\"pricipleelectricityphoto\"\r\n                          onChange={(file) =>\r\n                            upload(\r\n                              file,\r\n                              setFieldValue,\r\n                              \"pricipleelectricityphoto\"\r\n                            )\r\n                          }\r\n                          // value={values.pricipleelectricityphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.pricipleelectricityphoto &&\r\n                            touched.pricipleelectricityphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.pricipleelectricityphoto &&\r\n                            errors.pricipleelectricityphoto\r\n                          }\r\n                        />\r\n                        {values.pricipleelectricityphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.pricipleelectricityphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplerentphoto\"\r\n                          label=\"Please attach Rent Agrement\"\r\n                          name=\"priciplerentphoto\"\r\n                          autoComplete=\"priciplerentphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplerentphoto\")\r\n                          }\r\n                          // value={values.priciplerentphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplerentphoto &&\r\n                            touched.priciplerentphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.priciplerentphoto &&\r\n                            errors.priciplerentphoto\r\n                          }\r\n                        />\r\n                        {values.priciplerentphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplerentphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplenocphoto\"\r\n                          label=\"Please attach NOC if Rented\"\r\n                          name=\"priciplenocphoto\"\r\n                          autoComplete=\"priciplenocphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplenocphoto\")\r\n                          }\r\n                          // value={values.priciplenocphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplenocphoto && touched.priciplenocphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.panphoto && errors.priciplenocphoto\r\n                          }\r\n                        />\r\n                        {values.priciplenocphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplenocphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalelectricityphoto\"\r\n                        label=\"Please attach Electricity bill\"\r\n                        name=\"additionalelectricityphoto\"\r\n                        autoComplete=\"additionalelectricityphoto\"\r\n                        onChange={(file) =>\r\n                          upload(\r\n                            file,\r\n                            setFieldValue,\r\n                            \"additionalelectricityphoto\"\r\n                          )\r\n                        }\r\n                        // value={values.additionalelectricityphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalelectricityphoto &&\r\n                          touched.additionalelectricityphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalelectricityphoto &&\r\n                          errors.additionalelectricityphoto\r\n                        }\r\n                      />\r\n                      {values.additionalelectricityphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalelectricityphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalrentphoto\"\r\n                        label=\"Please attach Rent Agrement\"\r\n                        name=\"additionalrentphoto\"\r\n                        autoComplete=\"additionalrentphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalrentphoto\")\r\n                        }\r\n                        // value={values.additionalrentphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalrentphoto &&\r\n                          touched.additionalrentphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalrentphoto &&\r\n                          errors.additionalrentphoto\r\n                        }\r\n                      />\r\n                      {values.additionalrentphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalrentphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalnocphoto\"\r\n                        label=\"Please attach NOC if Rented\"\r\n                        name=\"additionalnocphoto\"\r\n                        autoComplete=\"additionalnocphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalnocphoto\")\r\n                        }\r\n                        // value={values.additionalnocphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalnocphoto &&\r\n                          touched.additionalnocphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalnocphoto &&\r\n                          errors.additionalnocphoto\r\n                        }\r\n                      />\r\n                      {values.additionalnocphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalnocphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfPartners\"\r\n                        label=\"Number of Partner\"\r\n                        name=\"numberOfPartners\"\r\n                        autoComplete=\"numberOfPartners\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfPartners}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfPartners && touched.numberOfPartners\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfPartners && errors.numberOfPartners\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfPartners)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerName\" + index}\r\n                                label={\"Partner \" + (index + 1) + \" Name\"}\r\n                                name={\"partnerName\" + index}\r\n                                autoComplete={\"partnerName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerName\" + index] &&\r\n                                  touched[\"partnerName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerName\" + index] &&\r\n                                  errors[\"partnerName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerFatherName\" + index}\r\n                                label={\r\n                                  \"Partner \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"partnerFatherName\" + index}\r\n                                autoComplete={\"partnerFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerFatherName\" + index] &&\r\n                                  touched[\"partnerFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerFatherName\" + index] &&\r\n                                  errors[\"partnerFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Partner \" + (index + 1)}\r\n                                name={\"partnerAadharNo\" + index}\r\n                                autoComplete={\"partnerAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerAadharNo\" + index] &&\r\n                                  touched[\"partnerAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerAadharNo\" + index] &&\r\n                                  errors[\"partnerAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  margin=\"dense\"\r\n                                  type=\"file\"\r\n                                  style={{ width: \"90%\" }}\r\n                                  size=\"small\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id={\"partnerAadharPhotoCopyFront\" + index}\r\n                                  label=\"Please attach Front Aadhar copy\"\r\n                                  name={\"partnerAadharPhotoCopyFront\" + index}\r\n                                  autoComplete={\r\n                                    \"partnerAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  onChange={(file) =>\r\n                                    upload(\r\n                                      file,\r\n                                      setFieldValue,\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    )\r\n                                  }\r\n                                  // value={values.partnerAadharPhotoCopyFront}\r\n                                  InputLabelProps={{ shrink: true }}\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                />\r\n                                {values[\r\n                                  \"partnerAadharPhotoCopyFront\" + index\r\n                                ] && (\r\n                                  <Visibility\r\n                                    onClick={() => {\r\n                                      setImageName(\r\n                                        values[\r\n                                          \"partnerAadharPhotoCopyFront\" + index\r\n                                        ]\r\n                                      );\r\n                                      setOpen(true);\r\n                                    }}\r\n                                    style={{\r\n                                      float: \"right\",\r\n                                      marginTop: \"25px\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  margin=\"dense\"\r\n                                  type=\"file\"\r\n                                  style={{ width: \"90%\" }}\r\n                                  size=\"small\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id={\"partnerAadharPhotoCopyBack\" + index}\r\n                                  label=\"Please attach Front Aadhar copy\"\r\n                                  name={\"partnerAadharPhotoCopyBack\" + index}\r\n                                  autoComplete={\r\n                                    \"partnerAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  onChange={(file) =>\r\n                                    upload(\r\n                                      file,\r\n                                      setFieldValue,\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    )\r\n                                  }\r\n                                  // value={values.partnerAadharPhotoCopyBack}\r\n                                  InputLabelProps={{ shrink: true }}\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    errors[\"partnerAadharPhotoCopyBack\" + index]\r\n                                  }\r\n                                />\r\n                                {values[\r\n                                  \"partnerAadharPhotoCopyBack\" + index\r\n                                ] && (\r\n                                  <Visibility\r\n                                    onClick={() => {\r\n                                      setImageName(\r\n                                        values[\r\n                                          \"partnerAadharPhotoCopyBack\" + index\r\n                                        ]\r\n                                      );\r\n                                      setOpen(true);\r\n                                    }}\r\n                                    style={{\r\n                                      float: \"right\",\r\n                                      marginTop: \"25px\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Partner \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumberCopy\" + index}\r\n                                label=\"Please attach PAN copy\"\r\n                                name={\"pannumberCopy\" + index}\r\n                                autoComplete={\"pannumberCopy\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"pannumberCopy\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.pannumberCopy}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumberCopy\" + index] &&\r\n                                  touched[\"pannumberCopy\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumberCopy\" + index] &&\r\n                                  errors[\"pannumberCopy\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"pannumberCopy\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"pannumberCopy\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"partnerResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerResidentialAddress\" + index] &&\r\n                                  touched[\"partnerResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"partnerResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerPhoto\" + index}\r\n                                label={\r\n                                  \"Passport Size Photo of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerPhoto\" + index}\r\n                                autoComplete={\"partnerPhoto\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"partnerPhoto\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.partnerPhoto}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerPhoto\" + index] &&\r\n                                  touched[\"partnerPhoto\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerPhoto\" + index] &&\r\n                                  errors[\"partnerPhoto\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"partnerPhoto\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"partnerPhoto\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{ float: \"right\", marginTop: \"25px\" }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"branchname\"\r\n                        label=\"Bank details associated with PAN number of business\"\r\n                        name=\"branchname\"\r\n                        autoComplete=\"branchname\"\r\n                        onChange={handleChange}\r\n                        value={values.branchname}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.branchname && touched.branchname ? true : false\r\n                        }\r\n                        helperText={touched.branchname && errors.branchname}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"cancelcheqphoto\"\r\n                        label=\"Attach Cancel cheque\"\r\n                        name=\"cancelcheqphoto\"\r\n                        autoComplete=\"cancelcheqphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"cancelcheqphoto\")\r\n                        }\r\n                        // value={values.cancelcheqphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.cancelcheqphoto && touched.cancelcheqphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.cancelcheqphoto && errors.cancelcheqphoto\r\n                        }\r\n                      />\r\n                      {values.cancelcheqphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.cancelcheqphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"partnershipDeed\"\r\n                        label=\"Partnership Deed\"\r\n                        name=\"partnershipDeed\"\r\n                        autoComplete=\"partnershipDeed\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"partnershipDeed\")\r\n                        }\r\n                        // value={values.partnershipDeed}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.partnershipDeed && touched.partnershipDeed\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.partnershipDeed && errors.partnershipDeed\r\n                        }\r\n                      />\r\n                      {values.partnershipDeed && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.partnershipDeed);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"certificateOfIncorportation\"\r\n                        label=\"Certificate Of Incorportation\"\r\n                        name=\"certificateOfIncorportation\"\r\n                        autoComplete=\"certificateOfIncorportation\"\r\n                        onChange={(file) =>\r\n                          upload(\r\n                            file,\r\n                            setFieldValue,\r\n                            \"certificateOfIncorportation\"\r\n                          )\r\n                        }\r\n                        // value={values.certificateOfIncorportation}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.certificateOfIncorportation &&\r\n                          touched.certificateOfIncorportation\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.certificateOfIncorportation &&\r\n                          errors.certificateOfIncorportation\r\n                        }\r\n                      />\r\n                      {values.certificateOfIncorportation && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.certificateOfIncorportation);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Admin\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensephoto\"\r\n                          label=\"Attach trade license\"\r\n                          name=\"tradelicensephoto\"\r\n                          autoComplete=\"tradelicensephoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"tradelicensephoto\")\r\n                          }\r\n                          // value={values.tradelicensephoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensephoto &&\r\n                            touched.tradelicensephoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensephoto &&\r\n                            errors.tradelicensephoto\r\n                          }\r\n                        />\r\n                        {values.tradelicensephoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.tradelicensephoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstAttachment\" + index}\r\n                                label=\"Please attach GST Copy\"\r\n                                name={\"gstAttachment\" + index}\r\n                                autoComplete={\"gstAttachment\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"gstAttachment\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.gstAttachment}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstAttachment\" + index] &&\r\n                                  touched[\"gstAttachment\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstAttachment\" + index] &&\r\n                                  errors[\"gstAttachment\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"gstAttachment\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"gstAttachment\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  {params.id && sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(params.id === undefined ||\r\n                    orderDetails?.status === \"DRAFT\") && (\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                          onClick={() => {\r\n                            submitForm(values, true);\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {params.id &&\r\n                    sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    orderDetails?.status === \"CREATED\" && (\r\n                      <>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <Grid item xs={12}>\r\n                            <Button\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                submitForm(values, true);\r\n                              }}\r\n                            >\r\n                              Save & Update\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                approve();\r\n                              }}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                reject();\r\n                              }}\r\n                            >\r\n                              Reject\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const LLP = withSnackbar(LLPComponent);\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\nconst aadharRegex = /^[0-9]{4}\\s{1}[0-9]{4}\\s{1}[0-9]{4}$/;\n\nexport const schema = Yup.object().shape({\n  pannumber: Yup.string()\n    .required(\"Please enter your Pan Number\")\n    .matches(panRegex, \"Invalid Pan Number\"),\n  numberOfPartners: Yup.number()\n    .required(\"Please enter No Of Partners\")\n    .min(1, \"Minimum 1 number of Partners\")\n    .max(15, \"Maximum 15 number of Partners\"),\n  partnerAadharNo0: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 1,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo1: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 2,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo2: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 3,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo3: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 4,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo4: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 5,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo5: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 6,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo6: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 7,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo7: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 8,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo8: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 9,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo9: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 10,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo10: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 11,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo11: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 12,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo12: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 13,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo13: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 14,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n  partnerAadharNo14: Yup.string().when(\"numberOfPartners\", {\n    is: (numberOfPartners: number) => numberOfPartners >= 15,\n    then: Yup.string()\n      .required(\"Please enter Aadhar Number\")\n      .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n  }),\n});\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Visibility } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { DialogComponent } from \"../Dialog\";\r\nimport { schema } from \"./schema/PartnerSchema\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\nconst PartnershipComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const [imageName, setImageName] = React.useState<any>();\r\n\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Partnership/\" + id)\r\n      .then((response: any) => {\r\n        response.data.partnerList.forEach((partner: any, index: any) => {\r\n          response.data[\"id\" + index] = partner.id;\r\n          response.data[\"partnerName\" + index] = partner.partnerName;\r\n          response.data[\"partnerFatherName\" + index] =\r\n            partner.partnerFatherName;\r\n          response.data[\"partnerAadharNo\" + index] = partner.partnerAadharNo;\r\n          response.data[\"partnerAadharPhotoCopyFront\" + index] =\r\n            partner.partnerAadharPhotoCopyFront;\r\n          response.data[\"partnerAadharPhotoCopyBack\" + index] =\r\n            partner.partnerAadharPhotoCopyBack;\r\n          response.data[\"partnerResidentialAddress\" + index] =\r\n            partner.partnerResidentialAddress;\r\n          response.data[\"partnerPhoto\" + index] = partner.partnerPhoto;\r\n          response.data[\"partnerMobile\" + index] = partner.partnerMobile;\r\n          response.data[\"partnerEmail\" + index] = partner.partnerEmail;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            partner.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfPartners = response.data.partnerList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Partnership/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Partnership/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"partnerPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const partnerList: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      partnerList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        partnerName: values[\"partnerName\" + index],\r\n        partnerFatherName: values[\"partnerFatherName\" + index],\r\n        partnerAadharNo: values[\"partnerAadharNo\" + index],\r\n        partnerAadharPhotoCopyFront:\r\n          values[\"partnerAadharPhotoCopyFront\" + index],\r\n        partnerAadharPhotoCopyBack:\r\n          values[\"partnerAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        partnerResidentialAddress: values[\"partnerResidentialAddress\" + index],\r\n        partnerPhoto: values[\"partnerPhoto\" + index],\r\n        partnerMobile: values[\"partnerMobile\" + index],\r\n        partnerEmail: values[\"partnerEmail\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n    values.partnerList = partnerList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-partnership\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-partnership\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  let valuesForPartners: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForPartners[\"partnerName\" + index] = \"\";\r\n    valuesForPartners[\"partnerFatherName\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharNo\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForPartners[\"pannumber\" + index] = \"\";\r\n    valuesForPartners[\"pannumberCopy\" + index] = \"\";\r\n    valuesForPartners[\"partnerResidentialAddress\" + index] = \"\";\r\n    valuesForPartners[\"partnerPhoto\" + index] = \"\";\r\n    valuesForPartners[\"partnerMobile\" + index] = \"\";\r\n    valuesForPartners[\"partnerEmail\" + index] = \"\";\r\n    valuesForPartners[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <DialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Partnership\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      businessactivity: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      accountname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsc: \"\",\r\n                      branchname: \"\",\r\n                      branchcode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      isActive: true,\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfPartners: 1,\r\n                      ...valuesForPartners,\r\n                      partnershipDeed: \"\",\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the Partnership Firm\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number of Firm\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"panphoto\"\r\n                        label=\"Please attach PAN card copy\"\r\n                        name=\"panphoto\"\r\n                        autoComplete=\"panphoto\"\r\n                        // onChange={handleChange}\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"panphoto\")\r\n                        }\r\n                        // value={values.panphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                        helperText={touched.panphoto && errors.panphoto}\r\n                      />\r\n                      {values.panphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.panphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"pricipleelectricityphoto\"\r\n                          label=\"Please attach Electricity bill\"\r\n                          name=\"pricipleelectricityphoto\"\r\n                          autoComplete=\"pricipleelectricityphoto\"\r\n                          onChange={(file) =>\r\n                            upload(\r\n                              file,\r\n                              setFieldValue,\r\n                              \"pricipleelectricityphoto\"\r\n                            )\r\n                          }\r\n                          // value={values.pricipleelectricityphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.pricipleelectricityphoto &&\r\n                            touched.pricipleelectricityphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.pricipleelectricityphoto &&\r\n                            errors.pricipleelectricityphoto\r\n                          }\r\n                        />\r\n                        {values.pricipleelectricityphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.pricipleelectricityphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplerentphoto\"\r\n                          label=\"Please attach Rent Agrement\"\r\n                          name=\"priciplerentphoto\"\r\n                          autoComplete=\"priciplerentphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplerentphoto\")\r\n                          }\r\n                          // value={values.priciplerentphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplerentphoto &&\r\n                            touched.priciplerentphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.priciplerentphoto &&\r\n                            errors.priciplerentphoto\r\n                          }\r\n                        />\r\n                        {values.priciplerentphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplerentphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplenocphoto\"\r\n                          label=\"Please attach NOC if Rented\"\r\n                          name=\"priciplenocphoto\"\r\n                          autoComplete=\"priciplenocphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplenocphoto\")\r\n                          }\r\n                          // value={values.priciplenocphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplenocphoto && touched.priciplenocphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.priciplenocphoto && errors.priciplenocphoto\r\n                          }\r\n                        />\r\n                        {values.priciplenocphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplenocphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalelectricityphoto\"\r\n                        label=\"Please attach Electricity bill\"\r\n                        name=\"additionalelectricityphoto\"\r\n                        autoComplete=\"additionalelectricityphoto\"\r\n                        onChange={(file) =>\r\n                          upload(\r\n                            file,\r\n                            setFieldValue,\r\n                            \"additionalelectricityphoto\"\r\n                          )\r\n                        }\r\n                        // value={values.additionalelectricityphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalelectricityphoto &&\r\n                          touched.additionalelectricityphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalelectricityphoto &&\r\n                          errors.additionalelectricityphoto\r\n                        }\r\n                      />\r\n                      {values.additionalelectricityphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalelectricityphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalrentphoto\"\r\n                        label=\"Please attach Rent Agrement\"\r\n                        name=\"additionalrentphoto\"\r\n                        autoComplete=\"additionalrentphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalrentphoto\")\r\n                        }\r\n                        // value={values.additionalrentphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalrentphoto &&\r\n                          touched.additionalrentphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalrentphoto &&\r\n                          errors.additionalrentphoto\r\n                        }\r\n                      />\r\n                      {values.additionalrentphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalrentphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalnocphoto\"\r\n                        label=\"Please attach NOC if Rented\"\r\n                        name=\"additionalnocphoto\"\r\n                        autoComplete=\"additionalnocphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalnocphoto\")\r\n                        }\r\n                        // value={values.additionalnocphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalnocphoto &&\r\n                          touched.additionalnocphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalnocphoto &&\r\n                          errors.additionalnocphoto\r\n                        }\r\n                      />\r\n                      {values.additionalnocphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalnocphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfPartners\"\r\n                        label=\"Number of Partner\"\r\n                        name=\"numberOfPartners\"\r\n                        autoComplete=\"numberOfPartners\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfPartners}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfPartners && touched.numberOfPartners\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfPartners && errors.numberOfPartners\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfPartners)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerName\" + index}\r\n                                label={\"Partner \" + (index + 1) + \" Name\"}\r\n                                name={\"partnerName\" + index}\r\n                                autoComplete={\"partnerName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerName\" + index] &&\r\n                                  touched[\"partnerName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerName\" + index] &&\r\n                                  errors[\"partnerName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Partner \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerFatherName\" + index}\r\n                                label={\r\n                                  \"Partner \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"partnerFatherName\" + index}\r\n                                autoComplete={\"partnerFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerFatherName\" + index] &&\r\n                                  touched[\"partnerFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerFatherName\" + index] &&\r\n                                  errors[\"partnerFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Partner \" + (index + 1)}\r\n                                name={\"partnerAadharNo\" + index}\r\n                                autoComplete={\"partnerAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerAadharNo\" + index] &&\r\n                                  touched[\"partnerAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerAadharNo\" + index] &&\r\n                                  errors[\"partnerAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  margin=\"dense\"\r\n                                  type=\"file\"\r\n                                  style={{ width: \"90%\" }}\r\n                                  size=\"small\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id={\"partnerAadharPhotoCopyFront\" + index}\r\n                                  label=\"Please attach Front Aadhar copy\"\r\n                                  name={\"partnerAadharPhotoCopyFront\" + index}\r\n                                  autoComplete={\r\n                                    \"partnerAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  onChange={(file) =>\r\n                                    upload(\r\n                                      file,\r\n                                      setFieldValue,\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    )\r\n                                  }\r\n                                  // value={values.partnerAadharPhotoCopyFront}\r\n                                  InputLabelProps={{ shrink: true }}\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                />\r\n                                {values[\r\n                                  \"partnerAadharPhotoCopyFront\" + index\r\n                                ] && (\r\n                                  <Visibility\r\n                                    onClick={() => {\r\n                                      setImageName(\r\n                                        values[\r\n                                          \"partnerAadharPhotoCopyFront\" + index\r\n                                        ]\r\n                                      );\r\n                                      setOpen(true);\r\n                                    }}\r\n                                    style={{\r\n                                      float: \"right\",\r\n                                      marginTop: \"25px\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  margin=\"dense\"\r\n                                  type=\"file\"\r\n                                  style={{ width: \"90%\" }}\r\n                                  size=\"small\"\r\n                                  required\r\n                                  fullWidth\r\n                                  id={\"partnerAadharPhotoCopyBack\" + index}\r\n                                  label=\"Please attach Back Aadhar copy\"\r\n                                  name={\"partnerAadharPhotoCopyBack\" + index}\r\n                                  autoComplete={\r\n                                    \"partnerAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  onChange={(file) =>\r\n                                    upload(\r\n                                      file,\r\n                                      setFieldValue,\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    )\r\n                                  }\r\n                                  // value={values.partnerAadharPhotoCopyBack}\r\n                                  InputLabelProps={{ shrink: true }}\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    errors[\"partnerAadharPhotoCopyBack\" + index]\r\n                                  }\r\n                                />\r\n                                {values[\r\n                                  \"partnerAadharPhotoCopyBack\" + index\r\n                                ] && (\r\n                                  <Visibility\r\n                                    onClick={() => {\r\n                                      setImageName(\r\n                                        values[\r\n                                          \"partnerAadharPhotoCopyBack\" + index\r\n                                        ]\r\n                                      );\r\n                                      setOpen(true);\r\n                                    }}\r\n                                    style={{\r\n                                      float: \"right\",\r\n                                      marginTop: \"25px\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Partner \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumberCopy\" + index}\r\n                                label=\"Please attach PAN copy\"\r\n                                name={\"pannumberCopy\" + index}\r\n                                autoComplete={\"pannumberCopy\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"pannumberCopy\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.pannumberCopy}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumberCopy\" + index] &&\r\n                                  touched[\"pannumberCopy\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumberCopy\" + index] &&\r\n                                  errors[\"pannumberCopy\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"pannumberCopy\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"pannumberCopy\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address Of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"partnerResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerResidentialAddress\" + index] &&\r\n                                  touched[\"partnerResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"partnerResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerPhoto\" + index}\r\n                                label={\r\n                                  \"Passport Size Photo of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerPhoto\" + index}\r\n                                autoComplete={\"partnerPhoto\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"partnerPhoto\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.partnerPhoto}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerPhoto\" + index] &&\r\n                                  touched[\"partnerPhoto\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerPhoto\" + index] &&\r\n                                  errors[\"partnerPhoto\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"partnerPhoto\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"partnerPhoto\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{ float: \"right\", marginTop: \"25px\" }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                type=\"number\"\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerMobile\" + index}\r\n                                label={\"Mobile of Partner \" + (index + 1)}\r\n                                name={\"partnerMobile\" + index}\r\n                                autoComplete={\"partnerMobile\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerMobile\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerMobile\" + index] &&\r\n                                  touched[\"partnerMobile\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerMobile\" + index] &&\r\n                                  errors[\"partnerMobile\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerEmail\" + index}\r\n                                label={\"Email of Partner \" + (index + 1)}\r\n                                name={\"partnerEmail\" + index}\r\n                                autoComplete={\"partnerEmail\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerEmail\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerEmail\" + index] &&\r\n                                  touched[\"partnerEmail\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerEmail\" + index] &&\r\n                                  errors[\"partnerEmail\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"branchname\"\r\n                        label=\"Bank details associated with PAN number of business\"\r\n                        name=\"branchname\"\r\n                        autoComplete=\"branchname\"\r\n                        onChange={handleChange}\r\n                        value={values.branchname}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.branchname && touched.branchname ? true : false\r\n                        }\r\n                        helperText={touched.branchname && errors.branchname}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"cancelcheqphoto\"\r\n                        label=\"Attach Cancel cheque\"\r\n                        name=\"cancelcheqphoto\"\r\n                        autoComplete=\"cancelcheqphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"cancelcheqphoto\")\r\n                        }\r\n                        // value={values.cancelcheqphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.cancelcheqphoto && touched.cancelcheqphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.cancelcheqphoto && errors.cancelcheqphoto\r\n                        }\r\n                      />\r\n                      {values.cancelcheqphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.cancelcheqphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"partnershipDeed\"\r\n                        label=\"Partnership Deed\"\r\n                        name=\"partnershipDeed\"\r\n                        autoComplete=\"partnershipDeed\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"partnershipDeed\")\r\n                        }\r\n                        // value={values.partnershipDeed}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.partnershipDeed && touched.partnershipDeed\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.partnershipDeed && errors.partnershipDeed\r\n                        }\r\n                      />\r\n                      {values.partnershipDeed && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.partnershipDeed);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {sessionStorage.getItem(\"role\") !== \"Admin\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensephoto\"\r\n                          label=\"Attach trade license\"\r\n                          name=\"tradelicensephoto\"\r\n                          autoComplete=\"tradelicensephoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"tradelicensephoto\")\r\n                          }\r\n                          // value={values.tradelicensephoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensephoto &&\r\n                            touched.tradelicensephoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensephoto &&\r\n                            errors.tradelicensephoto\r\n                          }\r\n                        />\r\n                        {values.tradelicensephoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.tradelicensephoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"declarationOfAuthorisedSignatory\"\r\n                          label=\"Declaration Of Authorised Signatory\"\r\n                          name=\"declarationOfAuthorisedSignatory\"\r\n                          autoComplete=\"declarationOfAuthorisedSignatory\"\r\n                          onChange={(file) =>\r\n                            upload(\r\n                              file,\r\n                              setFieldValue,\r\n                              \"declarationOfAuthorisedSignatory\"\r\n                            )\r\n                          }\r\n                          // value={values.declarationOfAuthorisedSignatory}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.declarationOfAuthorisedSignatory &&\r\n                            touched.declarationOfAuthorisedSignatory\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.declarationOfAuthorisedSignatory &&\r\n                            errors.declarationOfAuthorisedSignatory\r\n                          }\r\n                        />\r\n                        {values.declarationOfAuthorisedSignatory && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(\r\n                                values.declarationOfAuthorisedSignatory\r\n                              );\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        type=\"number\"\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstAttachment\" + index}\r\n                                label=\"Please attach GST Copy\"\r\n                                name={\"gstAttachment\" + index}\r\n                                autoComplete={\"gstAttachment\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"gstAttachment\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.gstAttachment}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstAttachment\" + index] &&\r\n                                  touched[\"gstAttachment\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstAttachment\" + index] &&\r\n                                  errors[\"gstAttachment\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"gstAttachment\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"gstAttachment\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  {params.id && sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(params.id === undefined ||\r\n                    orderDetails?.status === \"DRAFT\") && (\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                          onClick={() => {\r\n                            submitForm(values, true);\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    orderDetails?.status === \"CREATED\" && (\r\n                      <>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <Grid item xs={12}>\r\n                            <Button\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                submitForm(values, true);\r\n                              }}\r\n                            >\r\n                              Save & Update\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                approve();\r\n                              }}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                reject();\r\n                              }}\r\n                            >\r\n                              Reject\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const Partnership = withSnackbar(PartnershipComponent);\r\n","import * as Yup from \"yup\";\r\nconst panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\r\nconst aadharRegex = /^[0-9]{4}\\s{1}[0-9]{4}\\s{1}[0-9]{4}$/;\r\n\r\nexport const schema = Yup.object().shape({\r\n  propadharnumber: Yup.string()\r\n    .required(\"Please enter Aadhar Number\")\r\n    .matches(aadharRegex, \"Invalid Aadhar Number (78XX 45XX 97XX)\"),\r\n  // signadharnumber: Yup.string()\r\n  //   .required(\"Please enter Aadhar Number\")\r\n  //   .matches(aadharRegex, \"Invalid Aadhar Number (78XX 45XX 97XX)\"),\r\n  pannumber: Yup.string()\r\n    .required(\"Please enter your Pan Number\")\r\n    .matches(panRegex, \"Invalid Pan Number\"),\r\n});\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Visibility } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { DialogComponent } from \"../Dialog\";\r\nimport { schema } from \"./schema/SoleProprietorSchama\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SoleProprietorComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Proprietorship/\" + id)\r\n      .then((response: any) => {\r\n        // props.enqueueSnackbar(\"Order Rejected Successfull\", successToast);\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Proprietorship/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Proprietorship/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (event.currentTarget.files[0].size > 100000 && field === \"photo\") {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-proprietorship\", { ...values })\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Application Submitted Successfully\",\r\n            successToast\r\n          );\r\n          history.push(\"/dashboard/order-list\");\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Error while submitting\", failureToast);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-proprietorship\", { ...values })\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Application Submitted Successfully\",\r\n            successToast\r\n          );\r\n          history.push(\"/dashboard/order-list\");\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Error while submitting\", failureToast);\r\n        });\r\n    }\r\n  };\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <DialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Sole Proprietor\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      personName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      propfatherName: \"\",\r\n                      propadharnumber: \"\",\r\n                      propadharphotoFront: \"\",\r\n                      propadharphotoBack: \"\",\r\n                      resident_address: \"\",\r\n                      photo: \"\",\r\n                      authsignname: \"\",\r\n                      signfathername: \"\",\r\n                      signadharnumber: \"\",\r\n                      signadharphoto: \"\",\r\n                      residentsignaddress: \"\",\r\n                      signphoto: \"\",\r\n                      businessactivity: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      accountname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsc: \"\",\r\n                      branchname: \"\",\r\n                      branchcode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      isActive: true,\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      status: \"CREATED\",\r\n                      remark: \"\",\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                // obj: any\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"personName\"\r\n                        label=\"Name of the person\"\r\n                        name=\"personName\"\r\n                        autoComplete=\"personName\"\r\n                        onChange={handleChange}\r\n                        value={values.personName}\r\n                        error={\r\n                          errors.personName && touched.personName ? true : false\r\n                        }\r\n                        helperText={touched.personName && errors.personName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"panphoto\"\r\n                        label=\"Please attach PAN card copy\"\r\n                        name=\"panphoto\"\r\n                        autoComplete=\"panphoto\"\r\n                        // onChange={handleChange}\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"panphoto\")\r\n                        }\r\n                        // value={values.panphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                        helperText={touched.panphoto && errors.panphoto}\r\n                      />\r\n                      {values.panphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.panphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"pricipleelectricityphoto\"\r\n                          label=\"Please attach Electricity bill\"\r\n                          name=\"pricipleelectricityphoto\"\r\n                          autoComplete=\"pricipleelectricityphoto\"\r\n                          onChange={(file) =>\r\n                            upload(\r\n                              file,\r\n                              setFieldValue,\r\n                              \"pricipleelectricityphoto\"\r\n                            )\r\n                          }\r\n                          // value={values.pricipleelectricityphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.pricipleelectricityphoto &&\r\n                            touched.pricipleelectricityphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.pricipleelectricityphoto &&\r\n                            errors.pricipleelectricityphoto\r\n                          }\r\n                        />\r\n                        {values.pricipleelectricityphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.pricipleelectricityphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplerentphoto\"\r\n                          label=\"Please attach Rent Agrement\"\r\n                          name=\"priciplerentphoto\"\r\n                          autoComplete=\"priciplerentphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplerentphoto\")\r\n                          }\r\n                          // value={values.priciplerentphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplerentphoto &&\r\n                            touched.priciplerentphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.priciplerentphoto &&\r\n                            errors.priciplerentphoto\r\n                          }\r\n                        />\r\n                        {values.priciplerentphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplerentphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"priciplenocphoto\"\r\n                          label=\"Please attach NOC if Rented\"\r\n                          name=\"priciplenocphoto\"\r\n                          autoComplete=\"priciplenocphoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"priciplenocphoto\")\r\n                          }\r\n                          // value={values.priciplenocphoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.priciplenocphoto && touched.priciplenocphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.panphoto && errors.priciplenocphoto\r\n                          }\r\n                        />\r\n                        {values.priciplenocphoto && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.priciplenocphoto);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalelectricityphoto\"\r\n                        label=\"Please attach Electricity bill\"\r\n                        name=\"additionalelectricityphoto\"\r\n                        autoComplete=\"additionalelectricityphoto\"\r\n                        onChange={(file) =>\r\n                          upload(\r\n                            file,\r\n                            setFieldValue,\r\n                            \"additionalelectricityphoto\"\r\n                          )\r\n                        }\r\n                        // value={values.additionalelectricityphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalelectricityphoto &&\r\n                          touched.additionalelectricityphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalelectricityphoto &&\r\n                          errors.additionalelectricityphoto\r\n                        }\r\n                      />\r\n                      {values.additionalelectricityphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalelectricityphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalrentphoto\"\r\n                        label=\"Please attach Rent Agrement\"\r\n                        name=\"additionalrentphoto\"\r\n                        autoComplete=\"additionalrentphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalrentphoto\")\r\n                        }\r\n                        // value={values.additionalrentphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalrentphoto &&\r\n                          touched.additionalrentphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalrentphoto &&\r\n                          errors.additionalrentphoto\r\n                        }\r\n                      />\r\n                      {values.additionalrentphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalrentphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"additionalnocphoto\"\r\n                        label=\"Please attach NOC if Rented\"\r\n                        name=\"additionalnocphoto\"\r\n                        autoComplete=\"additionalnocphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"additionalnocphoto\")\r\n                        }\r\n                        // value={values.additionalnocphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalnocphoto &&\r\n                          touched.additionalnocphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalnocphoto &&\r\n                          errors.additionalnocphoto\r\n                        }\r\n                      />\r\n                      {values.additionalnocphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.additionalnocphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"propfatherName\"\r\n                        label=\"Proprietor's Father name\"\r\n                        name=\"propfatherName\"\r\n                        autoComplete=\"propfatherName\"\r\n                        onChange={handleChange}\r\n                        value={values.propfatherName}\r\n                        error={\r\n                          errors.propfatherName && touched.propfatherName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.propfatherName && errors.propfatherName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"propadharnumber\"\r\n                        label=\"Aadhaar No. of Proprietor\"\r\n                        name=\"propadharnumber\"\r\n                        autoComplete=\"propadharnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.propadharnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.propadharnumber && touched.propadharnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.propadharnumber && errors.propadharnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container xs={12} sm={6}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"propadharphotoFront\"\r\n                          label=\"Please attach Front Aadhar copy\"\r\n                          name=\"propadharphotoFront\"\r\n                          autoComplete=\"propadharphotoFront\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"propadharphotoFront\")\r\n                          }\r\n                          // value={values.propadharphotoFront}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.propadharphotoFront &&\r\n                            touched.propadharphotoFront\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.propadharphotoFront &&\r\n                            errors.propadharphotoFront\r\n                          }\r\n                        />\r\n                        {values.propadharphotoFront && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.propadharphotoFront);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"propadharphotoBack\"\r\n                          label=\"Please attach Back Aadhar copy\"\r\n                          name=\"propadharphotoBack\"\r\n                          autoComplete=\"propadharphotoBack\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"propadharphotoBack\")\r\n                          }\r\n                          // value={values.propadharphotoBack}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.propadharphotoBack &&\r\n                            touched.propadharphotoBack\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.propadharphotoBack &&\r\n                            errors.propadharphotoBack\r\n                          }\r\n                        />\r\n                        {values.propadharphotoBack && (\r\n                          <Visibility\r\n                            onClick={() => {\r\n                              setImageName(values.propadharphotoBack);\r\n                              setOpen(true);\r\n                            }}\r\n                            style={{ float: \"right\", marginTop: \"25px\" }}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"resident_address\"\r\n                        label=\"Residential Address\"\r\n                        name=\"resident_address\"\r\n                        autoComplete=\"resident_address\"\r\n                        onChange={handleChange}\r\n                        value={values.resident_address}\r\n                        error={\r\n                          errors.resident_address && touched.resident_address\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.resident_address && errors.resident_address\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"photo\"\r\n                        label=\"Passport Size Photo\"\r\n                        name=\"photo\"\r\n                        autoComplete=\"photo\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"photo\")\r\n                        }\r\n                        // value={values.photo}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={errors.photo && touched.photo ? true : false}\r\n                        helperText={touched.photo && errors.photo}\r\n                      />\r\n                      {values.photo && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.photo);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* \r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"authsignname\"\r\n                        label=\"Name of Authorised Signatory\"\r\n                        name=\"authsignname\"\r\n                        autoComplete=\"authsignname\"\r\n                        onChange={handleChange}\r\n                        value={values.authsignname}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.authsignname && touched.authsignname\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={touched.authsignname && errors.authsignname}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"signfathername\"\r\n                        label=\"Signatory's Father name\"\r\n                        name=\"signfathername\"\r\n                        autoComplete=\"signfathername\"\r\n                        onChange={handleChange}\r\n                        value={values.signfathername}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.signfathername && touched.signfathername\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.signfathername && errors.signfathername\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"signadharnumber\"\r\n                        label=\"Aadhaar No. of Signatory\"\r\n                        name=\"signadharnumber\"\r\n                        autoComplete=\"signadharnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.signadharnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.signadharnumber && touched.signadharnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.signadharnumber && errors.signadharnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"signadharphoto\"\r\n                        label=\"Please attach Aadhar copy\"\r\n                        name=\"signadharphoto\"\r\n                        autoComplete=\"signadharphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"signadharphoto\")\r\n                        }\r\n                        // value={values.signadharphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.signadharphoto && touched.signadharphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.signadharphoto && errors.signadharphoto\r\n                        }\r\n                      />\r\n                      {values.signadharphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.signadharphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"residentsignaddress\"\r\n                        label=\"Residential Address of signatory\"\r\n                        name=\"residentsignaddress\"\r\n                        autoComplete=\"residentsignaddress\"\r\n                        onChange={handleChange}\r\n                        value={values.residentsignaddress}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.residentsignaddress &&\r\n                          touched.residentsignaddress\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.residentsignaddress &&\r\n                          errors.residentsignaddress\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"signphoto\"\r\n                        label=\"Passport Size Photo of signatory\"\r\n                        name=\"signphoto\"\r\n                        autoComplete=\"signphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"signphoto\")\r\n                        }\r\n                        // value={values.signphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.signphoto && touched.signphoto ? true : false\r\n                        }\r\n                        helperText={touched.signphoto && errors.signphoto}\r\n                      />\r\n                      {values.signphoto && (\r\n                        <Visibility\r\n                          onClick={() => {\r\n                            setImageName(values.signphoto);\r\n                            setOpen(true);\r\n                          }}\r\n                          style={{ float: \"right\", marginTop: \"25px\" }}\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n               */}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"branchname\"\r\n                        label=\"Bank details associated with PAN number of business\"\r\n                        name=\"branchname\"\r\n                        autoComplete=\"branchname\"\r\n                        onChange={handleChange}\r\n                        value={values.branchname}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.branchname && touched.branchname ? true : false\r\n                        }\r\n                        helperText={touched.branchname && errors.branchname}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"file\"\r\n                        style={{ width: \"90%\" }}\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"cancelcheqphoto\"\r\n                        label=\"Attach Cancel cheque\"\r\n                        name=\"cancelcheqphoto\"\r\n                        autoComplete=\"cancelcheqphoto\"\r\n                        onChange={(file) =>\r\n                          upload(file, setFieldValue, \"cancelcheqphoto\")\r\n                        }\r\n                        // value={values.cancelcheqphoto}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.cancelcheqphoto && touched.cancelcheqphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.cancelcheqphoto && errors.cancelcheqphoto\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {sessionStorage.getItem(\"role\") !== \"Admin\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          type=\"file\"\r\n                          style={{ width: \"90%\" }}\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"tradelicensephoto\"\r\n                          label=\"Attach trade license\"\r\n                          name=\"tradelicensephoto\"\r\n                          autoComplete=\"tradelicensephoto\"\r\n                          onChange={(file) =>\r\n                            upload(file, setFieldValue, \"tradelicensephoto\")\r\n                          }\r\n                          // value={values.tradelicensephoto}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensephoto &&\r\n                            touched.tradelicensephoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensephoto &&\r\n                            errors.tradelicensephoto\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                type=\"file\"\r\n                                style={{ width: \"90%\" }}\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"gstAttachment\" + index}\r\n                                label=\"Please attach GST Copy\"\r\n                                name={\"gstAttachment\" + index}\r\n                                autoComplete={\"gstAttachment\" + index}\r\n                                onChange={(file) =>\r\n                                  upload(\r\n                                    file,\r\n                                    setFieldValue,\r\n                                    \"gstAttachment\" + index\r\n                                  )\r\n                                }\r\n                                // value={values.gstAttachment}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstAttachment\" + index] &&\r\n                                  touched[\"gstAttachment\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstAttachment\" + index] &&\r\n                                  errors[\"gstAttachment\" + index]\r\n                                }\r\n                              />\r\n                              {values[\"gstAttachment\" + index] && (\r\n                                <Visibility\r\n                                  onClick={() => {\r\n                                    setImageName(\r\n                                      values[\"gstAttachment\" + index]\r\n                                    );\r\n                                    setOpen(true);\r\n                                  }}\r\n                                  style={{\r\n                                    float: \"right\",\r\n                                    marginTop: \"25px\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  {params.id && sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(params.id === undefined ||\r\n                    orderDetails?.status === \"DRAFT\") && (\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                          onClick={() => {\r\n                            submitForm(values, true);\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                          // className={classes.submit}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    orderDetails?.status === \"CREATED\" && (\r\n                      <>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <Grid item xs={12}>\r\n                            <Button\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                submitForm(values, true);\r\n                              }}\r\n                            >\r\n                              Save & Update\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                approve();\r\n                              }}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"10px\" }}\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                reject();\r\n                              }}\r\n                            >\r\n                              Reject\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const SoleProprietor = withSnackbar(SoleProprietorComponent);\r\n","import {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { Company } from \"./Company\";\nimport { LLP } from \"./LLP\";\nimport { Partnership } from \"./Partnership\";\nimport { SoleProprietor } from \"./SoleProprietor\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\n      width: 700,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport const ApplyForGstComponent = () => {\n  const classes = useStyles();\n  const [name, setName] = React.useState<any>(\"\");\n  const [planList, setPlanList] = React.useState<any>([]);\n  const [plan, setPlan] = React.useState<any>(\"\");\n  const [planLocationList, setPlanLocationList] = React.useState<any>([]);\n  const [planLocation, setPlanLocation] = React.useState<any>(\"\");\n  const [dropdown, setDropdown] = React.useState(\"\");\n  const fetchPlanList = () => {\n    axios\n      .get(\"/api/plan-list\")\n      .then((response: any) => {\n        setPlanList(response.data);\n      })\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  useEffect(() => {\n    fetchPlanList();\n    const name = sessionStorage.getItem(\"user\");\n    setName(name);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Apply For GST\n          </Typography>\n          <Grid container spacing={5}>\n            <Grid xs={6} item>\n              <TextField\n                size=\"small\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name of Business\"\n                name=\"name\"\n                autoComplete=\"name\"\n                value={name}\n                disabled\n                autoFocus\n              />\n            </Grid>\n            <Grid xs={6} item>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Constitution of Business\n                </InputLabel>\n                <Select\n                  margin=\"dense\"\n                  style={{ marginTop: \"16px\" }}\n                  id=\"demo-simple-select-helper\"\n                  onChange={(event: any, data: any) => {\n                    setDropdown(data?.props?.children);\n                  }}\n                >\n                  <MenuItem value={\"Proprietorship\"}>Proprietorship</MenuItem>\n                  <MenuItem value={\"Partnership\"}>Partnership</MenuItem>\n                  <MenuItem value={\"LLP\"}>LLP</MenuItem>\n                  <MenuItem value={\"Company\"}>Company</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Grid container spacing={5}>\n            <Grid xs={6} item>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Select a plan\n                </InputLabel>\n                <Select\n                  margin=\"dense\"\n                  style={{ marginTop: \"16px\" }}\n                  id=\"demo-simple-select-helper\"\n                  onChange={(event: any, data: any) => {\n                    setPlanLocationList(data?.props?.value?.payplanLocation);\n                    setPlan(data?.props?.value);\n                  }}\n                >\n                  {planList.map((plan: any) => {\n                    return <MenuItem value={plan} key={plan.id}>{plan.payplanname}</MenuItem>;\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={6} item>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Select a Location\n                </InputLabel>\n                <Select\n                  margin=\"dense\"\n                  id=\"demo-simple-select-helper\"\n                  onChange={(event: any, data: any) => {\n                    setPlanLocation(data?.props?.value);\n                  }}\n                >\n                  {planLocationList.map((plan: any) => {\n                    return (\n                      <MenuItem value={plan}>{plan.payplanLocation}</MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid container spacing={5} style={{ padding: \"26px\" }}>\n              <Grid xs={12} item>\n                <b>Remarks : </b>\n                {plan.remarks}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"Proprietorship\" && <SoleProprietor plan={planLocation} />}\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"Partnership\" && <Partnership plan={planLocation} />}\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"LLP\" && <LLP plan={planLocation} />}\n        {name !== \"\" &&\n          plan !== \"\" &&\n          planLocation !== \"\" &&\n          dropdown === \"Company\" && <Company plan={planLocation} />}\n      </main>\n    </React.Fragment>\n  );\n};\n","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Visibility } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { withSnackbar } from \"notistack\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { failureToast, successToast } from \"../util/util\";\nimport { DialogComponent } from \"./Dialog\";\nimport Title from \"./Title\";\n\nfunction OrderListComponent(props: any) {\n  const [orderList, setOrderList] = React.useState<any>([]);\n  const [orderType, setOrderType] = React.useState(\"Proprietorship\");\n  const history = useHistory();\n  const fetchOrderList = () => {\n    let url = \"\";\n    if (sessionStorage.getItem(\"role\") === \"Customer\") {\n      url =\n        \"/api/get-order/\" + orderType + \"/\" + sessionStorage.getItem(\"user\");\n    } else {\n      url = \"/api/get-all-order/\" + orderType;\n    }\n    axios\n      .get(url)\n      .then((response: any) => {\n        setOrderList(response.data);\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  const view = (row: any) => {\n    if (orderType === \"Proprietorship\") {\n      history.push(\"/dashboard/sole-proprietor/\" + row.proprietorshipid);\n    } else if (orderType === \"Partnership\") {\n      history.push(\"/dashboard/partnership/\" + row.partnershipid);\n    } else if (orderType === \"LLP\") {\n      history.push(\"/dashboard/llp/\" + row.llpid);\n    } else if (orderType === \"Company\") {\n      history.push(\"/dashboard/company/\" + row.companydetailsid);\n    }\n  };\n  function loadScript(src: any) {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  }\n\n  async function displayRazorpay(row: any) {\n    const res = await loadScript(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n    const razor = JSON.parse(row.razorpayOrder);\n    const options = {\n      key: \"rzp_test_4zyGtu09Yf3TwL\", // Enter the Key ID generated from the Dashboard\n      amount: razor.amount,\n      currency: razor.currency,\n      name: \"spiraea\",\n      description: \"Test Transaction\",\n      image: \"/spiraea-logo-bw-web-1.png\",\n      order_id: razor.id,\n      handler: async function (response: any) {\n        let id: any = \"\";\n        if (orderType === \"Proprietorship\") {\n          id = row.proprietorshipid;\n        } else if (orderType === \"Partnership\") {\n          id = row.partnershipid;\n        } else if (orderType === \"LLP\") {\n          id = row.llpid;\n        } else if (orderType === \"Company\") {\n          id = row.companydetailsid;\n        }\n        axios\n          .get(\"/api/get-order/\" + orderType + \"/\" + id + \"/PAID/\")\n          .then((response: any) => {\n            props.enqueueSnackbar(\"Order Successfully\", successToast);\n            fetchOrderList();\n          })\n          .catch((reponse: any) => {\n            props.enqueueSnackbar(\"Order Was not paid\", failureToast);\n          });\n        console.log(response);\n        // alert(result.data.msg);\n      },\n      theme: {\n        color: \"#61dafb\",\n      },\n    };\n    const w: any = window;\n    const paymentObject = new w.Razorpay(options);\n    paymentObject.open();\n  }\n  useEffect(() => {\n    fetchOrderList();\n  }, [orderType]); // eslint-disable-line react-hooks/exhaustive-deps\n  const upload = (event: any, row: any) => {\n    let formData = new FormData();\n\n    formData.append(\"file\", event.currentTarget.files[0]);\n    axios\n      .post(\"/api/document/uploadFile\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((response: any) => {\n        const documentUrl = response.data;\n        let id: any = \"\";\n        if (orderType === \"Proprietorship\") {\n          id = row.proprietorshipid;\n        } else if (orderType === \"Partnership\") {\n          id = row.partnershipid;\n        } else if (orderType === \"LLP\") {\n          id = row.llpid;\n        } else if (orderType === \"Company\") {\n          id = row.companydetailsid;\n        }\n        axios\n          .get(\"/api/get-order/gst/\" + orderType + \"/\" + id + \"/\" + documentUrl)\n          .then((response: any) => {\n            props.enqueueSnackbar(\n              \"Document Uploaded Successfully\",\n              successToast\n            );\n          })\n          .catch((reponse: any) => {\n            props.enqueueSnackbar(reponse.message, failureToast);\n            event.target.value = \"\";\n          });\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(\"Failed to upload the Document\", failureToast);\n      });\n  };\n  const role = sessionStorage.getItem(\"role\");\n  const [imageName, setImageName] = React.useState<any>();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = (imageName: any) => {\n    setOpen(true);\n    setImageName(imageName);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setImageName(\"\");\n  };\n  return (\n    <React.Fragment>\n      <DialogComponent\n        name={imageName}\n        open={open}\n        handleClickOpen={handleClickOpen}\n        handleClose={handleClose}\n      />\n      <Title>Application List</Title>\n      <Select\n        style={{ marginLeft: \"30px\", marginBottom: \"9px\" }}\n        defaultValue=\"Proprietorship\"\n        onChange={(event: any, data: any) => {\n          // setSelectedSample(data.props.children);\n          setOrderType(data?.props?.value);\n        }}\n      >\n        <MenuItem value={\"Proprietorship\"}>Proprietorship</MenuItem>\n        <MenuItem value={\"Partnership\"}>Partnership</MenuItem>\n        <MenuItem value={\"LLP\"}>LLP</MenuItem>\n        <MenuItem value={\"Company\"}>Company</MenuItem>\n      </Select>\n      {orderType === \"Proprietorship\" && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ProprietorShip ID</TableCell>\n              <TableCell>Trade Name</TableCell>\n              <TableCell>Person Name</TableCell>\n              <TableCell>Legal Business Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>GST Doc</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orderList.map((row: any) => (\n              <TableRow key={row.proprietorshipid}>\n                <TableCell>{row.proprietorshipid}</TableCell>\n                <TableCell>{row.tradeName}</TableCell>\n                <TableCell>{row.personName}</TableCell>\n                <TableCell>{row.legalbusinessName}</TableCell>\n                <TableCell>{row.status}</TableCell>\n                <TableCell>\n                  {role === \"Admin\" && (\n                    <TextField\n                      margin=\"dense\"\n                      type=\"file\"\n                      style={{ width: \"90%\" }}\n                      size=\"small\"\n                      required\n                      fullWidth\n                      label=\"Attach GST Doc\"\n                      onChange={(file: any) => upload(file, row)}\n                      // value={values.pricipleelectricityphoto}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  {row.gstDocument && row.gstDocument !== \"\" && (\n                    <Visibility\n                      onClick={() => {\n                        setImageName(row.gstDocument);\n                        setOpen(true);\n                      }}\n                      style={{ float: \"right\" }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                    </>\n                  )}\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                      {row.status === \"CREATED\" && (\n                        <Button\n                          style={{ marginLeft: \"10px\" }}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => displayRazorpay(row)}\n                        >\n                          Pay\n                        </Button>\n                      )}\n                    </>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      {orderType === \"Partnership\" && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Partnership ID</TableCell>\n              <TableCell>Firm Name</TableCell>\n              <TableCell>Partner Name</TableCell>\n              <TableCell>Legal Business Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>GST Doc</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orderList.map((row: any) => (\n              <TableRow key={row.partnershipid}>\n                <TableCell>{row.partnershipid}</TableCell>\n                <TableCell>{row.firmName}</TableCell>\n                <TableCell>{row.partnerName}</TableCell>\n                <TableCell>{row.legalbusinessName}</TableCell>\n                <TableCell>{row.status}</TableCell>\n                <TableCell>\n                  {role === \"Admin\" && (\n                    <TextField\n                      margin=\"dense\"\n                      type=\"file\"\n                      style={{ width: \"90%\" }}\n                      size=\"small\"\n                      required\n                      fullWidth\n                      label=\"Attach GST Doc\"\n                      onChange={(file: any) => upload(file, row)}\n                      // value={values.pricipleelectricityphoto}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  {row.gstDocument && row.gstDocument !== \"\" && (\n                    <Visibility\n                      onClick={() => {\n                        setImageName(row.gstDocument);\n                        setOpen(true);\n                      }}\n                      style={{ float: \"right\" }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                    </>\n                  )}\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                      {row.status === \"CREATED\" && (\n                        <Button\n                          style={{ marginLeft: \"10px\" }}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => displayRazorpay(row)}\n                        >\n                          Pay\n                        </Button>\n                      )}\n                    </>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      {orderType === \"LLP\" && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>LLP ID</TableCell>\n              <TableCell>Firm Name</TableCell>\n              <TableCell>Partner Name</TableCell>\n              <TableCell>Legal Business Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>GST Doc</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orderList.map((row: any) => (\n              <TableRow key={row.llpid}>\n                <TableCell>{row.llpid}</TableCell>\n                <TableCell>{row.firmName}</TableCell>\n                <TableCell>{row.partnerName}</TableCell>\n                <TableCell>{row.legalbusinessName}</TableCell>\n                <TableCell>{row.status}</TableCell>\n                <TableCell>\n                  {role === \"Admin\" && (\n                    <TextField\n                      margin=\"dense\"\n                      type=\"file\"\n                      style={{ width: \"90%\" }}\n                      size=\"small\"\n                      required\n                      fullWidth\n                      label=\"Attach GST Doc\"\n                      onChange={(file: any) => upload(file, row)}\n                      // value={values.pricipleelectricityphoto}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  {row.gstDocument && row.gstDocument !== \"\" && (\n                    <Visibility\n                      onClick={() => {\n                        setImageName(row.gstDocument);\n                        setOpen(true);\n                      }}\n                      style={{ float: \"right\" }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                    </>\n                  )}\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                      {row.status === \"CREATED\" && (\n                        <Button\n                          style={{ marginLeft: \"10px\" }}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => displayRazorpay(row)}\n                        >\n                          Pay\n                        </Button>\n                      )}\n                    </>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      {orderType === \"Company\" && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Company ID</TableCell>\n              <TableCell>Firm Name</TableCell>\n              <TableCell>Legal Business Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>GST Doc</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orderList.map((row: any) => (\n              <TableRow key={row.companydetailsid}>\n                <TableCell>{row.companydetailsid}</TableCell>\n                <TableCell>{row.firmName}</TableCell>\n                <TableCell>{row.legalbusinessName}</TableCell>\n                <TableCell>{row.status}</TableCell>\n                <TableCell>\n                  {role === \"Admin\" && (\n                    <TextField\n                      margin=\"dense\"\n                      type=\"file\"\n                      style={{ width: \"90%\" }}\n                      size=\"small\"\n                      required\n                      fullWidth\n                      label=\"Attach GST Doc\"\n                      onChange={(file: any) => upload(file, row)}\n                      // value={values.pricipleelectricityphoto}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  {row.gstDocument && row.gstDocument !== \"\" && (\n                    <Visibility\n                      onClick={() => {\n                        setImageName(row.gstDocument);\n                        setOpen(true);\n                      }}\n                      style={{ float: \"right\" }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                    </>\n                  )}\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => {\n                          view(row);\n                        }}\n                      >\n                        View\n                      </Button>\n                      {row.status === \"CREATED\" && (\n                        <Button\n                          style={{ marginLeft: \"10px\" }}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => displayRazorpay(row)}\n                        >\n                          Pay\n                        </Button>\n                      )}\n                    </>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\nexport const OrderList = withSnackbar(OrderListComponent);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(\n  option: string,\n  particulars: string,\n  place1: string,\n  place2: string,\n  remarks: string\n) {\n  return { option, particulars, place1, place2, remarks };\n}\n\nconst rows = [\n  createData(\n    \"1\",\n    \"Place of Business (Rent Agreement) + GST registration\",\n    \"11,000\",\n    \"18,000\",\n    \"11 months rent agreement.\"\n  ),\n  createData(\n    \"2\",\n    \"Place of Business (Rent Agreement) Only\",\n    \"10,000\",\n    \"12,000\",\n    \"11 months rent agreement.\"\n  ),\n  createData(\n    \"3\",\n    \"GST Registration Only\",\n    \"2,500\",\n    \"5,000\",\n    \"Gumasta / Shop establishment license is not included in this\"\n  ),\n  createData(\n    \"4\",\n    \"Gumasta / Shop establishment license\",\n    \"NA\",\n    \"3000\",\n    \"Applicable only Kolkata\"\n  ),\n];\n\nexport const PricingTable = () => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Option</TableCell>\n            <TableCell align=\"left\">Particulars</TableCell>\n            <TableCell align=\"left\">\n              Mumbai / Bangalore / Delhi NCR/ Hyderabad\n            </TableCell>\n            <TableCell align=\"left\">Kolkata</TableCell>\n            <TableCell align=\"left\">Remarks</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.option}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.option}\n              </TableCell>\n              <TableCell align=\"left\">{row.particulars}</TableCell>\n              <TableCell align=\"left\">{row.place1}</TableCell>\n              <TableCell align=\"left\">{row.place2}</TableCell>\n              <TableCell align=\"left\">{row.remarks}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport React from \"react\";\nimport { PricingTable } from \"../PricingTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: \"none\",\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  pricingTable: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst tiers = [\n  {\n    title: \"Free\",\n    price: \"0\",\n    description: [\n      \"10 users included\",\n      \"2 GB of storage\",\n      \"Help center access\",\n      \"Email support\",\n    ],\n    buttonText: \"Sign up for free\",\n    buttonVariant: \"outlined\",\n  },\n  {\n    title: \"Free\",\n    price: \"0\",\n    description: [\n      \"10 users included\",\n      \"2 GB of storage\",\n      \"Help center access\",\n      \"Email support\",\n    ],\n    buttonText: \"Sign up for free\",\n    buttonVariant: \"outlined\",\n  },\n  {\n    title: \"Pro\",\n    subheader: \"Most popular\",\n    price: \"15\",\n    description: [\n      \"20 users included\",\n      \"10 GB of storage\",\n      \"Help center access\",\n      \"Priority email support\",\n    ],\n    buttonText: \"Get started\",\n    buttonVariant: \"contained\",\n  },\n  {\n    title: \"Enterprise\",\n    price: \"30\",\n    description: [\n      \"50 users included\",\n      \"30 GB of storage\",\n      \"Help center access\",\n      \"Phone & email support\",\n    ],\n    buttonText: \"Contact us\",\n    buttonVariant: \"outlined\",\n  },\n];\nconst footers = [\n  {\n    title: \"Company\",\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"],\n  },\n  {\n    title: \"Features\",\n    description: [\n      \"Cool stuff\",\n      \"Random feature\",\n      \"Team feature\",\n      \"Developer stuff\",\n      \"Another one\",\n    ],\n  },\n  {\n    title: \"Resources\",\n    description: [\n      \"Resource\",\n      \"Resource name\",\n      \"Another resource\",\n      \"Final resource\",\n    ],\n  },\n  {\n    title: \"Legal\",\n    description: [\"Privacy policy\", \"Terms of use\"],\n  },\n];\n\nexport default function Pricing() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {/* Hero unit */}\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Pricing\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Quickly build an effective pricing table for your potential customers\n          with this layout. It&apos;s built with default Material-UI components\n          with little customization.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={3} alignItems=\"flex-end\">\n          {tiers.map((tier) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid\n              item\n              key={tier.title}\n              xs={12}\n              sm={tier.title === \"Enterprise\" ? 12 : 6}\n              md={3}\n            >\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  action={tier.title === \"Pro\" ? <StarIcon /> : null}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <div className={classes.cardPricing}>\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\n                      ${tier.price}\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"textSecondary\">\n                      /mo\n                    </Typography>\n                  </div>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography\n                        component=\"li\"\n                        variant=\"subtitle1\"\n                        align=\"center\"\n                        key={line}\n                      >\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Button fullWidth color=\"primary\">\n                    {tier.buttonText}\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      <Container\n        maxWidth=\"md\"\n        component=\"main\"\n        className={classes.pricingTable}\n      >\n        <PricingTable></PricingTable>\n      </Container>\n\n      {/* Footer */}\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container spacing={4} justify=\"space-evenly\">\n          {footers.map((footer) => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map((item) => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport const StickyFooter = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={\"footer\"}>\n      <CssBaseline />\n      <footer className={classes.footer}>\n        <Grid container>\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\n            <Typography variant=\"body1\">\n              Copyright © 2021 Spiraea. All Rights Reserved (A){\" \"}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\n            <Typography variant=\"body1\">\n              <img\n                src=\"/NextSAA-Logo1.png\"\n                alt=\"\"\n                style={{ height: \"70px\" }}\n              ></img>\n            </Typography>\n          </Grid>\n        </Grid>\n      </footer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Paper } from \"@material-ui/core\";\n\nexport const CustomizedTimeline = () => {\n  return (\n    <React.Fragment>\n      <Timeline align=\"left\">\n        <Paper style={{ padding: \"10px\" }}>\n          To Register New Candidate, Apply Six easy steps\n        </Paper>\n        <TimelineItem>\n          <TimelineSeparator>\n            {/* <TimelineDot /> */}\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography> </Typography>\n          </TimelineContent>\n        </TimelineItem>\n\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 1</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Registration</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 2</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Login</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 3</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Fill Application</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 4</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Upload Documents</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 5</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Pay Fees</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 6</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Processing by Spiraea</Typography>\n          </TimelineContent>\n        </TimelineItem>\n      </Timeline>\n    </React.Fragment>\n  );\n};\n","import {\n  FormControl,\n  InputLabel,\n  Link,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast } from \"../util/util\";\nimport { StickyFooter } from \"./StickyFooter\";\nimport { CustomizedTimeline } from \"./TimeLine\";\nconst SignInSchema = Yup.object().shape({\n  loginUserName: Yup.string().max(10, \"Too Long!\").required(\"Required\"),\n  loginPassword: Yup.string().max(10, \"Too Long!\").required(\"Required\"),\n  role: Yup.string().required(\"Required\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function SignInComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const sessionActive = () => {};\n  useEffect(() => {\n    sessionActive();\n  }, []);\n  const signInSubmit = (values: any) => {\n    // navigateToDashboard();\n    axios\n      // .post(\"/api/login\", { ...values })\n      .post(\"/api/login\", { ...values })\n\n      .then((response: any) => {\n        sessionStorage.setItem(\"role\", values.role);\n        sessionStorage.setItem(\"user\", values.loginUserName);\n        if (values.role === \"Customer\") {\n          history.push(\"/dashboard/order-list\");\n        } else if (values.role === \"Agent\") {\n          history.push(\"/dashboard/order-list\");\n        } else if (values.role === \"Admin\") {\n          history.push(\"/dashboard/home\");\n        }\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(\"Invalid Credentials\", failureToast);\n      });\n  };\n  return (\n    <>\n      <Container component=\"main\">\n        <CssBaseline />\n        <Grid container>\n          <Grid xs={12} sm={6}>\n            <div className={classes.paper}>\n              <img\n                alt=\"\"\n                src=\"/spiraea-logo-bw-web-1.png\"\n                style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n              />\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n              <Formik\n                initialValues={{\n                  loginUserName: \"\",\n                  loginPassword: \"\",\n                  role: \"\",\n                }}\n                validationSchema={SignInSchema}\n                onSubmit={(values: any) => {\n                  signInSubmit(values);\n                }}\n              >\n                {({ errors, touched, values, handleChange, setFieldValue }) => (\n                  // obj: any\n                  <Form className={classes.form} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"loginUserName\"\n                      label=\"Username\"\n                      name=\"loginUserName\"\n                      autoComplete=\"loginUserName\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.loginUserName}\n                      error={\n                        errors.loginUserName && touched.loginUserName\n                          ? true\n                          : false\n                      }\n                      helperText={touched.loginUserName && errors.loginUserName}\n                    />\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      type=\"password\"\n                      name=\"loginPassword\"\n                      label=\"Password\"\n                      id=\"loginPassword\"\n                      autoComplete=\"loginPassword\"\n                      onChange={handleChange}\n                      value={values.loginPassword}\n                      error={\n                        errors.loginPassword && touched.loginPassword\n                          ? true\n                          : false\n                      }\n                      helperText={touched.loginPassword && errors.loginPassword}\n                    />\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Role\n                      </InputLabel>\n                      <Select\n                        style={{ marginTop: \"16px\" }}\n                        id=\"demo-simple-select-helper\"\n                        value={values.role}\n                        error={errors.role && touched.role ? true : false}\n                        onChange={(event: any, data: any) => {\n                          setFieldValue(\"role\", data?.props?.children);\n                        }}\n                        // value={age}\n                      >\n                        <MenuItem value={\"Customer\"}>Customer</MenuItem>\n                        <MenuItem value={\"Agent\"}>Agent</MenuItem>\n                        <MenuItem value={\"Admin\"}>Admin</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                    >\n                      Sign In\n                    </Button>\n                    <Grid container>\n                      <Grid item xs>\n                        <Link href=\"#/forgot-loginPassword\" variant=\"body2\">\n                          Forgot Password?\n                        </Link>\n                        {/* TODO feature */}\n                      </Grid>\n                      <Grid item>\n                        <Link href=\"/#/signUp\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid>\n                    </Grid>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </Grid>\n          <Grid xs={12} sm={6}>\n            <div className={classes.paper}>\n              <CustomizedTimeline></CustomizedTimeline>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n      <StickyFooter />\n    </>\n  );\n}\n// export const ShareRoomDetail = connect(\n//   mapStateToProps,\n//   null\n// )(ShareRoomDetailComponent);\nexport const SignIn = withSnackbar(SignInComponent);\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignupSchema = Yup.object().shape({\n  businessName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(10, \"Too Long!\")\n    .required(\"Required\"),\n  vendorType: Yup.string().required(\"Required\"),\n  userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n  mobile: Yup.string().required(\"Required\"),\n});\nexport function SignUpComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n  function navigateToLogin() {\n    history.push(\"/signin\");\n  }\n  const signUpSubmit = (values: any) => {\n    axios\n      .post(\"/api/createRegistration\", values)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\"User Sign Up Complete\", successToast);\n        navigateToLogin();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <img\n          alt=\"\"\n          src=\"/spiraea-logo-bw-web-1.png\"\n          style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n        />\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Formik\n          initialValues={{\n            businessName: \"\",\n            vendorType: \"P0\",\n            userEmail: \"\",\n            mobile: \"\",\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values: any) => {\n            signUpSubmit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange, setFieldValue }) => (\n            // obj: any\n            <Form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    autoComplete=\"businessName\"\n                    required\n                    name=\"businessName\"\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"businessName\"\n                    label=\"Business Name\"\n                    autoFocus\n                    onChange={handleChange}\n                    value={values.businessName}\n                    error={\n                      errors.businessName && touched.businessName ? true : false\n                    }\n                    helperText={touched.businessName && errors.businessName}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Vendor Type\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-helper-label\"\n                      fullWidth\n                      id=\"demo-simple-select-helper\"\n                      value={values.vendorType}\n                      error={\n                        errors.vendorType && touched.vendorType ? true : false\n                      }\n                      onChange={(event: any, data: any) => {\n                        setFieldValue(\"vendorType\", data?.props?.children);\n                      }}\n                    >\n                      <MenuItem value={\"P0\"}>P0</MenuItem>\n                      <MenuItem value={\"P1\"}>P1</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"userEmail\"\n                    label=\"Email Address\"\n                    name=\"userEmail\"\n                    autoComplete=\"userEmail\"\n                    onChange={handleChange}\n                    value={values.userEmail}\n                    error={errors.userEmail && touched.userEmail ? true : false}\n                    helperText={touched.userEmail && errors.userEmail}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"mobile\"\n                    label=\"Mobile Number\"\n                    name=\"mobile\"\n                    onChange={handleChange}\n                    value={values.mobile}\n                    error={errors.mobile && touched.mobile ? true : false}\n                    helperText={touched.mobile && errors.mobile}\n                  />\n                </Grid>\n                {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via userEmail.\"\n              />\n            </Grid> */}\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/#/signIn\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\nexport const SignUp = withSnackbar(SignUpComponent);\n","import { Button, TextField } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport { withSnackbar } from \"notistack\";\nimport React, { useEffect } from \"react\";\nimport { failureToast, successToast } from \"../util/util\";\nimport Title from \"./Title\";\nexport function UserListComponent(props: any) {\n  const [userList, setUserList] = React.useState<any>([]);\n  // const [open, setOpen] = React.useState<boolean>(false);\n\n  const fetchUserList = () => {\n    axios\n      .get(\"/api/getAllUsers\")\n      .then((response: any) => {\n        setUserList(response.data);\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  // const activateAccount = (user: any) => {\n  //   axios\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\n  //     .then((response: any) => {\n  //       props.enqueueSnackbar(\"User activated\", successToast);\n  //       fetchUserList();\n  //     })\n  //     .catch((reponse: any) => {\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\n  //     });\n  // };\n  // const deActivateAccount = (user: any) => {\n  //   axios\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\n  //     .then((response: any) => {\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\n  //       fetchUserList();\n  //     })\n  //     .catch((reponse: any) => {\n  //       props.enqueueSnackbar(reponse.error, failureToast);\n  //     });\n  // };\n  // const deleteAccount = (user: any) => {\n  //   axios\n  //     .get(\"/api/v1/admin/user/deleteUser/\" + user.id)\n  //     .then((response: any) => {\n  //       props.enqueueSnackbar(\"User Deleted\", successToast);\n  //       fetchUserList();\n  //     })\n  //     .catch((reponse: any) => {\n  //       props.enqueueSnackbar(reponse.error, failureToast);\n  //     });\n  // };\n  // const submitNewUser = (user: any) => {\n  //   console.log(user);\n  //   axios\n  //     .post(\"/api/v1/admin/user/add/\", user)\n  //     .then((response: any) => {\n  //       props.enqueueSnackbar(\"User Added\", successToast);\n  //       fetchUserList();\n  //     })\n  //     .catch((reponse: any) => {\n  //       props.enqueueSnackbar(reponse.error, failureToast);\n  //     });\n  // };\n  const sendmail = (user: any) => {\n    axios\n      .post(\"/api/generateLoginDetails\", user)\n      .then((response: any) => {\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\n        fetchUserList();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n\n  useEffect(() => {\n    fetchUserList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <React.Fragment>\n      <Title>List of registered Users</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Email</TableCell>\n            <TableCell>User Name</TableCell>\n            <TableCell>Password</TableCell>\n            <TableCell align=\"center\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {userList.map((row: any) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.userEmail}</TableCell>\n              <TableCell>\n                <TextField\n                  autoComplete=\"loginUserName\"\n                  name=\"loginUserName\"\n                  fullWidth\n                  size=\"small\"\n                  id=\"loginUserName\"\n                  defaultValue={row.loginUserName}\n                  onChange={(event: any) => {\n                    row.loginUserName = event.target.value;\n                  }}\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  autoComplete=\"loginPassword\"\n                  name=\"loginPassword\"\n                  fullWidth\n                  size=\"small\"\n                  id=\"loginPassword\"\n                  defaultValue={row.loginPassword}\n                  onChange={(event: any) => {\n                    row.loginPassword = event.target.value;\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"center\">\n                <Button\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => sendmail(row)}\n                >\n                  Send Credentials\n                </Button>\n                {/* {!row.enabled ? (\n                  <IconButton\n                    aria-label=\"PlayCircleFilledIcon\"\n                    onClick={() => {\n                      activateAccount(row);\n                    }}\n                  >\n                    <PlayCircleFilledIcon />\n                  </IconButton>\n                ) : (\n                  <IconButton\n                    aria-label=\"PauseCircleFilledIcon\"\n                    onClick={() => {\n                      deActivateAccount(row);\n                    }}\n                  >\n                    <PauseCircleFilledIcon />\n                  </IconButton>\n                )}\n                \n                <IconButton\n                  aria-label=\"DeleteIcon\"\n                  onClick={() => {\n                    deleteAccount(row);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton> */}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\nexport const UserList = withSnackbar(UserListComponent);\n","import { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\n\nconst PlanSchema = Yup.object().shape({\n  payplanname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  remarks: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(100, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst CreateNewPlanComponent = (props: any) => {\n  const submit = (values: any) => {\n    axios\n      .post(\"/api/plan\", { ...values })\n      .then((response: any) => {\n        props.enqueueSnackbar(\"Plan Added successfully\", successToast);\n        props.handleClose(true);\n        props.fetchPlanList();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(\"Unable To Add Plan\", failureToast);\n      });\n  };\n  return (\n    <div>\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Plan Form</DialogTitle>\n        <Formik\n          initialValues={{\n            payplanname: \"\",\n            remarks: \"\",\n          }}\n          validationSchema={PlanSchema}\n          onSubmit={(values: any) => {\n            submit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange }) => (\n            <Form noValidate>\n              <DialogContent style={{ paddingTop: \"10px\" }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      autoComplete=\"payplanname\"\n                      name=\"payplanname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"payplanname\"\n                      label=\"Plan Name\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.payplanname}\n                      error={\n                        errors.payplanname && touched.payplanname ? true : false\n                      }\n                      helperText={touched.payplanname && errors.payplanname}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"remarks\"\n                      label=\"Remarks\"\n                      name=\"remarks\"\n                      autoComplete=\"remarks\"\n                      onChange={handleChange}\n                      value={values.remarks}\n                      error={errors.remarks && touched.remarks ? true : false}\n                      helperText={touched.remarks && errors.remarks}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={() => props.handleClose(false)}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                >\n                  Cancel\n                </Button>\n                <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                  Save\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\nexport const CreateNewPlan = withSnackbar(CreateNewPlanComponent);\n","import { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\n\nconst SignupSchema = Yup.object().shape({\n  payplanLocation: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(10, \"Too Long!\")\n    .required(\"Required\"),\n  payplanamount: Yup.number().required(\"Required\"),\n});\n\nconst CreateNewPlanLocationDialogComponent = (props: any) => {\n  const submit = (values: any) => {\n    axios\n      .post(\"/api/plan-location/\" + props.plan.id, values)\n      .then((response: any) => {\n        props.enqueueSnackbar(\"Plan Location Added successfully\", successToast);\n        props.handleClose(true);\n        props.fetchPlanList();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(\"Unable to Add Location \", failureToast);\n      });\n  };\n  return (\n    <div>\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          Create New Plan Location\n        </DialogTitle>\n        <Formik\n          initialValues={{\n            payplanLocation: \"\",\n            payplanamount: \"\",\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values: any) => {\n            submit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange }) => (\n            <Form noValidate>\n              <DialogContent style={{ paddingTop: \"10px\" }}>\n                <Grid container spacing={2} justifyContent=\"center\">\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"payplanLocation\"\n                      name=\"payplanLocation\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"payplanLocation\"\n                      label=\"Payplan Location\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.payplanLocation}\n                      error={\n                        errors.payplanLocation && touched.payplanLocation\n                          ? true\n                          : false\n                      }\n                      helperText={\n                        touched.payplanLocation && errors.payplanLocation\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      type=\"number\"\n                      size=\"small\"\n                      id=\"payplanamount\"\n                      label=\"Pay Plan Amount\"\n                      name=\"payplanamount\"\n                      autoComplete=\"payplanamount\"\n                      onChange={handleChange}\n                      value={values.payplanamount}\n                      error={\n                        errors.payplanamount && touched.payplanamount\n                          ? true\n                          : false\n                      }\n                      helperText={touched.payplanamount && errors.payplanamount}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={() => props.handleClose(false)}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                >\n                  Cancel\n                </Button>\n                <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                  Save\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\nexport const CreateNewPlanLocationDialog = withSnackbar(\n  CreateNewPlanLocationDialogComponent\n);\n","import { Collapse, IconButton, Paper, TableContainer } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {\n  Add,\n  Delete,\n  KeyboardArrowDownOutlined,\n  KeyboardArrowUpOutlined\n} from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { withSnackbar } from \"notistack\";\nimport React, { useEffect } from \"react\";\nimport { failureToast } from \"../util/util\";\nimport { CreateNewPlan } from \"./CreateNewPlan\";\nimport { CreateNewPlanLocationDialog } from \"./CreateNewPlanLocation\";\nimport Title from \"./Title\";\nexport function PlanListComponent(props: any) {\n  const [planList, setPlanList] = React.useState<any>([]);\n  // const [open, setOpen] = React.useState<boolean>(false);\n\n  const fetchPlanList = () => {\n    axios\n      .get(\"/api/plan-list\")\n      .then((response: any) => {\n        setPlanList(response.data);\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  useEffect(() => {\n    fetchPlanList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <React.Fragment>\n      <Title>List of registered Plans</Title>\n      <CollapsibleTable\n        list={planList}\n        fetchPlanList={fetchPlanList}\n      ></CollapsibleTable>\n    </React.Fragment>\n  );\n}\nfunction Row(props: any) {\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const row = props.row;\n  const handleDeletePlan = (row: any) => {\n    axios\n      .delete(\"/api/plan/\" + row.id)\n      .then((response: any) => {})\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  const handleDeletePlanLocation = (plan: any, planLocation: any) => {\n    axios\n      .delete(\"/api/plan-location/\" + plan.id + \"/\" + planLocation.id)\n      .then((response: any) => {})\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(reponse.error, failureToast);\n      });\n  };\n  return (\n    <React.Fragment>\n      <TableRow key={row.id}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpOutlined /> : <KeyboardArrowDownOutlined />}\n          </IconButton>\n        </TableCell>\n        <TableCell align=\"left\">{row.payplanname}</TableCell>\n        <TableCell align=\"left\">{row.remarks}</TableCell>\n        <TableCell align=\"left\">\n          <IconButton>\n            <Delete onClick={() => handleDeletePlan(row)}></Delete>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Table size=\"small\" aria-label=\"purchases\" padding=\"checkbox\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <b>Location</b>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <b>AMOUNT</b>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <IconButton>\n                      <Add onClick={() => props.openLocationModal(row)}></Add>\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {row.payplanLocation.map((historyRow: any) => (\n                  <TableRow key={historyRow.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {historyRow.payplanLocation}\n                    </TableCell>\n                    <TableCell>{historyRow.payplanamount}</TableCell>\n                    <TableCell align=\"left\">\n                      <IconButton>\n                        <Delete\n                          onClick={() =>\n                            handleDeletePlanLocation(row, historyRow)\n                          }\n                        ></Delete>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\nexport default function CollapsibleTable(props: any) {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [openLocation, setOpenLocation] = React.useState<boolean>(false);\n  const [plan, setPlan] = React.useState<any>();\n\n  const openLocationModal = (row: any) => {\n    setOpenLocation(true);\n    setPlan(row);\n  };\n  const handleModalOpen = () => {\n    setOpen(true);\n  };\n  const handleModalClose = (refresh: any) => {\n    if (refresh) {\n      // fetchUserList();\n    }\n    setOpen(false);\n  };\n  const handleModalLocationClose = (refresh: any) => {\n    if (refresh) {\n      // fetchUserList();\n    }\n    setOpenLocation(false);\n  };\n  return (\n    <TableContainer component={Paper}>\n      <CreateNewPlan\n        open={open}\n        handleClose={handleModalClose}\n        fetchPlanList={props.fetchPlanList}\n      ></CreateNewPlan>\n      <CreateNewPlanLocationDialog\n        fetchPlanList={props.fetchPlanList}\n        open={openLocation}\n        plan={plan}\n        handleClose={handleModalLocationClose}\n      ></CreateNewPlanLocationDialog>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell align=\"left\">\n              <b>Particulars</b>\n            </TableCell>\n            <TableCell align=\"left\">\n              <b>Remarks</b>\n            </TableCell>\n            <TableCell align=\"left\">\n              <IconButton>\n                <Add onClick={handleModalOpen}></Add>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.list.map((row: any) => (\n            <Row\n              key={row.name}\n              row={row}\n              openLocation={openLocation}\n              openLocationModal={openLocationModal}\n              handleModalLocationClose={handleModalLocationClose}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\nexport const PlanList = withSnackbar(PlanListComponent);\n","import {\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport React, { useEffect } from \"react\";\nimport { ProgressBar } from \"./admin/Progres\";\nimport Title from \"./Title\";\n// function preventDefault(event: any) {\n//   event.preventDefault();\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 180,\n  },\n}));\n\nexport const UploadGSTDocum = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [dashboardData, setDashboardData] = React.useState<any>({});\n\n  const fetchAdminDashboard = () => {\n    axios\n      .get(\"/api/get-admin-dashboard\")\n      .then((response: any) => {\n        setDashboardData(response.data);\n      })\n      .catch((reponse: any) => {\n        // props.enqueueSnackbar(\"Unable To fetch Admin Dashboard\", failureToast);\n      });\n  };\n  useEffect(() => {\n    fetchAdminDashboard();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  return (\n    <Grid container style={{ textAlign: \"center\" }}>\n      <Grid container spacing={4} justifyContent=\"center\">\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\n            <Typography component=\"div\" variant=\"h4\">\n              <AttachMoneyIcon style={{ fontSize: \"3rem\" }}></AttachMoneyIcon>\n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {dashboardData.todaysBusiness}\n            </Typography>\n            <Title> Today's Business</Title>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\n            <Typography component=\"div\" variant=\"h4\">\n              <WorkIcon style={{ fontSize: \"3rem\" }}></WorkIcon>\n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {dashboardData.todaysApplication}\n            </Typography>\n            <Title> Today's Application</Title>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\n            <Typography component=\"div\" variant=\"h4\">\n              <GroupIcon style={{ fontSize: \"3rem\" }}></GroupIcon>\n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {dashboardData.totalCustomers}\n            </Typography>\n            <Title> Total Users</Title>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} md={6}>\n          <Grid container item xs={12} spacing={4}>\n            <Grid item xs={12} md={6} lg={6}>\n              <Paper style={{ textAlign: \"center\" }}>\n                <Typography\n                  component=\"div\"\n                  variant=\"h4\"\n                  style={{ paddingTop: \"8px\" }}\n                >\n                  <VerifiedUserIcon\n                    style={{ fontSize: \"2rem\" }}\n                  ></VerifiedUserIcon>\n                </Typography>\n                <Typography component=\"p\" variant=\"h4\">\n                  {dashboardData.applicationsManagement}\n                </Typography>\n                <Typography\n                  component=\"h2\"\n                  variant=\"h6\"\n                  color=\"primary\"\n                  style={{ paddingBottom: \"8px\" }}\n                  gutterBottom\n                >\n                  Applications Management\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={6} lg={6}>\n              <Paper style={{ textAlign: \"center\" }}>\n                <Typography\n                  component=\"div\"\n                  variant=\"h4\"\n                  style={{ paddingTop: \"8px\" }}\n                >\n                  <GroupAddIcon style={{ fontSize: \"2rem\" }}></GroupAddIcon>\n                </Typography>\n                <Typography component=\"p\" variant=\"h4\">\n                  {dashboardData.customerManagement}\n                </Typography>\n                <Typography\n                  component=\"h2\"\n                  variant=\"h6\"\n                  color=\"primary\"\n                  style={{ paddingBottom: \"8px\" }}\n                  gutterBottom\n                >\n                  Customer Management\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper style={{ textAlign: \"center\" }}>\n            <Typography\n              component=\"div\"\n              variant=\"h5\"\n              style={{ paddingTop: \"8px\" }}\n            >\n              This Weeks Report\n            </Typography>\n            <List component=\"nav\" aria-label=\"mailbox folders\">\n              <Divider />\n              <ListItem>\n                <ListItemText\n                  primary={\n                    \"Review Pending Applications - \" + dashboardData.pending\n                  }\n                />\n                <ListItemText\n                  primary={dashboardData.pendingPercentage + \"%\"}\n                  style={{ textAlign: \"right\" }}\n                />\n              </ListItem>\n              <ListItem>\n                <ProgressBar\n                  progress={dashboardData.pendingPercentage}\n                ></ProgressBar>\n              </ListItem>\n              <Divider />\n              <ListItem>\n                <ListItemText\n                  primary={\"Approved Applications - \" + dashboardData.approved}\n                />\n                <ListItemText\n                  primary={dashboardData.approvedPercentage + \"%\"}\n                  style={{ textAlign: \"right\" }}\n                />\n              </ListItem>\n              <ListItem>\n                <ProgressBar\n                  progress={dashboardData.approvedPercentage}\n                  style={{ background: \"green\" }}\n                ></ProgressBar>\n              </ListItem>\n              <Divider />\n              <ListItem>\n                <ListItemText\n                  primary={\"Rejected Applications - \" + dashboardData.rejected}\n                />\n                <ListItemText\n                  primary={dashboardData.rejectedPercentage + \"%\"}\n                  style={{ textAlign: \"right\" }}\n                />\n              </ListItem>\n              <ListItem>\n                <ProgressBar\n                  progress={dashboardData.rejectedPercentage}\n                ></ProgressBar>\n              </ListItem>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import AllOutIcon from \"@material-ui/icons/AllOut\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport React from \"react\";\nimport Album from \"../component/Album\";\n// import { BarChartComponent, ScatterPlotComponent } from \"../component/charts\";\nimport Checkout from \"../component/checkout/Checkout\";\nimport Dashboard from \"../component/Dashboard\";\nimport { AdminDashboard } from \"../component/AdminDashboard\";\nimport Deposits from \"../component/Deposits\";\nimport { ForgotPassword } from \"../component/ForgotPassword\";\nimport { ApplyForGstComponent } from \"../component/forms/ApplyForGST\";\nimport { Company } from \"../component/forms/Company\";\nimport { LLP } from \"../component/forms/LLP\";\nimport { Partnership } from \"../component/forms/Partnership\";\nimport { SoleProprietor } from \"../component/forms/SoleProprietor\";\nimport { OrderList } from \"../component/OrderList\";\nimport Pricing from \"../component/pricing\";\nimport { SignIn } from \"../component/SignIn\";\nimport { SignUp } from \"../component/SignUp\";\nimport { UserList } from \"../component/UserList\";\nimport { PlanList } from \"../component/PlanList\";\nimport QueueIcon from \"@material-ui/icons/Queue\";\nimport { UploadGSTDocum } from \"../component/UploadGSTDashboard\";\n\nexport const dashboardRoutes = [\n  {\n    path: \"/signin\",\n    name: \"Sign In\",\n    icon: <DashboardIcon></DashboardIcon>,\n    component: <SignIn></SignIn>,\n    layout: \"/signin\",\n  },\n  {\n    path: \"/SignUp\",\n    name: \"SignUp\",\n    icon: <DashboardIcon></DashboardIcon>,\n    component: <SignUp></SignUp>,\n    layout: \"/signup\",\n  },\n  {\n    path: \"/forgot-password\",\n    name: \"ForgotPassword\",\n    icon: <DashboardIcon></DashboardIcon>,\n    component: <ForgotPassword></ForgotPassword>,\n    layout: \"/forgot-password\",\n  },\n\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: <DashboardIcon></DashboardIcon>,\n    component: <Dashboard></Dashboard>,\n    layout: \"/dashboard\",\n  },\n  {\n    path: \"/admin\",\n    name: \"admin\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <Dashboard></Dashboard>,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/dashboard/sole-proprietor\",\n  //   name: \"/dashboard/sole-proprietor\",\n  //   icon: <AssignmentIndIcon></AssignmentIndIcon>,\n  //   component: <SolePropreietor></SolePropreietor>,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/dashboard/partnership\",\n  //   name: \"/dashboard/partnership\",\n  //   icon: <AllOutIcon></AllOutIcon>,\n  //   component: <Checkout></Checkout>,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/dashboard/llp\",\n  //   name: \"/dashboard/llp\",\n  //   icon: <LLP></LLP>,\n  //   component: <Checkout></Checkout>,\n  //   layout: \"/admin\",\n  // },\n\n  {\n    path: \"/dashboard/checkout\",\n    name: \"/dashboard/checkout\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <Checkout></Checkout>,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/\",\n    name: \"Sign In\",\n    icon: <DashboardIcon></DashboardIcon>,\n    component: <SignIn></SignIn>,\n    layout: \"/\",\n  },\n];\nexport const secondaryRoutes = [\n  {\n    path: \"/dashboard/home\",\n    name: \"/dashboard/home\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <AdminDashboard></AdminDashboard>,\n    layout: \"/dashboard/home\",\n  },\n  {\n    path: \"/dashboard/upload-gst-document\",\n    name: \"/dashboard/home\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <UploadGSTDocum></UploadGSTDocum>,\n    layout: \"/dashboard/home\",\n  },\n  {\n    path: \"/dashboard/order-list\",\n    name: \"Application List\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <OrderList></OrderList>,\n    layout: \"/dashboard/order-list\",\n  },\n  {\n    path: \"/dashboard/apply-for-gst\",\n    name: \"/dashboard/apply-for-gst\",\n    icon: <ApplyForGstComponent></ApplyForGstComponent>,\n    component: <ApplyForGstComponent></ApplyForGstComponent>,\n    layout: \"/apply-for-gst\",\n  },\n\n  {\n    path: \"/dashboard/sole-proprietor/:id\",\n    component: <SoleProprietor></SoleProprietor>,\n  },\n  {\n    path: \"/dashboard/partnership/:id\",\n    component: <Partnership></Partnership>,\n  },\n  {\n    path: \"/dashboard/llp/:id\",\n    component: <LLP></LLP>,\n  },\n  {\n    path: \"/dashboard/company/:id\",\n    component: <Company></Company>,\n  },\n  {\n    path: \"/dashboard/checkout\",\n    name: \"/dashboard/checkout\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <Checkout></Checkout>,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/dashboard/home\",\n  //   name: \"/dashboard/home\",\n  //   icon: <AllOutIcon></AllOutIcon>,\n  //   component: (\n  //     <React.Fragment>\n  //       {/* <ScatterPlotComponent></ScatterPlotComponent>\n  //       <BarChartComponent></BarChartComponent> */}\n  //     </React.Fragment>\n  //   ),\n  //   layout: \"/dashboard/home\",\n  // },\n  // {\n  //   path: \"/dashboard/BulkRNATasks\",\n  //   name: \"/dashboard/BulkRNATasks\",\n  //   icon: <AllOutIcon></AllOutIcon>,\n  //   component: <BulkRNATasks></BulkRNATasks>,\n  //   layout: \"/dashboard/BulkRNATasks\",\n  // },\n  // {\n  //   path: \"/dashboard/BulkRNAWorkflow\",\n  //   name: \"/dashboard/BulkRNAWorkflow\",\n  //   icon: <AllOutIcon></AllOutIcon>,\n  //   component: <BulkRNAWorkflow></BulkRNAWorkflow>,\n  //   layout: \"/dashboard/BulkRNAWorkflow\",\n  // },\n  // {\n  //   path: \"/dashboard/BulkRNAWorkflowResult/:id\",\n  //   component: <BulkRNAWorkflowResult></BulkRNAWorkflowResult>,\n  // },\n  // {\n  //   path: \"/dashboard/charts\",\n  //   name: \"/dashboard/checkout\",\n  //   icon: <AllOutIcon></AllOutIcon>,\n  //   component: (\n  //     <React.Fragment>\n  //       <ScatterPlotComponent></ScatterPlotComponent>\n  //       <BarChartComponent></BarChartComponent>\n  //     </React.Fragment>\n  //   ),\n  //   layout: \"/dashboard/checkout\",\n  // },\n  {\n    path: \"/dashboard/pricing\",\n    name: \"/dashboard/pricing\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <Pricing></Pricing>,\n    layout: \"/dashboard/pricing\",\n  },\n  {\n    path: \"/dashboard/album\",\n    name: \"/dashboard/album\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <Album></Album>,\n    layout: \"/dashboard/album\",\n  },\n  {\n    path: \"/dashboard/deposits\",\n    name: \"/dashboard/deposits\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <Deposits></Deposits>,\n    layout: \"/dashboard/deposits\",\n  },\n  {\n    path: \"/dashboard/userlist\",\n    name: \"/dashboard/userlist\",\n    icon: <AllOutIcon></AllOutIcon>,\n    component: <UserList></UserList>,\n    layout: \"/dashboard/userlist\",\n  },\n  {\n    path: \"/dashboard/planlist\",\n    name: \"/dashboard/planlist\",\n    icon: <QueueIcon></QueueIcon>,\n    component: <PlanList></PlanList>,\n    layout: \"/dashboard/planlist\",\n  },\n];\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { LoaderComponent } from \"./component/Loader\";\r\nimport { dashboardRoutes } from \"./routes/routes\";\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <LoaderComponent></LoaderComponent>\r\n      <Switch>\r\n        {dashboardRoutes.map((route: any) => {\r\n          return (\r\n            <Route path={route.path} key={route.path}>\r\n              {route.component}\r\n            </Route>\r\n          );\r\n        })}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","export const SET_TABLE_DATA = \"SET_TABLE_DATA\";\nexport const SET_MAP_DATA = \"SET_MAP_DATA\";\nexport const SET_TIMELINE_DATA = \"SET_TIMELINE_DATA\";\nexport const SET_COLUMNS = \"SET_COLUMNS\";\n\n\n\n","import {\n  SET_MAP_DATA,\n  SET_TABLE_DATA,\n  SET_TIMELINE_DATA,\n  SET_COLUMNS,\n} from \"../actionTypes\";\n\nconst initialState = {};\nexport const abolitionData = (state = initialState, action: any) => {\n  switch (action.type) {\n    case SET_MAP_DATA:\n      return Object.assign({}, state, {\n        mapData: [...action.mapData],\n        action: action,\n      });\n    case SET_TABLE_DATA:\n      return Object.assign({}, state, {\n        tableData: action.tableData,\n        action: action,\n      });\n    case SET_TIMELINE_DATA:\n      return Object.assign({}, state, {\n        timelineData: action.timelineData,\n        action: action,\n      });\n    case SET_COLUMNS:\n      return Object.assign({}, state, {\n        columns: action.columns,\n        action: action,\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { abolitionData } from \"./abolitionData\";\n\nexport default combineReducers({ abolitionData });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import { SnackbarProvider } from \"notistack\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <SnackbarProvider maxSnack={5}>\n          <App />\n        </SnackbarProvider>\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}