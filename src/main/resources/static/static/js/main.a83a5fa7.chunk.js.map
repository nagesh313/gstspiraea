{"version":3,"sources":["component/Loader.tsx","component/Title.tsx","component/admin/Progres.tsx","component/admin/AdminDashboard.tsx","util/util.tsx","component/admin/CreateNewUser.tsx","component/admin/AdminList.tsx","component/admin/AgentList.tsx","component/admin/CreateNewPlan.tsx","component/admin/CreateNewPlanLocation.tsx","component/admin/PlanList.tsx","component/admin/UserList.tsx","component/ListItems.tsx","component/StickyFooter.tsx","component/Dashboard.tsx","component/ForgotPassword.tsx","component/ViewDocumentDialog.tsx","component/forms/EmailVerification.tsx","component/forms/filepond.tsx","component/forms/schema/CompanySchema.tsx","component/forms/Company.tsx","component/forms/schema/LLPSchema.tsx","component/forms/LLP.tsx","component/forms/schema/PartnerSchema.tsx","component/forms/Partnership.tsx","component/forms/schema/SoleProprietorSchama.tsx","component/forms/SoleProprietor.tsx","component/forms/ApplyForGST.tsx","component/OrderList.tsx","component/TimeLine.tsx","component/SignIn.tsx","component/SignUp.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","LoaderComponent","classes","React","useState","loadingCount","setLoadingCount","useEffect","axios","interceptors","request","use","config","error","Promise","reject","response","data","Backdrop","className","open","style","CircularProgress","Title","props","Typography","component","variant","gutterBottom","children","BorderLinearProgress","withStyles","root","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","flexGrow","ProgressBar","value","progress","depositContext","flex","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","AdminDashboard","history","useHistory","role","sessionStorage","getItem","window","location","href","push","fixedHeightPaper","clsx","dashboardData","setDashboardData","get","then","console","log","catch","reponse","Grid","container","textAlign","justifyContent","item","xs","md","lg","Paper","src","alt","todaysBusiness","fontSize","todaysApplication","totalCustomers","marginTop","paddingTop","applicationsManagement","paddingBottom","customerManagement","List","Divider","ListItem","ListItemText","primary","pending","pendingPercentage","approved","approvedPercentage","background","rejected","rejectedPercentage","anchorOrigin","vertical","horizontal","successToast","autoHideDuration","failureToast","alignItems","avatar","margin","secondary","main","form","submit","CreateNewUserDialog","withSnackbar","SignupSchema","Yup","shape","businessName","min","required","userEmail","email","mobile","vendorType","Dialog","DialogTitle","id","initialValues","validationSchema","onSubmit","values","post","enqueueSnackbar","handleClose","message","signUpSubmit","errors","touched","handleChange","setFieldValue","noValidate","sm","TextField","autoComplete","name","fullWidth","label","autoFocus","onChange","helperText","FormControl","InputLabel","Select","labelId","event","MenuItem","Button","onClick","AdminList","adminList","setAdminList","fetchUserList","filter","row","setOpen","Fragment","cursor","Tooltip","title","Add","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","defaultValue","loginUserName","target","loginPassword","user","undefined","alert","IconButton","delete","userId","Delete","AgentList","agentList","setAgentList","PlanSchema","payplanname","max","remarks","CreateNewPlan","fetchPlanList","DialogContent","DialogActions","payplanLocation","payplanamount","CreateNewPlanLocationDialog","planLocationList","setPlanLocationList","maxWidth","plan","marginBottom","Row","KeyboardArrowUpOutlined","KeyboardArrowDownOutlined","handleDeletePlan","colSpan","Collapse","in","timeout","unmountOnExit","openLocationModal","historyRow","ref","createRef","scope","inputRef","titleAccess","current","updatePlanLocationAmount","planLocation","PlanList","planList","setPlanList","openLocation","setOpenLocation","setPlan","handleModalLocationClose","refresh","TableContainer","UserList","userList","setUserList","searchQuery","setSearchQuery","text","includes","marginLeft","assignedToAgent","agent","MainListItems","button","ListItemIcon","width","nested","paddingLeft","SecondaryListItems","admin","disablePadding","footer","opacity","StickyFooter","minWidth","grow","toolbar","paddingRight","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","sectionDesktop","sectionMobile","Dashboard","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","innerText","menuId","renderMenu","Menu","keepMounted","transformOrigin","onClose","mobileMenuId","renderMobileMenu","CssBaseline","AppBar","Toolbar","edge","noWrap","url","Drawer","Container","secondaryRoutes","route","path","exact","ForgotPassword","justify","Link","ViewDocumentDialogComponent","DialogContentText","EmailVerification","float","Send","test","subType","sendVerificationMail","verificationObject","verified","FileUpload","stripAndShowFileName","fileName","substring","lastIndexOf","length","files","source","field","options","labelFileSizeNotAvailable","allowReorder","allowMultiple","maxFiles","onupdatefiles","filea","fieldName","server","process","onload","labelIdle","Visibility","setImageName","GetApp","downloadReport","panRegex","aadharRegex","schema","firmName","legalbusinessName","tradeName","panphoto","composition","commencementDate","hsn1","accountnumber","ifsccode","cancelcheqphoto","certificateOfIncorportation","pannumber","matches","numberOfDirectors","Array","forEach","index","when","is","numberOfOtherGST","buildSchema","layout","stepper","buttons","Company","params","useRouteMatch","orderDetails","setOrderDetails","split","directorList","director","directorName","directorDin","directorFatherName","directorAadharNo","directorAadharPhotoCopyFront","directorAadharPhotoCopyBack","pannumberCopy","directorResidentialAddress","directorPhoto","isAuthorisedSignatory","gstCertificatesInOtherStates","gst","gstNumber","gstAttachment","upload","formData","FormData","append","headers","submitForm","save","paymentPlanLocationDetails","directorListAuthorised","p","trading","manufacture","service","imageName","filename","responseType","element","document","createElement","file","Blob","download","URL","createObjectURL","click","remove","curr","Date","setDate","getDate","date","toISOString","substr","valuesForDirectors","valuesOfGSTInOtherStates","isAdmin","isAgent","handleClickOpen","enableReinitialize","principleplace","pricipleelectricityphoto","priciplerentphoto","priciplenocphoto","additionalplace","additionalelectricityphoto","additionalrentphoto","additionalnocphoto","hsn2","hsn3","hsn4","hsn5","tradelicensenumber","tradelicensephoto","status","createdBy","isActive","remark","declarationOfAuthorisedSignatory","InputLabelProps","shrink","emailVerification","onaddfile","InputProps","inputProps","num","FormGroup","FormControlLabel","control","Checkbox","checked","numberOfPartners","LLP","partnerList","partner","partnerName","partnerFatherName","partnerAadharNo","partnerAadharPhotoCopyFront","partnerAadharPhotoCopyBack","partnerResidentialAddress","partnerPhoto","partnerMobile","partnerEmail","partnerListEmail","duplicates","indexOf","toString","partnerListMobile","duplicatesMobile","partnerListAuthorised","valuesForPartners","partnershipDeed","Partnership","personName","soleProprietorPhoto","propfatherName","propadharphotoFront","propadharphotoBack","resident_address","photo","propadharnumber","SoleProprietor","paymentPlanDetailsId","ApplyForGstComponent","setName","setPlanLocation","setLocation","dropdown","setDropdown","disabled","OrderList","orderList","setOrderList","orderType","setOrderType","fetchOrderList","searchText","view","proprietorshipid","partnershipid","llpid","companydetailsid","loadScript","resolve","script","onerror","body","appendChild","displayRazorpay","a","razor","JSON","parse","razorpayOrder","key","amount","currency","description","image","order_id","handler","orderTypeText","orderTypeId","w","Razorpay","documentUrl","setSearchText","getSheetData","header","sheetData","unshift","XlsxPopulate","fromBlankAsync","workbook","sheet1","sheet","cell","outputAsync","res","saveAs","Input","placeholder","endAdornment","Search","saveAsExcel","gstDocument","CustomizedTimeline","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","SignInSchema","SignIn","verifyEmailFlow","setItem","signInSubmit","SignUp","dashboardRoutes","icon","App","ReactDOM","render","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.a83a5fa7.chunk.js","sourcesContent":["import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\nexport const LoaderComponent = () => {\r\n  const classes = useStyles();\r\n  const [loadingCount, setLoadingCount] = React.useState(0);\r\n  useEffect(() => {\r\n    axios.interceptors.request.use(\r\n      function (config: any) {\r\n        setLoadingCount(loadingCount + 1);\r\n        return config;\r\n      },\r\n      function (error: any) {\r\n        return Promise.reject({ ...error.response?.data });\r\n      }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n      function (response: any) {\r\n        // spinning hide\r\n        setLoadingCount(loadingCount - 1);\r\n        return response;\r\n      },\r\n      function (error: any) {\r\n        setLoadingCount(loadingCount - 1);\r\n        return Promise.reject({ ...error.response?.data });\r\n      }\r\n    );\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  return (\r\n    <div>\r\n      {loadingCount > 0 ? (\r\n        <Backdrop\r\n          className={classes.backdrop}\r\n          open={true}\r\n          style={{ zIndex: 10000 }}\r\n        >\r\n          <CircularProgress color=\"primary\" />\r\n        </Backdrop>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props: any) {\n  return (\n    <Typography\n      component=\"h2\"\n      variant=\"h6\"\n      color=\"primary\"\n      gutterBottom\n      style={props.style}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n};\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 10,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor:\n        theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: \"#1a90ff\",\n    },\n  })\n)(LinearProgress);\n\n// Inspired by the former Facebook spinners.\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport const ProgressBar = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <BorderLinearProgress variant=\"determinate\" value={props.progress?props.progress:0} />\n    </div>\n  );\n};\n","import {\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Title from \"../Title\";\r\nimport { ProgressBar } from \"./Progres\";\r\n\r\n// function preventDefault(event: any) {\r\n//   event.preventDefault();\r\n// }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 180,\r\n  },\r\n}));\r\n\r\nexport const AdminDashboard = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role === null) {\r\n    window.location.href = \"/\";\r\n  }\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [dashboardData, setDashboardData] = React.useState<any>({});\r\n\r\n  const fetchAdminDashboard = () => {\r\n    axios\r\n      .get(\"/api/get-admin-dashboard\")\r\n      .then((response: any) => {\r\n        console.log(response);\r\n        setDashboardData(response.data);\r\n        // props.enqueueSnackbar(\r\n        //   \"Application Rejected Successfully\",\r\n        //   successToast\r\n        // );\r\n        // history.push(\"/dashboard/admin\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(\"Unable To fetch Admin Dashboard\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchAdminDashboard();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  return (\r\n    <Grid container style={{ textAlign: \"center\" }}>\r\n      <Grid container spacing={4} justifyContent=\"center\">\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              <img src=\"currency-inr.png\" alt=\"\" />\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n              {dashboardData.todaysBusiness}\r\n            </Typography>\r\n            <Title> Today's Business</Title>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              <WorkIcon style={{ fontSize: \"3rem\" }}></WorkIcon>\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n              {dashboardData.todaysApplication}\r\n            </Typography>\r\n            <Title> Today's Application</Title>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              <GroupIcon style={{ fontSize: \"3rem\" }}></GroupIcon>\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n              {dashboardData.totalCustomers}\r\n            </Typography>\r\n            <Title> Total Users</Title>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Grid container item xs={12} spacing={4}>\r\n            <Grid item xs={12} md={6} lg={6}>\r\n              <Paper style={{ textAlign: \"center\" }}>\r\n                <Typography\r\n                  component=\"div\"\r\n                  variant=\"h4\"\r\n                  style={{ paddingTop: \"8px\" }}\r\n                >\r\n                  <VerifiedUserIcon\r\n                    style={{ fontSize: \"2rem\" }}\r\n                  ></VerifiedUserIcon>\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                  {dashboardData.applicationsManagement}\r\n                </Typography>\r\n                <Typography\r\n                  component=\"h2\"\r\n                  variant=\"h6\"\r\n                  color=\"primary\"\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                  gutterBottom\r\n                >\r\n                  Applications Management\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={6}>\r\n              <Paper style={{ textAlign: \"center\" }}>\r\n                <Typography\r\n                  component=\"div\"\r\n                  variant=\"h4\"\r\n                  style={{ paddingTop: \"8px\" }}\r\n                >\r\n                  <GroupAddIcon style={{ fontSize: \"2rem\" }}></GroupAddIcon>\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                  {dashboardData.customerManagement}\r\n                </Typography>\r\n                <Typography\r\n                  component=\"h2\"\r\n                  variant=\"h6\"\r\n                  color=\"primary\"\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                  gutterBottom\r\n                >\r\n                  Customer Management\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper style={{ textAlign: \"center\" }}>\r\n            <Typography\r\n              component=\"div\"\r\n              variant=\"h5\"\r\n              style={{ paddingTop: \"8px\" }}\r\n            >\r\n              This Weeks Report\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"mailbox folders\">\r\n              <Divider />\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    \"Review Pending Applications - \" + dashboardData.pending\r\n                  }\r\n                />\r\n                <ListItemText\r\n                  primary={dashboardData.pendingPercentage + \"%\"}\r\n                  style={{ textAlign: \"right\" }}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ProgressBar\r\n                  progress={dashboardData.pendingPercentage}\r\n                ></ProgressBar>\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\"Approved Applications - \" + dashboardData.approved}\r\n                />\r\n                <ListItemText\r\n                  primary={dashboardData.approvedPercentage + \"%\"}\r\n                  style={{ textAlign: \"right\" }}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ProgressBar\r\n                  progress={dashboardData.approvedPercentage}\r\n                  style={{ background: \"green\" }}\r\n                ></ProgressBar>\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\"Rejected Applications - \" + dashboardData.rejected}\r\n                />\r\n                <ListItemText\r\n                  primary={dashboardData.rejectedPercentage + \"%\"}\r\n                  style={{ textAlign: \"right\" }}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ProgressBar\r\n                  progress={dashboardData.rejectedPercentage}\r\n                ></ProgressBar>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","const anchorOrigin = {\n  vertical: \"bottom\",\n  horizontal: \"right\",\n};\nexport const successToast = {\n  autoHideDuration: 3000,\n  variant: \"success\",\n  anchorOrigin,\n};\nexport const infoToast = {\n  autoHideDuration: 3000,\n  variant: \"info\",\n  anchorOrigin,\n};\nexport const failureToast = {\n  autoHideDuration: 3000,\n  variant: \"error\",\n  anchorOrigin,\n};\n","import {\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../../util/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    margin: theme.spacing(6),\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst CreateNewUserDialogComponent = (props: any) => {\n  const classes = useStyles();\n  const signUpSubmit = (values: any) => {\n    values.role = props.type;\n    axios\n      .post(\"/api/createRegistration\", values)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\"User Sign Up Complete\", successToast);\n        props.handleClose();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n  let SignupSchema;\n  if (props.type !== \"Admin\" && props.type !== \"Agent\") {\n    SignupSchema = Yup.object().shape({\n      businessName: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n      userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n      mobile: Yup.string().required(\"Required\"),\n    });\n  } else {\n    SignupSchema = Yup.object().shape({\n      businessName: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n      vendorType: Yup.string().required(\"Required\"),\n      userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n      mobile: Yup.string().required(\"Required\"),\n    });\n  }\n  return (\n    <div>\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          Create New {props.type} Form\n        </DialogTitle>\n        <Formik\n          initialValues={{\n            businessName: \"\",\n            vendorType: \"P0\",\n            userEmail: \"\",\n            mobile: \"\",\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values: any) => {\n            signUpSubmit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange, setFieldValue }) => (\n            // obj: any\n            <Form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <TextField\n                    autoComplete=\"businessName\"\n                    required\n                    name=\"businessName\"\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"businessName\"\n                    label=\"Name\"\n                    autoFocus\n                    onChange={handleChange}\n                    value={values.businessName}\n                    error={\n                      errors.businessName && touched.businessName ? true : false\n                    }\n                    helperText={touched.businessName && errors.businessName}\n                  />\n                </Grid>\n                {props.type !== \"Admin\" && props.type !== \"Agent\" && (\n                  <Grid item xs={12}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Vendor Type\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        fullWidth\n                        id=\"demo-simple-select-helper\"\n                        value={values.vendorType}\n                        error={\n                          errors.vendorType && touched.vendorType ? true : false\n                        }\n                        onChange={(event: any, data: any) => {\n                          setFieldValue(\"vendorType\", data?.props?.children);\n                        }}\n                      >\n                        <MenuItem value={\"P0\"}>P0</MenuItem>\n                        <MenuItem value={\"P1\"}>P1</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"userEmail\"\n                    label=\"Email Address\"\n                    name=\"userEmail\"\n                    autoComplete=\"userEmail\"\n                    onChange={handleChange}\n                    value={values.userEmail}\n                    error={errors.userEmail && touched.userEmail ? true : false}\n                    helperText={touched.userEmail && errors.userEmail}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"mobile\"\n                    label=\"Mobile Number\"\n                    name=\"mobile\"\n                    onChange={handleChange}\n                    value={values.mobile}\n                    error={errors.mobile && touched.mobile ? true : false}\n                    helperText={touched.mobile && errors.mobile}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={props.handleClose}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Add\n                  </Button>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\nexport const CreateNewUserDialog = withSnackbar(CreateNewUserDialogComponent);\n","import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Add, Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport Title from \"../Title\";\r\nimport { CreateNewUserDialog } from \"./CreateNewUser\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function AdminListComponent(props: any) {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role === null) {\r\n    window.location.href = \"/\";\r\n  }\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [adminList, setAdminList] = React.useState<any>([]);\r\n\r\n  const fetchUserList = () => {\r\n    axios\r\n      .get(\"/api/getAllUsers\")\r\n      .then((response: any) => {\r\n        const adminList = response.data?.filter((row: any) => {\r\n          return row.role === \"Admin\";\r\n        });\r\n        setAdminList(adminList);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  // const activateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User activated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\r\n  //     });\r\n  // };\r\n  // const deActivateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const deleteAccount = (user: any) => {\r\n    axios\r\n      .delete(\"/api/delete-user/\" + user.userId)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Deleted\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Delete User\", failureToast);\r\n      });\r\n  };\r\n\r\n  const sendmail = (user: any) => {\r\n    if (\r\n      user.loginUserName === undefined ||\r\n      user.loginUserName === null ||\r\n      user.loginUserName === \"\" ||\r\n      user.loginPassword === undefined ||\r\n      user.loginPassword === null ||\r\n      user.loginPassword === \"\"\r\n    ) {\r\n      alert(\r\n        \"Please make sure you have a valid username and password before you send the credentials.\"\r\n      );\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/api/generateLoginDetails\", user)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const [open, setOpen] = React.useState<any>(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchUserList();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Title style={{ marginTop: \"20px\" }}>List of registered Admin</Title>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Title\r\n            style={{ marginTop: \"20px\", textAlign: \"right\", cursor: \"pointer\" }}\r\n          >\r\n            <Tooltip title=\"Add\">\r\n              <Add onClick={handleOpen}></Add>\r\n            </Tooltip>\r\n            <CreateNewUserDialog\r\n              open={open}\r\n              type=\"Admin\"\r\n              handleClose={handleClose}\r\n            ></CreateNewUserDialog>\r\n          </Title>\r\n        </Grid>\r\n      </Grid>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>User Name</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {adminList.map((row: any) => (\r\n            <TableRow key={row.userId}>\r\n              <TableCell>{row.userEmail}</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginUserName\"\r\n                  name=\"loginUserName\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginUserName\"\r\n                  defaultValue={row.loginUserName}\r\n                  onChange={(event: any) => {\r\n                    row.loginUserName = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginPassword\"\r\n                  name=\"loginPassword\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginPassword\"\r\n                  defaultValue={row.loginPassword}\r\n                  onChange={(event: any) => {\r\n                    row.loginPassword = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell align=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => sendmail(row)}\r\n                >\r\n                  Send Credentials\r\n                </Button>\r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const AdminList = withSnackbar(AdminListComponent);\r\n","import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Add, Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport Title from \"../Title\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CreateNewUserDialog } from \"./CreateNewUser\";\r\nexport function AgentListComponent(props: any) {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role === null) {\r\n    window.location.href = \"/\";\r\n  }\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [agentList, setAgentList] = React.useState<any>([]);\r\n  const fetchUserList = () => {\r\n    axios\r\n      .get(\"/api/getAllUsers\")\r\n      .then((response: any) => {\r\n        const agentList = response.data?.filter((row: any) => {\r\n          return row.role === \"Agent\";\r\n        });\r\n        setAgentList(agentList);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  // const activateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User activated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\r\n  //     });\r\n  // };\r\n  // const deActivateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const deleteAccount = (user: any) => {\r\n    axios\r\n      .delete(\"/api/delete-user/\" + user.userId)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Deleted\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Delete User\", failureToast);\r\n      });\r\n  };\r\n  // const submitNewUser = (user: any) => {\r\n  //   console.log(user);\r\n  //   axios\r\n  //     .post(\"/api/v1/admin/user/add/\", user)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Added\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const sendmail = (user: any) => {\r\n    if (\r\n      user.loginUserName === undefined ||\r\n      user.loginUserName === null ||\r\n      user.loginUserName === \"\" ||\r\n      user.loginPassword === undefined ||\r\n      user.loginPassword === null ||\r\n      user.loginPassword === \"\"\r\n    ) {\r\n      alert(\r\n        \"Please make sure you have a valid username and password before you send the credentials.\"\r\n      );\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/api/generateLoginDetails\", user)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const [open, setOpen] = React.useState<any>(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchUserList();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Title style={{ marginTop: \"20px\" }}>List of Agents</Title>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Title\r\n            style={{ marginTop: \"20px\", textAlign: \"right\", cursor: \"pointer\" }}\r\n          >\r\n            <Tooltip title=\"Add\">\r\n              <Add onClick={handleOpen}></Add>\r\n            </Tooltip>\r\n            <CreateNewUserDialog\r\n              open={open}\r\n              type=\"Agent\"\r\n              handleClose={handleClose}\r\n            ></CreateNewUserDialog>\r\n          </Title>\r\n        </Grid>\r\n      </Grid>{\" \"}\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>User Name</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {agentList.map((row: any) => (\r\n            <TableRow key={row.userId}>\r\n              <TableCell>{row.userEmail}</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginUserName\"\r\n                  name=\"loginUserName\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginUserName\"\r\n                  defaultValue={row.loginUserName}\r\n                  onChange={(event: any) => {\r\n                    row.loginUserName = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  autoComplete=\"loginPassword\"\r\n                  name=\"loginPassword\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"loginPassword\"\r\n                  defaultValue={row.loginPassword}\r\n                  onChange={(event: any) => {\r\n                    row.loginPassword = event.target.value;\r\n                  }}\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell align=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => sendmail(row)}\r\n                >\r\n                  Send Credentials\r\n                </Button>\r\n                {/* {!row.enabled ? (\r\n                  <IconButton\r\n                    aria-label=\"PlayCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      activateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PlayCircleFilledIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label=\"PauseCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      deActivateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PauseCircleFilledIcon />\r\n                  </IconButton>\r\n                )}\r\n                \r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton> */}\r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const AgentList = withSnackbar(AgentListComponent);\r\n","import { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../../util/util\";\n\nconst PlanSchema = Yup.object().shape({\n  payplanname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  remarks: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(100, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst CreateNewPlanComponent = (props: any) => {\n  const submit = (values: any) => {\n    axios\n      .post(\"/api/plan\", { ...values })\n      .then((response: any) => {\n        props.enqueueSnackbar(\"Plan Added successfully\", successToast);\n        props.handleClose(true);\n        props.fetchPlanList();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(\"Unable To Add Plan\", failureToast);\n      });\n  };\n  return (\n    <div>\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Plan Form</DialogTitle>\n        <Formik\n          initialValues={{\n            payplanname: \"\",\n            remarks: \"\",\n          }}\n          validationSchema={PlanSchema}\n          onSubmit={(values: any) => {\n            submit(values);\n          }}\n        >\n          {({ errors, touched, values, handleChange }) => (\n            <Form noValidate>\n              <DialogContent style={{ paddingTop: \"10px\" }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      autoComplete=\"payplanname\"\n                      name=\"payplanname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"payplanname\"\n                      label=\"Plan Name\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.payplanname}\n                      error={\n                        errors.payplanname && touched.payplanname ? true : false\n                      }\n                      helperText={touched.payplanname && errors.payplanname}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      id=\"remarks\"\n                      label=\"Remarks\"\n                      name=\"remarks\"\n                      autoComplete=\"remarks\"\n                      onChange={handleChange}\n                      value={values.remarks}\n                      error={errors.remarks && touched.remarks ? true : false}\n                      helperText={touched.remarks && errors.remarks}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={() => props.handleClose(false)}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                >\n                  Cancel\n                </Button>\n                <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n                  Save\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\nexport const CreateNewPlan = withSnackbar(CreateNewPlanComponent);\n","import {\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  payplanLocation: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\r\n  payplanamount: Yup.number().required(\"Required\"),\r\n});\r\n\r\nconst CreateNewPlanLocationDialogComponent = (props: any) => {\r\n  const [planLocationList, setPlanLocationList] = React.useState<any>([]);\r\n\r\n  const submit = (values: any) => {\r\n    axios\r\n      .post(\"/api/plan-location/\" + props.plan.id, values)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"Plan Location Added successfully\", successToast);\r\n        props.handleClose(true);\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable to Add Location \", failureToast);\r\n      });\r\n  };\r\n  const fetchStateList = () => {\r\n    axios\r\n      .get(\"/api/state-list\")\r\n      .then((response: any) => {\r\n        setPlanLocationList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchStateList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  return (\r\n    <Dialog open={props.open} aria-labelledby=\"form-dialog-title\" maxWidth=\"xs\">\r\n      <DialogTitle id=\"form-dialog-title\">Create New Plan Location</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          payplanLocation: \"\",\r\n          payplanamount: \"\",\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={(values: any) => {\r\n          submit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched, values, handleChange }) => (\r\n          <Form noValidate>\r\n            <DialogContent>\r\n              <Grid container spacing={2} justifyContent=\"center\">\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                    {/* <TextField\r\n                        autoComplete=\"payplanLocation\"\r\n                        name=\"payplanLocation\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        id=\"payplanLocation\"\r\n                        label=\"Payplan Location\"\r\n                        autoFocus\r\n                        onChange={handleChange}\r\n                        value={values.payplanLocation}\r\n                        error={\r\n                          errors.payplanLocation && touched.payplanLocation\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.payplanLocation && errors.payplanLocation\r\n                        }\r\n                      /> */}\r\n                    <InputLabel id=\"payplanLocation\">Select a plan</InputLabel>\r\n                    <Select\r\n                      name=\"payplanLocation\"\r\n                      id=\"payplanLocation\"\r\n                      label=\"Select a plan\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      {planLocationList.map((plan: any) => {\r\n                        return (\r\n                          <MenuItem value={plan.name} key={plan.id}>\r\n                            {plan.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginBottom: \"10px\" }}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    size=\"small\"\r\n                    id=\"payplanamount\"\r\n                    label=\"Pay Plan Amount\"\r\n                    name=\"payplanamount\"\r\n                    autoComplete=\"payplanamount\"\r\n                    onChange={handleChange}\r\n                    value={values.payplanamount}\r\n                    error={\r\n                      errors.payplanamount && touched.payplanamount\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={touched.payplanamount && errors.payplanamount}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => props.handleClose(false)}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\" variant=\"contained\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\nexport const CreateNewPlanLocationDialog = withSnackbar(\r\n  CreateNewPlanLocationDialogComponent\r\n);\r\n","import {\r\n  Collapse,\r\n  IconButton,\r\n  Paper,\r\n  TableContainer,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  Add,\r\n  Delete,\r\n  KeyboardArrowDownOutlined,\r\n  KeyboardArrowUpOutlined,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast } from \"../../util/util\";\r\nimport { CreateNewPlan } from \"./CreateNewPlan\";\r\nimport Title from \"../Title\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CreateNewPlanLocationDialog } from \"./CreateNewPlanLocation\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nfunction RowComponent(props: any) {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const updatePlanLocationAmount = (id: any, ref: any) => {\r\n    axios\r\n      .get(\"/api/update-plan-location-amount/\" + id + \"/\" + ref.current.value)\r\n      .then((response: any) => {\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Error updating the location amount\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const row = props.row;\r\n  const handleDeletePlan = (row: any) => {\r\n    axios\r\n      .delete(\"/api/plan/\" + row.id)\r\n      .then((response: any) => {\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const handleDeletePlanLocation = (plan: any, planLocation: any) => {\r\n    axios\r\n      .delete(\"/api/plan-location/\" + plan.id + \"/\" + planLocation.id)\r\n      .then((response: any) => {\r\n        props.fetchPlanList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse?.message, failureToast);\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow key={row.id}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpOutlined /> : <KeyboardArrowDownOutlined />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"left\">{row.payplanname}</TableCell>\r\n        <TableCell align=\"left\">{row.remarks}</TableCell>\r\n        <TableCell align=\"left\">\r\n          <IconButton>\r\n            <Delete onClick={() => handleDeletePlan(row)}></Delete>\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Table size=\"small\" aria-label=\"purchases\" padding=\"checkbox\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Location</b>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <b>AMOUNT</b>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <IconButton>\r\n                      <Add onClick={() => props.openLocationModal(row)}></Add>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {row.payplanLocation.map((historyRow: any) => {\r\n                  const ref = React.createRef();\r\n                  return (\r\n                    <TableRow key={historyRow.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.payplanLocation}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <TextField\r\n                          inputRef={ref}\r\n                          style={{ padding: \"10px\" }}\r\n                          size=\"small\"\r\n                          defaultValue={historyRow.payplanamount}\r\n                          type=\"number\"\r\n                        />\r\n                        <PublishIcon\r\n                          style={{ marginTop: \"10px\", cursor: \"pointer\" }}\r\n                          titleAccess=\"Save Amount\"\r\n                          onClick={() =>\r\n                            updatePlanLocationAmount(historyRow.id, ref)\r\n                          }\r\n                        ></PublishIcon>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <IconButton>\r\n                          <Delete\r\n                            onClick={() =>\r\n                              handleDeletePlanLocation(row.id, historyRow)\r\n                            }\r\n                          ></Delete>\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst Row = withSnackbar(RowComponent);\r\nexport const PlanListComponent = (props: any) => {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role === null) {\r\n    history.push(\"#/signin\");\r\n  }\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [planList, setPlanList] = React.useState<any>([]);\r\n  // const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  const fetchPlanList = () => {\r\n    axios\r\n      .get(\"/api/plan-list\")\r\n      .then((response: any) => {\r\n        setPlanList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchPlanList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [openLocation, setOpenLocation] = React.useState<boolean>(false);\r\n  const [plan, setPlan] = React.useState<any>();\r\n\r\n  const openLocationModal = (row: any) => {\r\n    setOpenLocation(true);\r\n    setPlan(row);\r\n  };\r\n  const handleModalOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleModalClose = (refresh: any) => {\r\n    if (refresh) {\r\n      // fetchUserList();\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const handleModalLocationClose = (refresh: any) => {\r\n    if (refresh) {\r\n      // fetchUserList();\r\n    }\r\n    setOpenLocation(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Title>List of registered Plans</Title>\r\n      <TableContainer component={Paper}>\r\n        <CreateNewPlan\r\n          open={open}\r\n          handleClose={handleModalClose}\r\n          fetchPlanList={fetchPlanList}\r\n        ></CreateNewPlan>\r\n        <CreateNewPlanLocationDialog\r\n          fetchPlanList={fetchPlanList}\r\n          open={openLocation}\r\n          plan={plan}\r\n          handleClose={handleModalLocationClose}\r\n        ></CreateNewPlanLocationDialog>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell align=\"left\">\r\n                <b>Particulars</b>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <b>Remarks</b>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <IconButton>\r\n                  <Add onClick={handleModalOpen}></Add>\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {planList.map((row: any) => (\r\n              <Row\r\n                key={row.id}\r\n                row={row}\r\n                fetchPlanList={fetchPlanList}\r\n                openLocation={openLocation}\r\n                openLocationModal={openLocationModal}\r\n                handleModalLocationClose={handleModalLocationClose}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\nexport const PlanList = withSnackbar(PlanListComponent);\r\n","import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport Title from \"../Title\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function UserListComponent(props: any) {\r\n  const history = useHistory();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  if (role === null) {\r\n    window.location.href = \"/\";\r\n  }\r\n  if (role !== \"Admin\") {\r\n    history.push(\"/dashboard/order-list\");\r\n  }\r\n  const [userList, setUserList] = React.useState<any>([]);\r\n  const [searchQuery, setSearchQuery] = React.useState<any>(\"\");\r\n\r\n  const [agentList, setAgentList] = React.useState<any>([]);\r\n  // const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  const fetchUserList = () => {\r\n    axios\r\n      .get(\"/api/getAllUsers\")\r\n      .then((response: any) => {\r\n        const agentList = response.data?.filter((row: any) => {\r\n          return row.role === \"Agent\";\r\n        });\r\n        setAgentList(agentList);\r\n        setUserList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  // const activateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/activate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User activated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"reponse.error\", successToast);\r\n  //     });\r\n  // };\r\n  // const deActivateAccount = (user: any) => {\r\n  //   axios\r\n  //     .get(\"/api/v1/admin/user/deactivate/\" + user.id)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Deactivated\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const deleteAccount = (user: any) => {\r\n    axios\r\n      .delete(\"/api/delete-user/\" + user.userId)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Deleted\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Delete User\", failureToast);\r\n      });\r\n  };\r\n  // const submitNewUser = (user: any) => {\r\n  //   console.log(user);\r\n  //   axios\r\n  //     .post(\"/api/v1/admin/user/add/\", user)\r\n  //     .then((response: any) => {\r\n  //       props.enqueueSnackbar(\"User Added\", successToast);\r\n  //       fetchUserList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(reponse.error, failureToast);\r\n  //     });\r\n  // };\r\n  const sendmail = (user: any) => {\r\n    if (\r\n      user.loginUserName === undefined ||\r\n      user.loginUserName === null ||\r\n      user.loginUserName === \"\" ||\r\n      user.loginPassword === undefined ||\r\n      user.loginPassword === null ||\r\n      user.loginPassword === \"\"\r\n    ) {\r\n      alert(\r\n        \"Please make sure you have a valid username and password before you send the credentials.\"\r\n      );\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/api/generateLoginDetails\", user)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Credentials Generated\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const updateUserAgentMapping = (user: any, loginUserName: any) => {\r\n    axios\r\n      .get(\"/api/updateUserAgentMapping/\" + user.userId + \"/\" + loginUserName)\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\"User Assigned Successfully\", successToast);\r\n        fetchUserList();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable to assigned User to Agent\", failureToast);\r\n        fetchUserList();\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  // const [open, setOpen] = React.useState<any>(false);\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  //   fetchUserList();\r\n  // };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={7}>\r\n          <Title style={{ marginTop: \"20px\" }}>List of Customers</Title>\r\n        </Grid>\r\n        <Grid item xs={5} style={{ textAlign: \"right\" }}>\r\n          <TextField\r\n            margin=\"dense\"\r\n            type=\"text\"\r\n            size=\"small\"\r\n            label=\"Search\"\r\n            onChange={(text: any) => {\r\n              setSearchQuery(text.target.value);\r\n            }}\r\n            // value={values.pricipleelectricityphoto}\r\n            // InputLabelProps={{ shrink: true }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>User Name</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell>Assign To Agent</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {userList\r\n            ?.filter((row: any) => {\r\n              return row.role === \"Customer\";\r\n            })\r\n            ?.filter((row: any) => {\r\n              return (\r\n                searchQuery === \"\" ||\r\n                row.role.includes(searchQuery) ||\r\n                row.userEmail.includes(searchQuery) ||\r\n                row.loginUserName.includes(searchQuery)\r\n              );\r\n            })\r\n            ?.map((row: any) => (\r\n              <TableRow key={row.userId}>\r\n                <TableCell>{row.userEmail}</TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    autoComplete=\"loginUserName\"\r\n                    name=\"loginUserName\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    id=\"loginUserName\"\r\n                    defaultValue={row.loginUserName}\r\n                    onChange={(event: any) => {\r\n                      row.loginUserName = event.target.value;\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    autoComplete=\"loginPassword\"\r\n                    name=\"loginPassword\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    id=\"loginPassword\"\r\n                    defaultValue={row.loginPassword}\r\n                    onChange={(event: any) => {\r\n                      row.loginPassword = event.target.value;\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Select\r\n                    style={{ marginLeft: \"30px\", marginBottom: \"9px\" }}\r\n                    value={row.assignedToAgent ? row.assignedToAgent : \"\"}\r\n                    onChange={(event: any, data: any) => {\r\n                      updateUserAgentMapping(row, event.target.value);\r\n                    }}\r\n                  >\r\n                    {agentList.map((agent: any) => {\r\n                      return (\r\n                        <MenuItem\r\n                          value={agent.loginUserName}\r\n                          key={agent.loginUserName}\r\n                        >\r\n                          {agent.loginUserName}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={() => sendmail(row)}\r\n                  >\r\n                    Send Credentials\r\n                  </Button>\r\n                  <IconButton\r\n                    aria-label=\"DeleteIcon\"\r\n                    onClick={() => {\r\n                      deleteAccount(row);\r\n                    }}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                  {/* {!row.enabled ? (\r\n                  <IconButton\r\n                    aria-label=\"PlayCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      activateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PlayCircleFilledIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label=\"PauseCircleFilledIcon\"\r\n                    onClick={() => {\r\n                      deActivateAccount(row);\r\n                    }}\r\n                  >\r\n                    <PauseCircleFilledIcon />\r\n                  </IconButton>\r\n                )}\r\n                \r\n                <IconButton\r\n                  aria-label=\"DeleteIcon\"\r\n                  onClick={() => {\r\n                    deleteAccount(row);\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton> */}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const UserList = withSnackbar(UserListComponent);\r\n","import {\r\n  Collapse,\r\n  createStyles,\r\n  List,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Queue } from \"@material-ui/icons\";\r\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\";\r\n// import AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\n// import LayersIcon from \"@material-ui/icons/Layers\";\r\n// import LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n// import ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport React from \"react\";\r\n\r\nexport const MainListItems = () => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const admin = role === \"Admin\";\r\n  return admin ? (\r\n    <div>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/home\">\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/order-list\">\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Applications\" />\r\n      </ListItem>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <ListItem button component=\"a\" href=\"/#/dashboard/order-list\">\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Applications\" />\r\n      </ListItem>\r\n      {role !== \"Agent\" && (\r\n        <ListItem button component=\"a\" href=\"/#/dashboard/apply-for-gst\">\r\n          <ListItemIcon>\r\n            <AccessibilityIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Apply For GST\" />\r\n        </ListItem>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\nexport const SecondaryListItems = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const classes = useStyles();\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const admin = role === \"Admin\";\r\n  return (\r\n    <>\r\n      {admin && (\r\n        <div>\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n              <SupervisorAccountIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Admin\" />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/userList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PersonOutlineIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customer List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/agentList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PersonIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Agent List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/adminList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <RecordVoiceOverIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Admin List\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                component=\"a\"\r\n                href=\"/#/dashboard/planList\"\r\n              >\r\n                <ListItemIcon>\r\n                  <Queue />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Plan List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\"#3F51B5\",\n    opacity:1\n  },\n}));\n\nexport const StickyFooter = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={\"footer\"}>\n      <footer className={classes.footer}>\n        <Grid container>\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\n            <Typography\n              variant=\"body1\"\n              style={{ color: \"white\", margin: \"auto\" }}\n            >\n              Copyright © 2021 Spiraea. All Rights Reserved (A){\" \"}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\n            <Typography variant=\"body1\">\n              <img\n                src=\"/NextSAA-Logo1.png\"\n                alt=\"\"\n                style={{ height: \"30px\" }}\n              ></img>\n            </Typography>\n          </Grid>\n        </Grid>\n      </footer>\n    </div>\n  );\n};\n","import {\r\n  AppBar,\r\n  Container,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { secondaryRoutes } from \"../routes/routes\";\r\nimport { MainListItems, SecondaryListItems } from \"./ListItems\";\r\nimport { StickyFooter } from \"./StickyFooter\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    minWidth: \"700px\",\r\n    display: \"flex\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: \"100%\",\r\n    marginLeft: drawerWidth,\r\n    // width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: \"200px\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [\r\n    mobileMoreAnchorEl,\r\n    setMobileMoreAnchorEl,\r\n  ] = React.useState<null | HTMLElement>(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = (event: any) => {\r\n    if (event.target.innerText === \"Logout\") {\r\n      history.push(\"/signIn\");\r\n      // history.push(\"/api/auth/logout\");\r\n    } else if (event.target.innerText === \"Profile\") {\r\n      history.push(\"/dashboard/profile\");\r\n      // history.push(\"/api/auth/profile\");\r\n    }\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const user = sessionStorage.getItem(\"user\");\r\n  if (role === null || user === null) {\r\n    history.push(\"/signIn\");\r\n  }\r\n  // const admin = role === \"Admin\";\r\n  const navigate = (url: string) => {\r\n    history.push(url);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            onClick={() => navigate(\"/#/dashboard/home\")}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            Welcome {sessionStorage.getItem(\"user\")}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <img\r\n            alt=\"\"\r\n            src=\"/spiraea-logo-bw-web-1.png\"\r\n            style={{ height: \"50px\", marginRight: \"130px\" }}\r\n          />\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          {/* <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton> */}\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MainListItems></MainListItems>\r\n        </List>\r\n        <Divider />\r\n        <SecondaryListItems></SecondaryListItems>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container>\r\n            <Switch>\r\n              {secondaryRoutes.map((route: any) => {\r\n                return (\r\n                  <Route path={route.path} key={route.path} exact>\r\n                    {route.component}\r\n                  </Route>\r\n                );\r\n              })}\r\n            </Switch>\r\n          </Grid>\r\n        </Container>\r\n        <StickyFooter />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\nimport { StickyFooter } from \"./StickyFooter\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignupSchema = Yup.object().shape({\n  userEmail: Yup.string().email(\"Invalid Email\").required(\"Required\"),\n});\nexport function ForgotPasswordComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n  function navigateToLogin() {\n    history.push(\"/signin\");\n  }\n  const signUpSubmit = (values: any) => {\n    axios\n      .get(\"/api/forgot-password/\" + values.userEmail)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\n          \"Credentials sent on the registered mail\",\n          successToast\n        );\n        navigateToLogin();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <img\n            alt=\"\"\n            src=\"/spiraea-logo-bw-web-1.png\"\n            style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            Forgot password\n          </Typography>\n          <Formik\n            initialValues={{\n              userEmail: \"\",\n              mobile: \"\",\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values: any) => {\n              signUpSubmit(values);\n            }}\n          >\n            {({ errors, touched, values, handleChange, setFieldValue }) => (\n              // obj: any\n              <Form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"userEmail\"\n                      label=\"Email Address\"\n                      name=\"userEmail\"\n                      autoComplete=\"userEmail\"\n                      onChange={handleChange}\n                      value={values.userEmail}\n                      error={\n                        errors.userEmail && touched.userEmail ? true : false\n                      }\n                      helperText={touched.userEmail && errors.userEmail}\n                    />\n                  </Grid>\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Request\n                </Button>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"/#/signIn\" variant=\"body2\">\n                      Back to Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </Container>\n      <StickyFooter />\n    </>\n  );\n}\nexport const ForgotPassword = withSnackbar(ForgotPasswordComponent);\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React from \"react\";\n\nexport const ViewDocumentDialogComponent = (props: any) => {\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img\n              src={\"/api/document/downloadFile/\" + props.name}\n              alt=\"\"\n              style={{ height: \"50vh\" }}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { Send, VerifiedUser } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport { withSnackbar } from \"notistack\";\r\n// Import React FilePond\r\nimport React from \"react\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nfunction validateEmail(email: any) {\r\n  var re = /\\S+@\\S+\\.\\S+/;\r\n  return re.test(email);\r\n}\r\n\r\nfunction EmailVerificationComponent(props: any) {\r\n  const sendVerificationMail = () => {\r\n    const emailValid = validateEmail(props.value);\r\n    if (!emailValid) {\r\n      props.enqueueSnackbar(\"Invalid Email : \" + props.value, failureToast);\r\n    } else {\r\n      let url =\r\n        \"/api/send-validation-mail/\" +\r\n        props.type +\r\n        \"/\" +\r\n        props.subType +\r\n        \"/\" +\r\n        props.id;\r\n      axios\r\n        .get(url)\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Verification Mail Sent Successfully\",\r\n            successToast\r\n          );\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.error, failureToast);\r\n        });\r\n    }\r\n  };\r\n  // console.log(props.id);\r\n  // props.subType\r\n  // props.type\r\n  // props.value\r\n  return (\r\n    <>\r\n      <span style={{ float: \"right\", marginTop: \"25px\" }}>\r\n        {props.id && (\r\n          <>\r\n            <Send\r\n              titleAccess=\"Send Verification Mail\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                sendVerificationMail();\r\n              }}\r\n            ></Send>\r\n          </>\r\n        )}\r\n\r\n        {props?.verificationObject?.verified && (\r\n          <VerifiedUser\r\n            titleAccess=\"User Verified\"\r\n            style={{ color: \"green\", cursor: \"pointer\" }}\r\n          ></VerifiedUser>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\nexport const EmailVerification = withSnackbar(EmailVerificationComponent);\r\n","import { Grid, Tooltip } from \"@material-ui/core\";\r\nimport { GetApp, Visibility } from \"@material-ui/icons\";\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n// Import React FilePond\r\nimport { FilePond } from \"react-filepond\";\r\nimport React from \"react\";\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\n\r\n// Register the plugins\r\n// Our app\r\nexport function FileUpload(props: any) {\r\n  const stripAndShowFileName = (fileName: any) => {\r\n    if (fileName) {\r\n      return (\r\n        fileName.substring(0, fileName.lastIndexOf(\"--==\")) +\r\n        fileName.substring(fileName.lastIndexOf(\".\"), fileName.length)\r\n      );\r\n    }\r\n  };\r\n  // const title = props.fieldName;\r\n\r\n  const files: any = [\r\n    {\r\n      source: stripAndShowFileName(props.field),\r\n      options: {\r\n        type: \"local\",\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={10}>\r\n        {props.title}\r\n        <FilePond\r\n          labelFileSizeNotAvailable=\"\"\r\n          files={props.field ? files : null}\r\n          allowReorder={false}\r\n          allowMultiple={false}\r\n          maxFiles={1}\r\n          onupdatefiles={(filea: any) => {\r\n            if (filea.length === 0) {\r\n              props.setFieldValue(props.fieldName, null);\r\n            }\r\n            // else if (\r\n            //   filea.length > 0 &&\r\n            //   filea[0]?.file?.size > 100000 &&\r\n            //   props?.fieldName?.includes(\"partnerPhoto\")\r\n            // ) {\r\n            //   alert(\"Partner photo is too big\");\r\n            //   props.setFieldValue(props.fieldName, null);\r\n            // }\r\n          }}\r\n          server={{\r\n            process: {\r\n              url: \"/api/document/uploadFile\",\r\n              onload: (response: any) => {\r\n                // props.upload(props.field, response.key);\r\n                // return response.key;\r\n                console.log(response);\r\n                props.setFieldValue(props.fieldName, response);\r\n                return stripAndShowFileName(response);\r\n              },\r\n            },\r\n          }}\r\n          name=\"file\"\r\n          labelIdle={'<span class=\"filepond--label-action\">Browse</span>'}\r\n        />\r\n        {props.error ? (\r\n          <span\r\n            className=\"MuiFormHelperText-root Mui-error Mui-required MuiFormHelperText-marginDense\"\r\n            style={{ color: \"red\" }}\r\n          >\r\n            Required\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={2} style={{ padding: \"0px\" }}>\r\n        {props.field && (\r\n          <div>\r\n            <Tooltip title=\"View\">\r\n              <Visibility\r\n                className=\"file-action-icon\"\r\n                onClick={() => {\r\n                  props.setImageName(props.field);\r\n                  props.setOpen(true);\r\n                }}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Download\">\r\n              <GetApp\r\n                className=\"file-action-icon\"\r\n                onClick={() => {\r\n                  props.downloadReport(props.field);\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\nfunction buildSchema() {\n  const shape: any = {\n    firmName: Yup.string().required(\"Required\"),\n    legalbusinessName: Yup.string().required(\"Required\"),\n    tradeName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\n    panphoto: Yup.string().required(\"Required\"),\n    composition: Yup.string().required(\"Required\"),\n    commencementDate: Yup.date().required(\"Required\"),\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\n\n    // branchname: Yup.string().required(\"Required\"),\n    accountnumber: Yup.string().required(\"Required\"),\n    ifsccode: Yup.string().required(\"Required\"),\n    cancelcheqphoto: Yup.string().required(\"Required\"),\n    // tradelicensenumber: Yup.string().required(\"Required\"),\n    // tradelicensephoto: Yup.string().required(\"Required\"),\n    certificateOfIncorportation: Yup.string().required(\"Required\"),\n    pannumber: Yup.string()\n      .required(\"Please enter your Pan Number\")\n      .matches(panRegex, \"Invalid Pan Number\"),\n    numberOfDirectors: Yup.number()\n      .required(\"Please enter No Of Partners\")\n      .min(1, \"Minimum 1 number of Partners\")\n      .max(15, \"Maximum 15 number of Partners\"),\n  };\n  [...Array(15)].forEach((value: any, index: any) => {\n    shape[\"directorName\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"directorDin\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"directorFatherName\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"directorAadharNo\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter Aadhar Number\")\n        .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n    });\n    shape[\"directorAadharPhotoCopyFront\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"directorAadharPhotoCopyBack\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"pannumber\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter your Pan Number\")\n        .matches(panRegex, \"Invalid Pan Number\"),\n    });\n    shape[\"pannumberCopy\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"directorResidentialAddress\" + index] = Yup.string().when(\n      \"numberOfDirectors\",\n      {\n        is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"directorPhoto\" + index] = Yup.string().when(\"numberOfDirectors\", {\n      is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    // shape[\"partnerMobile\" + index] = Yup.number().when(\"numberOfDirectors\", {\n    //   is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n    //   then: Yup.number().required(\"Required\"),\n    // });\n    // shape[\"partnerEmail\" + index] = Yup.string()\n    //   .email(\"Invalid\")\n    //   .when(\"numberOfDirectors\", {\n    //     is: (numberOfDirectors: number) => numberOfDirectors >= index + 1,\n    //     then: Yup.string().email(\"Invalid\").required(\"Required\"),\n    //   });\n  });\n  return Yup.object().shape(shape);\n}\nexport const schema = buildSchema();\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/CompanySchema\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CompanyComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Company/\" + id)\r\n      .then((response: any) => {\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        response.data.directorList.forEach((director: any, index: any) => {\r\n          response.data[\"id\" + index] = director.id;\r\n          response.data[\"directorName\" + index] = director.directorName;\r\n          response.data[\"directorDin\" + index] = director.directorDin;\r\n          response.data[\"directorFatherName\" + index] =\r\n            director.directorFatherName;\r\n          response.data[\"directorAadharNo\" + index] = director.directorAadharNo;\r\n          response.data[\"directorAadharPhotoCopyFront\" + index] =\r\n            director.directorAadharPhotoCopyFront;\r\n          response.data[\"directorAadharPhotoCopyBack\" + index] =\r\n            director.directorAadharPhotoCopyBack;\r\n          response.data[\"pannumber\" + index] = director.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = director.pannumberCopy;\r\n          response.data[\"directorResidentialAddress\" + index] =\r\n            director.directorResidentialAddress;\r\n          response.data[\"directorPhoto\" + index] = director.directorPhoto;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            director.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfDirectors = response.data.directorList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Error fetching order details\", failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Company/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Company/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"directorPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", event.currentTarget.files[0]);\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const directorList: any = [];\r\n    [...Array(values.numberOfDirectors)].forEach((value: any, index: any) => {\r\n      directorList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        directorName: values[\"directorName\" + index],\r\n        directorDin: values[\"directorDin\" + index],\r\n        directorFatherName: values[\"directorFatherName\" + index],\r\n        directorAadharNo: values[\"directorAadharNo\" + index],\r\n        directorAadharPhotoCopyFront:\r\n          values[\"directorAadharPhotoCopyFront\" + index],\r\n        directorAadharPhotoCopyBack:\r\n          values[\"directorAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        directorResidentialAddress:\r\n          values[\"directorResidentialAddress\" + index],\r\n        directorPhoto: values[\"directorPhoto\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n\r\n    const directorListAuthorised = directorList\r\n      .map((p: any) => p.isAuthorisedSignatory)\r\n      .filter((p: any) => p);\r\n    if (directorListAuthorised?.length === 0) {\r\n      alert(\"Please select atleast on Authorised Director\");\r\n      return;\r\n    }\r\n    if (directorListAuthorised?.length > 1) {\r\n      alert(\"Only one Partner can be Authorised Director\");\r\n      return;\r\n    }\r\n\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n\r\n    values.directorList = directorList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-company-details\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-company-details\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  let valuesForDirectors: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForDirectors[\"directorName\" + index] = \"\";\r\n    valuesForDirectors[\"directorDin\" + index] = \"\";\r\n    valuesForDirectors[\"directorFatherName\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharNo\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForDirectors[\"directorAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForDirectors[\"pannumber\" + index] = \"\";\r\n    valuesForDirectors[\"pannumberCopy\" + index] = \"\";\r\n    valuesForDirectors[\"directorResidentialAddress\" + index] = \"\";\r\n    valuesForDirectors[\"directorPhoto\" + index] = \"\";\r\n    valuesForDirectors[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Company\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      certificateOfIncorportation: \"\",\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      isActive: true,\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfDirectors: 1,\r\n                      ...valuesForDirectors,\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the Company\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"Company\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number of Company\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"PAN Photo\"\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Photo\"\r\n                          error={\r\n                            errors.pricipleelectricityphoto &&\r\n                            touched.pricipleelectricityphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"Priciple Rent Photo\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Photo\"\r\n                          error={\r\n                            errors.priciplerentphoto &&\r\n                            touched.priciplerentphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"Priciple NOC Photo\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple NOC Photo\"\r\n                          error={\r\n                            errors.priciplenocphoto && touched.priciplenocphoto\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Electricity photo\"\r\n                        error={\r\n                          errors.additionalelectricityphoto &&\r\n                          touched.additionalelectricityphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Rent photo\"\r\n                        error={\r\n                          errors.additionalrentphoto &&\r\n                          touched.additionalrentphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"NOC photo\"\r\n                        error={\r\n                          errors.additionalnocphoto &&\r\n                          touched.additionalnocphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfDirectors\"\r\n                        label=\"Number of Director\"\r\n                        name=\"numberOfDirectors\"\r\n                        autoComplete=\"numberOfDirectors\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfDirectors}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfDirectors && touched.numberOfDirectors\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfDirectors && errors.numberOfDirectors\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfDirectors)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorName\" + index}\r\n                                label={\"Director's \" + (index + 1) + \" Name\"}\r\n                                name={\"directorName\" + index}\r\n                                autoComplete={\"directorName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorName\" + index] &&\r\n                                  touched[\"directorName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorName\" + index] &&\r\n                                  errors[\"directorName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Director \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorDin\" + index}\r\n                                label={\"DIN of Director \" + (index + 1)}\r\n                                name={\"directorDin\" + index}\r\n                                autoComplete={\"directorDin\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorDin\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorDin\" + index] &&\r\n                                  touched[\"directorDin\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorDin\" + index] &&\r\n                                  errors[\"directorDin\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorFatherName\" + index}\r\n                                label={\r\n                                  \"Director \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"directorFatherName\" + index}\r\n                                autoComplete={\"directorFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorFatherName\" + index] &&\r\n                                  touched[\"directorFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorFatherName\" + index] &&\r\n                                  errors[\"directorFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Director \" + (index + 1)}\r\n                                name={\"directorAadharNo\" + index}\r\n                                autoComplete={\"directorAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"directorAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"directorAadharNo\" + index] &&\r\n                                  touched[\"directorAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"directorAadharNo\" + index] &&\r\n                                  errors[\"directorAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"directorAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title=\"Director Aadhar Copy Front\"\r\n                                  error={\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"directorAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\"Director Aadhar Copy Back\"}\r\n                                  error={\r\n                                    errors[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"directorAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Director \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"pannumberCopy\" + index}\r\n                                field={values[\"pannumberCopy\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"PAN Copy\"}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"directorResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address of Director\" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"directorResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"directorResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"directorResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\r\n                                    \"directorResidentialAddress\" + index\r\n                                  ] &&\r\n                                  touched[\"directorResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"directorResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"directorResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"directorPhoto\" + index}\r\n                                field={values[\"directorPhoto\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Director Photo \" + (index + 1)}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Cancel Cheque photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"certificateOfIncorportation\"}\r\n                        field={values.certificateOfIncorportation}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Certificate Of Incorportation\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Trade license photo\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"declarationOfAuthorisedSignatory\"}\r\n                          field={values.declarationOfAuthorisedSignatory}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Declaration Of Authorised Signatory\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"GST Attachment\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const Company = withSnackbar(CompanyComponent);\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\nfunction buildSchema() {\n  const shape: any = {\n    firmName: Yup.string().required(\"Required\"),\n    legalbusinessName: Yup.string().required(\"Required\"),\n    tradeName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\n    panphoto: Yup.string().required(\"Required\"),\n    composition: Yup.string().required(\"Required\"),\n    commencementDate: Yup.date().required(\"Required\"),\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\n    // principleplace: Yup.string().required(\"Required\"),\n    // pricipleelectricityphoto: Yup.string().required(\"Required\"),\n    // priciplerentphoto: Yup.string().required(\"Required\"),\n    // priciplenocphoto: Yup.string().required(\"Required\"),\n    // additionalplace: Yup.string().required(\"Required\"),\n    // additionalelectricityphoto: Yup.string().required(\"Required\"),\n    // additionalrentphoto: Yup.string().required(\"Required\"),\n    // additionalnocphoto: Yup.string().required(\"Required\"),\n    // branchname: Yup.string().required(\"Required\"),\n    accountnumber: Yup.string().required(\"Required\"),\n    ifsccode: Yup.string().required(\"Required\"),\n    cancelcheqphoto: Yup.string().required(\"Required\"),\n    // tradelicensenumber: Yup.string().required(\"Required\"),\n    // tradelicensephoto: Yup.string().required(\"Required\"),\n    certificateOfIncorportation: Yup.string().required(\"Required\"),\n    pannumber: Yup.string()\n      .required(\"Please enter your Pan Number\")\n      .matches(panRegex, \"Invalid Pan Number\"),\n    numberOfPartners: Yup.number()\n      .required(\"Please enter No Of Partners\")\n      .min(1, \"Minimum 1 number of Partners\")\n      .max(15, \"Maximum 15 number of Partners\"),\n  };\n  [...Array(15)].forEach((value: any, index: any) => {\n    shape[\"partnerName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerFatherName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerAadharNo\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter Aadhar Number\")\n        .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n    });\n    shape[\"partnerAadharPhotoCopyFront\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerAadharPhotoCopyBack\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"pannumber\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter your Pan Number\")\n        .matches(panRegex, \"Invalid Pan Number\"),\n    });\n    shape[\"pannumberCopy\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerResidentialAddress\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerPhoto\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    shape[\"partnerMobile\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerEmail\" + index] = Yup.string()\n      .email(\"Invalid\")\n      .when(\"numberOfPartners\", {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().email(\"Invalid\").required(\"Required\"),\n      });\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n  });\n  return Yup.object().shape(shape);\n}\nexport const schema = buildSchema();\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/LLPSchema\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\nconst LLPComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/LLP/\" + id)\r\n      .then((response: any) => {\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        response.data.partnerList.forEach((partner: any, index: any) => {\r\n          response.data[\"partnerName\" + index] = partner.partnerName;\r\n          response.data[\"partnerFatherName\" + index] =\r\n            partner.partnerFatherName;\r\n          response.data[\"partnerAadharNo\" + index] = partner.partnerAadharNo;\r\n          response.data[\"partnerAadharPhotoCopyFront\" + index] =\r\n            partner.partnerAadharPhotoCopyFront;\r\n          response.data[\"partnerAadharPhotoCopyBack\" + index] =\r\n            partner.partnerAadharPhotoCopyBack;\r\n          response.data[\"pannumber\" + index] = partner.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = partner.pannumberCopy;\r\n          response.data[\"partnerResidentialAddress\" + index] =\r\n            partner.partnerResidentialAddress;\r\n          response.data[\"partnerPhoto\" + index] = partner.partnerPhoto;\r\n          response.data[\"partnerMobile\" + index] = partner.partnerMobile;\r\n          response.data[\"partnerEmail\" + index] = partner.partnerEmail;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            partner.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfPartners = response.data.partnerList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Error fetching order details\", failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/LLP/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/LLP/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"partnerPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const partnerList: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      partnerList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        partnerName: values[\"partnerName\" + index],\r\n        partnerFatherName: values[\"partnerFatherName\" + index],\r\n        partnerAadharNo: values[\"partnerAadharNo\" + index],\r\n        partnerAadharPhotoCopyFront:\r\n          values[\"partnerAadharPhotoCopyFront\" + index],\r\n        partnerAadharPhotoCopyBack:\r\n          values[\"partnerAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        partnerResidentialAddress: values[\"partnerResidentialAddress\" + index],\r\n        partnerPhoto: values[\"partnerPhoto\" + index],\r\n        partnerMobile: values[\"partnerMobile\" + index],\r\n        partnerEmail: values[\"partnerEmail\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n\r\n    const partnerListEmail = partnerList.map((p: any) => p.partnerEmail);\r\n    const duplicates = partnerListEmail.filter(\r\n      (item: any, index: any) => partnerListEmail.indexOf(item) !== index\r\n    );\r\n    if (duplicates?.length > 0) {\r\n      alert(\"Duplicate Partner email found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n\r\n    const partnerListMobile = partnerList.map((p: any) => p.partnerMobile);\r\n    const duplicatesMobile = partnerListMobile.filter(\r\n      (item: any, index: any) => partnerListMobile.indexOf(item) !== index\r\n    );\r\n    if (duplicatesMobile?.length > 0) {\r\n      alert(\"Duplicate Partner Mobile No found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n\r\n    const partnerListAuthorised = partnerList\r\n      .map((p: any) => p.isAuthorisedSignatory)\r\n      .filter((p: any) => p);\r\n    if (partnerListAuthorised?.length === 0) {\r\n      alert(\"Please select atleast on Authorised Partner\");\r\n      return;\r\n    }\r\n    if (partnerListAuthorised?.length > 1) {\r\n      alert(\"Only one Partner can be Authorised Partner\");\r\n      return;\r\n    }\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n    values.partnerList = partnerList;\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-llp\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-llp\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  let valuesForPartners: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForPartners[\"partnerName\" + index] = \"\";\r\n    valuesForPartners[\"partnerFatherName\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharNo\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForPartners[\"pannumber\" + index] = \"\";\r\n    valuesForPartners[\"pannumberCopy\" + index] = \"\";\r\n    valuesForPartners[\"partnerResidentialAddress\" + index] = \"\";\r\n    valuesForPartners[\"partnerPhoto\" + index] = \"\";\r\n    valuesForPartners[\"partnerMobile\" + index] = \"\";\r\n    valuesForPartners[\"partnerEmail\" + index] = \"\";\r\n    valuesForPartners[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            LLP\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      certificateOfIncorportation: \"\",\r\n                      partnershipDeed: \"\",\r\n                      isActive: true,\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfPartners: 1,\r\n                      ...valuesForPartners,\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the LLP\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"LLP\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"PAN Card\"\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Bill\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplerentphoto\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Agreement\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplenocphoto\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple NOC format\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Electricity Bill\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Rent Agreement\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional NOC Agreement\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfPartners\"\r\n                        label=\"Number of Partner\"\r\n                        name=\"numberOfPartners\"\r\n                        autoComplete=\"numberOfPartners\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfPartners}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfPartners && touched.numberOfPartners\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfPartners && errors.numberOfPartners\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfPartners)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerName\" + index}\r\n                                label={\"Partner \" + (index + 1) + \" Name\"}\r\n                                name={\"partnerName\" + index}\r\n                                autoComplete={\"partnerName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerName\" + index] &&\r\n                                  touched[\"partnerName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerName\" + index] &&\r\n                                  errors[\"partnerName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Partner \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerFatherName\" + index}\r\n                                label={\r\n                                  \"Partner \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"partnerFatherName\" + index}\r\n                                autoComplete={\"partnerFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerFatherName\" + index] &&\r\n                                  touched[\"partnerFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerFatherName\" + index] &&\r\n                                  errors[\"partnerFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Partner \" + (index + 1)}\r\n                                name={\"partnerAadharNo\" + index}\r\n                                autoComplete={\"partnerAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerAadharNo\" + index] &&\r\n                                  touched[\"partnerAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerAadharNo\" + index] &&\r\n                                  errors[\"partnerAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title=\"Partner Aadhar Copy Front\"\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\"partnerAadharPhotoCopyBack\" + index]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\r\n                                    \"Partner \" + (index + 1) + \" Adhar Back\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Partner \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"pannumberCopy\" + index}\r\n                                field={values[\"pannumberCopy\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"PAN copy\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"partnerResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerResidentialAddress\" + index] &&\r\n                                  touched[\"partnerResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"partnerResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"partnerPhoto\" + index}\r\n                                field={values[\"partnerPhoto\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"Partner Photo\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                // type=\"number\"\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerMobile\" + index}\r\n                                label={\"Mobile of Partner \" + (index + 1)}\r\n                                name={\"partnerMobile\" + index}\r\n                                autoComplete={\"partnerMobile\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerMobile\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerMobile\" + index] &&\r\n                                  touched[\"partnerMobile\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerMobile\" + index] &&\r\n                                  errors[\"partnerMobile\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                style={{ maxWidth: \"80%\" }}\r\n                                fullWidth\r\n                                id={\"partnerEmail\" + index}\r\n                                label={\"Email of Partner \" + (index + 1)}\r\n                                name={\"partnerEmail\" + index}\r\n                                autoComplete={\"partnerEmail\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerEmail\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerEmail\" + index] &&\r\n                                  touched[\"partnerEmail\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerEmail\" + index] &&\r\n                                  errors[\"partnerEmail\" + index]\r\n                                }\r\n                              />\r\n                              <EmailVerification\r\n                                id={params.id}\r\n                                value={values.email}\r\n                                verificationObject={values.emailVerification}\r\n                                type={\"LLP\"}\r\n                                subType={\"Partner\"}\r\n                              ></EmailVerification>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Cancel Cheque Photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"partnershipDeed\"}\r\n                        field={values.partnershipDeed}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Partnership Deed Photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"certificateOfIncorportation\"}\r\n                        field={values.certificateOfIncorportation}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"certificate Of Incorportation Copy\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Trade license photo\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"declarationOfAuthorisedSignatory\"}\r\n                          field={values.declarationOfAuthorisedSignatory}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Declaration Of Authorised Signatory\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title=\"GST Attachment\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const LLP = withSnackbar(LLPComponent);\r\n","import * as Yup from \"yup\";\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\nfunction buildSchema() {\n  const shape: any = {\n    firmName: Yup.string().required(\"Required\"),\n    legalbusinessName: Yup.string().required(\"Required\"),\n    tradeName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\n    panphoto: Yup.string().required(\"Required\"),\n    composition: Yup.string().required(\"Required\"),\n    commencementDate: Yup.date().required(\"Required\"),\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\n    // principleplace: Yup.string().required(\"Required\"),\n    // pricipleelectricityphoto: Yup.string().required(\"Required\"),\n    // priciplerentphoto: Yup.string().required(\"Required\"),\n    // priciplenocphoto: Yup.string().required(\"Required\"),\n    // additionalplace: Yup.string().required(\"Required\"),\n    // additionalelectricityphoto: Yup.string().required(\"Required\"),\n    // additionalrentphoto: Yup.string().required(\"Required\"),\n    // additionalnocphoto: Yup.string().required(\"Required\"),\n    // branchname: Yup.string().required(\"Required\"),\n    accountnumber: Yup.string().required(\"Required\"),\n    ifsccode: Yup.string().required(\"Required\"),\n    cancelcheqphoto: Yup.string().required(\"Required\"),\n    // tradelicensenumber: Yup.string().required(\"Required\"),\n    // tradelicensephoto: Yup.string().required(\"Required\"),\n    pannumber: Yup.string()\n      .required(\"Please enter your Pan Number\")\n      .matches(panRegex, \"Invalid Pan Number\"),\n    numberOfPartners: Yup.number()\n      .required(\"Please enter No Of Partners\")\n      .min(1, \"Minimum 1 number of Partners\")\n      .max(15, \"Maximum 15 number of Partners\"),\n  };\n  [...Array(15)].forEach((value: any, index: any) => {\n    shape[\"partnerName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerFatherName\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerAadharNo\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter Aadhar Number\")\n        .matches(aadharRegex, \"Invalid Aadhar Number (XXXX XXXX XXXX)\"),\n    });\n    shape[\"partnerAadharPhotoCopyFront\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerAadharPhotoCopyBack\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"pannumber\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string()\n        .required(\"Please enter your Pan Number\")\n        .matches(panRegex, \"Invalid Pan Number\"),\n    });\n    shape[\"pannumberCopy\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerResidentialAddress\" + index] = Yup.string().when(\n      \"numberOfPartners\",\n      {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().required(\"Required\"),\n      }\n    );\n    shape[\"partnerPhoto\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n\n    shape[\"partnerMobile\" + index] = Yup.string().when(\"numberOfPartners\", {\n      is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"partnerEmail\" + index] = Yup.string()\n      .email(\"Invalid\")\n      .when(\"numberOfPartners\", {\n        is: (numberOfPartners: number) => numberOfPartners >= index + 1,\n        then: Yup.string().email(\"Invalid\").required(\"Required\"),\n      });\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\n      then: Yup.string().required(\"Required\"),\n    });\n  });\n  return Yup.object().shape(shape);\n}\nexport const schema = buildSchema();\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/PartnerSchema\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\nconst PartnershipComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Partnership/\" + id)\r\n      .then((response: any) => {\r\n        response.data.partnerList.forEach((partner: any, index: any) => {\r\n          response.data[\"id\" + index] = partner.id;\r\n          response.data[\"partnerName\" + index] = partner.partnerName;\r\n          response.data[\"partnerFatherName\" + index] =\r\n            partner.partnerFatherName;\r\n          response.data[\"partnerAadharNo\" + index] = partner.partnerAadharNo;\r\n          response.data[\"partnerAadharPhotoCopyFront\" + index] =\r\n            partner.partnerAadharPhotoCopyFront;\r\n          response.data[\"partnerAadharPhotoCopyBack\" + index] =\r\n            partner.partnerAadharPhotoCopyBack;\r\n          response.data[\"partnerResidentialAddress\" + index] =\r\n            partner.partnerResidentialAddress;\r\n          response.data[\"partnerPhoto\" + index] = partner.partnerPhoto;\r\n          response.data[\"partnerMobile\" + index] = partner.partnerMobile;\r\n          response.data[\"partnerEmail\" + index] = partner.partnerEmail;\r\n          response.data[\"pannumber\" + index] = partner.pannumber;\r\n          response.data[\"pannumberCopy\" + index] = partner.pannumberCopy;\r\n          response.data[\"isAuthorisedSignatory\" + index] =\r\n            partner.isAuthorisedSignatory;\r\n        });\r\n        response.data.numberOfPartners = response.data.partnerList.length;\r\n\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Partnership/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Partnership/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (\r\n      event.currentTarget.files[0].size > 100000 &&\r\n      field.includes(\"partnerPhoto\")\r\n    ) {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (props.plan) {\r\n      values.paymentPlanLocationDetails = props.plan;\r\n    } else if (orderDetails?.paymentPlanLocationDetails) {\r\n      values.paymentPlanLocationDetails =\r\n        orderDetails?.paymentPlanLocationDetails;\r\n    }\r\n    const partnerList: any = [];\r\n    [...Array(values.numberOfPartners)].forEach((value: any, index: any) => {\r\n      partnerList.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        partnerName: values[\"partnerName\" + index],\r\n        partnerFatherName: values[\"partnerFatherName\" + index],\r\n        partnerAadharNo: values[\"partnerAadharNo\" + index],\r\n        partnerAadharPhotoCopyFront:\r\n          values[\"partnerAadharPhotoCopyFront\" + index],\r\n        partnerAadharPhotoCopyBack:\r\n          values[\"partnerAadharPhotoCopyBack\" + index],\r\n        pannumber: values[\"pannumber\" + index],\r\n        pannumberCopy: values[\"pannumberCopy\" + index],\r\n        partnerResidentialAddress: values[\"partnerResidentialAddress\" + index],\r\n        partnerPhoto: values[\"partnerPhoto\" + index],\r\n        partnerMobile: values[\"partnerMobile\" + index],\r\n        partnerEmail: values[\"partnerEmail\" + index],\r\n        isAuthorisedSignatory: values[\"isAuthorisedSignatory\" + index],\r\n      });\r\n    });\r\n\r\n    const partnerListEmail = partnerList.map((p: any) => p.partnerEmail);\r\n    const duplicates = partnerListEmail.filter(\r\n      (item: any, index: any) => partnerListEmail.indexOf(item) !== index\r\n    );\r\n    if (duplicates?.length > 0) {\r\n      alert(\"Duplicate Partner email found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n    const partnerListMobile = partnerList.map((p: any) => p.partnerMobile);\r\n    const duplicatesMobile = partnerListMobile.filter(\r\n      (item: any, index: any) => partnerListMobile.indexOf(item) !== index\r\n    );\r\n    if (duplicatesMobile?.length > 0) {\r\n      alert(\"Duplicate Partner Mobile No found : \" + duplicates.toString());\r\n      return;\r\n    }\r\n    const partnerListAuthorised = partnerList\r\n      .map((p: any) => p.isAuthorisedSignatory)\r\n      .filter((p: any) => p);\r\n    if (partnerListAuthorised?.length === 0) {\r\n      alert(\"Please select atleast on Authorised Partner\");\r\n      return;\r\n    }\r\n    if (partnerListAuthorised?.length > 1) {\r\n      alert(\"Only one Partner can be Authorised Partner\");\r\n      return;\r\n    }\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n    values.partnerList = partnerList;\r\n\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-partnership\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-partnership\", { ...values })\r\n        .then((response: any) => {\r\n          history.push(\"/dashboard/order-list\");\r\n          props.enqueueSnackbar(\"Application Saved SuccessFully\", successToast);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Not able to save the Application\",\r\n            failureToast\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  let valuesForPartners: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesForPartners[\"partnerName\" + index] = \"\";\r\n    valuesForPartners[\"partnerFatherName\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharNo\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyFront\" + index] = \"\";\r\n    valuesForPartners[\"partnerAadharPhotoCopyBack\" + index] = \"\";\r\n    valuesForPartners[\"pannumber\" + index] = \"\";\r\n    valuesForPartners[\"pannumberCopy\" + index] = \"\";\r\n    valuesForPartners[\"partnerResidentialAddress\" + index] = \"\";\r\n    valuesForPartners[\"partnerPhoto\" + index] = \"\";\r\n    valuesForPartners[\"partnerMobile\" + index] = \"\";\r\n    valuesForPartners[\"partnerEmail\" + index] = \"\";\r\n    valuesForPartners[\"isAuthorisedSignatory\" + index] = false;\r\n  });\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  console.log(schema);\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Partnership\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      firmName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      isActive: true,\r\n                      status: \"CREATED\",\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      remark: \"\",\r\n                      numberOfPartners: 1,\r\n                      ...valuesForPartners,\r\n                      partnershipDeed: \"\",\r\n                      declarationOfAuthorisedSignatory: \"\",\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firmName\"\r\n                        label=\"Name of the Partnership Firm\"\r\n                        name=\"firmName\"\r\n                        autoComplete=\"firmName\"\r\n                        onChange={handleChange}\r\n                        value={values.firmName}\r\n                        error={\r\n                          errors.firmName && touched.firmName ? true : false\r\n                        }\r\n                        helperText={touched.firmName && errors.firmName}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"Partnership\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number of Firm\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"PAN Card Photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Photo\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplerentphoto\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Agreement\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplenocphoto\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Principle NOC\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Electricity Bill\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Rent Agreement\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional NOC\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"numberOfPartners\"\r\n                        label=\"Number of Partner\"\r\n                        name=\"numberOfPartners\"\r\n                        autoComplete=\"numberOfPartners\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfPartners}\r\n                        InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfPartners && touched.numberOfPartners\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfPartners && errors.numberOfPartners\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfPartners)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Divider />\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerName\" + index}\r\n                                label={\"Partner \" + (index + 1) + \" Name\"}\r\n                                name={\"partnerName\" + index}\r\n                                autoComplete={\"partnerName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerName\" + index] &&\r\n                                  touched[\"partnerName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerName\" + index] &&\r\n                                  errors[\"partnerName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FormGroup>\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                      value={\r\n                                        values[\"isAuthorisedSignatory\" + index]\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  id={\"isAuthorisedSignatory\" + index}\r\n                                  name={\"isAuthorisedSignatory\" + index}\r\n                                  onChange={handleChange}\r\n                                  // error={\r\n                                  //   errors[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   touched[\"isAuthorisedSignatory\" + index]\r\n                                  //     ? true\r\n                                  //     : false\r\n                                  // }\r\n                                  // helperText={\r\n                                  //   touched[\"isAuthorisedSignatory\" + index] &&\r\n                                  //   errors[\"isAuthorisedSignatory\" + index]\r\n                                  // }\r\n                                  label={\r\n                                    \"Partner \" +\r\n                                    (index + 1) +\r\n                                    \" is Authorised Signatory\"\r\n                                  }\r\n                                />\r\n                              </FormGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerFatherName\" + index}\r\n                                label={\r\n                                  \"Partner \" + (index + 1) + \" Father's name\"\r\n                                }\r\n                                name={\"partnerFatherName\" + index}\r\n                                autoComplete={\"partnerFatherName\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerFatherName\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerFatherName\" + index] &&\r\n                                  touched[\"partnerFatherName\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerFatherName\" + index] &&\r\n                                  errors[\"partnerFatherName\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerAadharNo\" + index}\r\n                                label={\"Aadhaar No. of Partner \" + (index + 1)}\r\n                                name={\"partnerAadharNo\" + index}\r\n                                autoComplete={\"partnerAadharNo\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerAadharNo\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerAadharNo\" + index] &&\r\n                                  touched[\"partnerAadharNo\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerAadharNo\" + index] &&\r\n                                  errors[\"partnerAadharNo\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyFront\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\r\n                                    \"Partner \" + (index + 1) + \" Adhar Front\"\r\n                                  }\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyFront\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FileUpload\r\n                                  onaddfile={upload}\r\n                                  fieldName={\r\n                                    \"partnerAadharPhotoCopyBack\" + index\r\n                                  }\r\n                                  field={\r\n                                    values[\"partnerAadharPhotoCopyBack\" + index]\r\n                                  }\r\n                                  downloadReport={downloadReport}\r\n                                  setImageName={setImageName}\r\n                                  setOpen={setOpen}\r\n                                  setFieldValue={setFieldValue}\r\n                                  title={\r\n                                    \"Partner \" + (index + 1) + \" Adhar Back\"\r\n                                  }\r\n                                  error={\r\n                                    errors[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ] &&\r\n                                    touched[\r\n                                      \"partnerAadharPhotoCopyBack\" + index\r\n                                    ]\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"pannumber\" + index}\r\n                                label={\"PAN No. of Partner \" + (index + 1)}\r\n                                name={\"pannumber\" + index}\r\n                                autoComplete={\"pannumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"pannumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"pannumber\" + index] &&\r\n                                  errors[\"pannumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"pannumberCopy\" + index}\r\n                                values={values}\r\n                                field={values[\"pannumberCopy\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Partner \" + (index + 1) + \" PAN Card\"}\r\n                                error={\r\n                                  errors[\"pannumber\" + index] &&\r\n                                  touched[\"pannumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerResidentialAddress\" + index}\r\n                                label={\r\n                                  \"Residential Address Of Partner \" +\r\n                                  (index + 1)\r\n                                }\r\n                                name={\"partnerResidentialAddress\" + index}\r\n                                autoComplete={\r\n                                  \"partnerResidentialAddress\" + index\r\n                                }\r\n                                onChange={handleChange}\r\n                                value={\r\n                                  values[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerResidentialAddress\" + index] &&\r\n                                  touched[\"partnerResidentialAddress\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\r\n                                    \"partnerResidentialAddress\" + index\r\n                                  ] &&\r\n                                  errors[\"partnerResidentialAddress\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"partnerPhoto\" + index}\r\n                                field={values[\"partnerPhoto\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Partner \" + (index + 1) + \" Photo\"}\r\n                                error={\r\n                                  errors[\"partnerPhoto\" + index] &&\r\n                                  touched[\"partnerPhoto\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                // type=\"number\"\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                id={\"partnerMobile\" + index}\r\n                                label={\"Mobile of Partner \" + (index + 1)}\r\n                                name={\"partnerMobile\" + index}\r\n                                autoComplete={\"partnerMobile\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerMobile\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerMobile\" + index] &&\r\n                                  touched[\"partnerMobile\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerMobile\" + index] &&\r\n                                  errors[\"partnerMobile\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                required\r\n                                fullWidth\r\n                                style={{ maxWidth: \"80%\" }}\r\n                                id={\"partnerEmail\" + index}\r\n                                label={\"Email of Partner \" + (index + 1)}\r\n                                name={\"partnerEmail\" + index}\r\n                                autoComplete={\"partnerEmail\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"partnerEmail\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"partnerEmail\" + index] &&\r\n                                  touched[\"partnerEmail\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"partnerEmail\" + index] &&\r\n                                  errors[\"partnerEmail\" + index]\r\n                                }\r\n                              />\r\n                              <EmailVerification\r\n                                id={params.id}\r\n                                value={values.email}\r\n                                verificationObject={values.emailVerification}\r\n                                type={\"Partnership\"}\r\n                                subType={\"Partner\"}\r\n                              ></EmailVerification>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <Divider />\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Cancelled Cheque\"\r\n                        error={\r\n                          errors.cancelcheqphoto && touched.cancelcheqphoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"partnershipDeed\"}\r\n                        field={values.partnershipDeed}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Partnership Deed\"\r\n                        error={\r\n                          errors.partnershipDeed && touched.partnershipDeed\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Trade License Photo\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.declarationOfAuthorisedSignatory &&\r\n                      values.declarationOfAuthorisedSignatory !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"declarationOfAuthorisedSignatory\"}\r\n                          field={values.declarationOfAuthorisedSignatory}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Declaration Of Authorised Signatory\"\r\n                          error={\r\n                            errors.declarationOfAuthorisedSignatory &&\r\n                            touched.declarationOfAuthorisedSignatory\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        type=\"number\"\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"GST \" + (index + 1) + \" Document\"}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport const Partnership = withSnackbar(PartnershipComponent);\r\n","import * as Yup from \"yup\";\r\nconst panRegex = /^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/;\r\nconst aadharRegex = /^[0-9]{4}[0-9]{4}[0-9]{4}$/;\r\n\r\nfunction buildSchema() {\r\n  const shape: any = {\r\n    personName: Yup.string().required(\"Required\"),\r\n    legalbusinessName: Yup.string().required(\"Required\"),\r\n    tradeName: Yup.string().required(\"Required\"),\r\n    mobile: Yup.string().required(\"Required\"),\r\n    email: Yup.string().email(\"Invalid\").required(\"Required\"),\r\n    panphoto: Yup.string().required(\"Required\"),\r\n    soleProprietorPhoto: Yup.string().required(\"Required\"),\r\n    composition: Yup.string().required(\"Required\"),\r\n    commencementDate: Yup.date().required(\"Required\"),\r\n    hsn1: Yup.number().required(\"Required\").min(1000, \"Minimum 4 characters\"),\r\n    // for Admin\r\n    // principleplace: Yup.string().required(\"Required\"),\r\n    // pricipleelectricityphoto: Yup.string().required(\"Required\"),\r\n    // priciplerentphoto: Yup.string().required(\"Required\"),\r\n    // priciplenocphoto: Yup.string().required(\"Required\"),\r\n    // additionalplace: Yup.string().required(\"Required\"),\r\n    // additionalelectricityphoto: Yup.string().required(\"Required\"),\r\n    // additionalrentphoto: Yup.string().required(\"Required\"),\r\n    // additionalnocphoto: Yup.string().required(\"Required\"),\r\n    propfatherName: Yup.string().required(\"Required\"),\r\n    propadharphotoFront: Yup.string().required(\"Required\"),\r\n    propadharphotoBack: Yup.string().required(\"Required\"),\r\n    resident_address: Yup.string().required(\"Required\"),\r\n    photo: Yup.string().required(\"Required\"),\r\n    // branchname: Yup.string().required(\"Required\"),\r\n    accountnumber: Yup.string().required(\"Required\"),\r\n    ifsccode: Yup.string().required(\"Required\"),\r\n    cancelcheqphoto: Yup.string().required(\"Required\"),\r\n    // tradelicensenumber: Yup.string().required(\"Required\"),\r\n    // tradelicensephoto: Yup.string().required(\"Required\"),\r\n\r\n    propadharnumber: Yup.string()\r\n      .required(\"Please enter Aadhar Number\")\r\n      .matches(aadharRegex, \"Invalid Aadhar Number (78XX 45XX 97XX)\"),\r\n\r\n    pannumber: Yup.string()\r\n      .required(\"Please enter your Pan Number\")\r\n      .matches(panRegex, \"Invalid Pan Number\"),\r\n  };\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    shape[\"gstNumber\" + index] = Yup.string().when(\"numberOfOtherGST\", {\r\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\r\n      then: Yup.string().required(\"Required\"),\r\n    });\r\n    shape[\"gstAttachment\" + index] = Yup.string().when(\"numberOfOtherGST\", {\r\n      is: (numberOfOtherGST: number) => numberOfOtherGST >= index + 1,\r\n      then: Yup.string().required(\"Required\"),\r\n    });\r\n  });\r\n  return Yup.object().shape(shape);\r\n}\r\nexport const schema = buildSchema();\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../../util/util\";\r\nimport { ViewDocumentDialogComponent } from \"../ViewDocumentDialog\";\r\nimport { EmailVerification } from \"./EmailVerification\";\r\nimport { FileUpload } from \"./filepond\";\r\nimport { schema } from \"./schema/SoleProprietorSchama\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SoleProprietorComponent = (props: any) => {\r\n  const classes = useStyles();\r\n  const { params }: any = useRouteMatch();\r\n  const history = useHistory();\r\n  const [orderDetails, setOrderDetails] = React.useState<any>();\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const fetchOrderDetails = (id: any) => {\r\n    axios\r\n      .get(\"/api/get-order/get/Proprietorship/\" + id)\r\n      .then((response: any) => {\r\n        // props.enqueueSnackbar(\"Order Rejected Successfull\", successToast);\r\n        const commencementDate = response.data.commencementDate?.split;\r\n        if (commencementDate?.length > 0) {\r\n          response.data.commencementDate = response.data.commencementDate?.split(\r\n            \"T\"\r\n          )[0];\r\n        }\r\n        response.data.gstCertificatesInOtherStates.forEach(\r\n          (gst: any, index: any) => {\r\n            response.data[\"id\" + index] = gst.id;\r\n            response.data[\"gstNumber\" + index] = gst.gstNumber;\r\n            response.data[\"gstAttachment\" + index] = gst.gstAttachment;\r\n          }\r\n        );\r\n        response.data.numberOfOtherGST =\r\n          response.data.gstCertificatesInOtherStates.length;\r\n        setOrderDetails(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const approve = () => {\r\n    axios\r\n      .get(\"/api/get-order/Proprietorship/\" + params.id + \"/APPROVED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Approved Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Unable To Approve the Application\",\r\n          failureToast\r\n        );\r\n      });\r\n  };\r\n  const reject = () => {\r\n    axios\r\n      .get(\"/api/get-order/Proprietorship/\" + params.id + \"/REJECTED/\")\r\n      .then((response: any) => {\r\n        props.enqueueSnackbar(\r\n          \"Application Rejected Successfully\",\r\n          successToast\r\n        );\r\n        history.push(\"/dashboard/order-list\");\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Reject the Application\", failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      fetchOrderDetails(params.id);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const upload = (event: any, setFieldValue: any, field: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    if (event.currentTarget.files[0].size > 100000 && field === \"photo\") {\r\n      props.enqueueSnackbar(\"File Cannot be bigger than 100KB\", failureToast);\r\n      event.target.value = \"\";\r\n    } else {\r\n      axios\r\n        .post(\"/api/document/uploadFile\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((response: any) => {\r\n          setFieldValue(field, response.data);\r\n          // setTaskList(response.data);\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(reponse.message, failureToast);\r\n          event.target.value = \"\";\r\n        });\r\n    }\r\n  };\r\n  const submitForm = (values: any, save = false) => {\r\n    if (!(values.trading || values.manufacture || values.service)) {\r\n      alert(\"Please select atleast one Option in Nature of Business\");\r\n      return;\r\n    }\r\n    if (props.plan) {\r\n      values.paymentPlanDetailsId = props.plan.id;\r\n    } else if (orderDetails?.paymentPlanDetailsId) {\r\n      values.paymentPlanDetailsId = orderDetails?.paymentPlanDetailsId;\r\n    }\r\n    if (props.location) {\r\n      values.location = props.location;\r\n    } else if (orderDetails?.location) {\r\n      values.location = orderDetails?.location;\r\n    }\r\n    const gstCertificatesInOtherStates: any = [];\r\n    [...Array(values.numberOfOtherGST)].forEach((value: any, index: any) => {\r\n      gstCertificatesInOtherStates.push({\r\n        id: values[\"id\" + index] ? values[\"id\" + index] : undefined,\r\n        gstNumber: values[\"gstNumber\" + index],\r\n        gstAttachment: values[\"gstAttachment\" + index],\r\n      });\r\n    });\r\n    values.gstCertificatesInOtherStates = gstCertificatesInOtherStates;\r\n    if (save) {\r\n      axios\r\n        .post(\"/api/save-submit-proprietorship\", { ...values })\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Application Submitted Successfully\",\r\n            successToast\r\n          );\r\n          history.push(\"/dashboard/order-list\");\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Error while submitting\", failureToast);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\"/api/submit-proprietorship\", { ...values })\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\r\n            \"Application Submitted Successfully\",\r\n            successToast\r\n          );\r\n          history.push(\"/dashboard/order-list\");\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Error while submitting\", failureToast);\r\n        });\r\n    }\r\n  };\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n\r\n  let valuesOfGSTInOtherStates: any = {};\r\n  [...Array(15)].forEach((value: any, index: any) => {\r\n    valuesOfGSTInOtherStates[\"gstNumber\" + index] = \"\";\r\n    valuesOfGSTInOtherStates[\"gstAttachment\" + index] = \"\";\r\n  });\r\n  const isAdmin = sessionStorage.getItem(\"role\") === \"Admin\";\r\n  const isAgent = sessionStorage.getItem(\"role\") === \"Agent\";\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Sole Proprietor\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={\r\n                orderDetails\r\n                  ? orderDetails\r\n                  : {\r\n                      personName: \"\",\r\n                      legalbusinessName: \"\",\r\n                      tradeName: \"\",\r\n                      mobile: \"\",\r\n                      email: \"\",\r\n                      pannumber: \"\",\r\n                      panphoto: \"\",\r\n                      soleProprietorPhoto: \"\",\r\n                      composition: \"No\",\r\n                      commencementDate: date,\r\n                      principleplace: \"\",\r\n                      pricipleelectricityphoto: \"\",\r\n                      priciplerentphoto: \"\",\r\n                      priciplenocphoto: \"\",\r\n                      additionalplace: \"\",\r\n                      additionalelectricityphoto: \"\",\r\n                      additionalrentphoto: \"\",\r\n                      additionalnocphoto: \"\",\r\n                      propfatherName: \"\",\r\n                      propadharnumber: \"\",\r\n                      propadharphotoFront: \"\",\r\n                      propadharphotoBack: \"\",\r\n                      resident_address: \"\",\r\n                      photo: \"\",\r\n                      hsn1: \"\",\r\n                      hsn2: \"\",\r\n                      hsn3: \"\",\r\n                      hsn4: \"\",\r\n                      hsn5: \"\",\r\n                      // branchname: \"\",\r\n                      accountnumber: \"\",\r\n                      ifsccode: \"\",\r\n                      cancelcheqphoto: \"\",\r\n                      tradelicensenumber: \"\",\r\n                      tradelicensephoto: \"\",\r\n                      isActive: true,\r\n                      createdBy: sessionStorage.getItem(\"user\"),\r\n                      status: \"CREATED\",\r\n                      remark: \"\",\r\n                      trading: false,\r\n                      manufacture: false,\r\n                      service: false,\r\n                      numberOfOtherGST: 0,\r\n                      ...valuesOfGSTInOtherStates,\r\n                    }\r\n              }\r\n              validationSchema={schema}\r\n              onSubmit={(values: any) => {\r\n                submitForm(values);\r\n              }}\r\n            >\r\n              {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                // obj: any\r\n                <Form noValidate>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"personName\"\r\n                        label=\"Name of the person\"\r\n                        name=\"personName\"\r\n                        autoComplete=\"personName\"\r\n                        onChange={handleChange}\r\n                        value={values.personName}\r\n                        error={\r\n                          errors.personName && touched.personName ? true : false\r\n                        }\r\n                        helperText={touched.personName && errors.personName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"legalbusinessName\"\r\n                        label=\"Legal Name of Business (As mentioned in PAN)\"\r\n                        name=\"legalbusinessName\"\r\n                        autoComplete=\"legalbusinessName\"\r\n                        onChange={handleChange}\r\n                        value={values.legalbusinessName}\r\n                        error={\r\n                          errors.legalbusinessName && touched.legalbusinessName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.legalbusinessName && errors.legalbusinessName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"tradeName\"\r\n                        label=\"Trade Name\"\r\n                        name=\"tradeName\"\r\n                        autoComplete=\"tradeName\"\r\n                        onChange={handleChange}\r\n                        value={values.tradeName}\r\n                        error={\r\n                          errors.tradeName && touched.tradeName ? true : false\r\n                        }\r\n                        helperText={touched.tradeName && errors.tradeName}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"mobile\"\r\n                        label=\"Mob.No\"\r\n                        name=\"mobile\"\r\n                        autoComplete=\"mobile\"\r\n                        onChange={handleChange}\r\n                        value={values.mobile}\r\n                        error={errors.mobile && touched.mobile ? true : false}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"soleProprietorPhoto\"}\r\n                        field={values.soleProprietorPhoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Proprietor Photo\"\r\n                        error={\r\n                          errors.soleProprietorPhoto &&\r\n                          touched.soleProprietorPhoto\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={10} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        style={{ maxWidth: \"80%\" }}\r\n                        id=\"email\"\r\n                        label=\"Email ID\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        error={errors.email && touched.email ? true : false}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <EmailVerification\r\n                        id={params.id}\r\n                        value={values.email}\r\n                        verificationObject={values.emailVerification}\r\n                        type={\"Proprietorship\"}\r\n                        subType={\"Email\"}\r\n                      ></EmailVerification>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"pannumber\"\r\n                        label=\"PAN Number\"\r\n                        name=\"pannumber\"\r\n                        autoComplete=\"pannumber\"\r\n                        onChange={handleChange}\r\n                        value={values.pannumber}\r\n                        error={\r\n                          errors.pannumber && touched.pannumber ? true : false\r\n                        }\r\n                        helperText={touched.pannumber && errors.pannumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"panphoto\"}\r\n                        field={values.panphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Pan Photo\"\r\n                        error={\r\n                          errors.panphoto && touched.panphoto ? true : false\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Composition\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        required\r\n                        id=\"composition\"\r\n                        label=\"Composition\"\r\n                        name=\"composition\"\r\n                        autoComplete=\"composition\"\r\n                        value={values.composition}\r\n                        error={\r\n                          errors.composition && touched.composition\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"composition\", data?.props?.children);\r\n                        }}\r\n                      >\r\n                        <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                        <MenuItem value={\"No\"}>No</MenuItem>\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"commencementDate\"\r\n                        label=\"Date of Commencement of business\"\r\n                        name=\"commencementDate\"\r\n                        autoComplete=\"commencementDate\"\r\n                        onChange={handleChange}\r\n                        value={values.commencementDate}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.commencementDate && touched.commencementDate\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.commencementDate && errors.commencementDate\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.principleplace &&\r\n                      values.principleplace !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"principleplace\"\r\n                          label=\"Principal Place of Business address\"\r\n                          name=\"principleplace\"\r\n                          autoComplete=\"principleplace\"\r\n                          onChange={handleChange}\r\n                          value={values.principleplace}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.principleplace && touched.principleplace\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.principleplace && errors.principleplace\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"pricipleelectricityphoto\"}\r\n                          field={values.pricipleelectricityphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Electricity Bill\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplerentphoto\"}\r\n                          field={values.priciplerentphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple Rent Agreement\"\r\n                        />\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"priciplenocphoto\"}\r\n                          field={values.priciplenocphoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Priciple NOC\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        id=\"additionalplace\"\r\n                        label=\"Additional Place of Business address\"\r\n                        name=\"additionalplace\"\r\n                        autoComplete=\"additionalplace\"\r\n                        onChange={handleChange}\r\n                        value={values.additionalplace}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.additionalplace && touched.additionalplace\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.additionalplace && errors.additionalplace\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalelectricityphoto\"}\r\n                        field={values.additionalelectricityphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Electricity Bill\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalrentphoto\"}\r\n                        field={values.additionalrentphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional Rent Agreement\"\r\n                      />\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"additionalnocphoto\"}\r\n                        field={values.additionalnocphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Additional NOC\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"propfatherName\"\r\n                        label=\"Proprietor's Father name\"\r\n                        name=\"propfatherName\"\r\n                        autoComplete=\"propfatherName\"\r\n                        onChange={handleChange}\r\n                        value={values.propfatherName}\r\n                        error={\r\n                          errors.propfatherName && touched.propfatherName\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.propfatherName && errors.propfatherName\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"propadharnumber\"\r\n                        label=\"Aadhaar No. of Proprietor\"\r\n                        name=\"propadharnumber\"\r\n                        autoComplete=\"propadharnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.propadharnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.propadharnumber && touched.propadharnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.propadharnumber && errors.propadharnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Grid item xs={12}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"propadharphotoFront\"}\r\n                          field={values.propadharphotoFront}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Proprietor Adhar Front\"\r\n                          error={\r\n                            errors.propadharphotoFront &&\r\n                            touched.propadharphotoFront\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"propadharphotoBack\"}\r\n                          field={values.propadharphotoBack}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Proprietor Adhar Back\"\r\n                          error={\r\n                            errors.propadharphotoBack &&\r\n                            touched.propadharphotoBack\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"resident_address\"\r\n                        label=\"Residential Address\"\r\n                        name=\"resident_address\"\r\n                        autoComplete=\"resident_address\"\r\n                        onChange={handleChange}\r\n                        value={values.resident_address}\r\n                        error={\r\n                          errors.resident_address && touched.resident_address\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.resident_address && errors.resident_address\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"photo\"}\r\n                        field={values.photo}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Proprietor Photo\"\r\n                        error={errors.photo && touched.photo ? true : false}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        Nature of Business Activity being carried out\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"trading\", value);\r\n                            }}\r\n                            name=\"Trading\"\r\n                            checked={values.trading}\r\n                          />\r\n                        }\r\n                        label=\"Trading\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"manufacture\", value);\r\n                            }}\r\n                            name=\"Manufacture\"\r\n                            checked={values.manufacture}\r\n                          />\r\n                        }\r\n                        label=\"Manufacture\"\r\n                      />\r\n                      <br />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={(event: any, value: any) => {\r\n                              setFieldValue(\"service\", value);\r\n                            }}\r\n                            name=\"Service\"\r\n                            checked={values.service}\r\n                          />\r\n                        }\r\n                        label=\"Service\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <label>\r\n                        HSN /SAC Code of Top 5 goods/Service to be sold\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"1\"\r\n                        id=\"hsn1\"\r\n                        name=\"hsn1\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn1}\r\n                        error={errors.hsn1 && touched.hsn1 ? true : false}\r\n                        helperText={touched.hsn1 && errors.hsn1}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"2\"\r\n                        id=\"hsn2\"\r\n                        name=\"hsn2\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn2}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"3\"\r\n                        id=\"hsn3\"\r\n                        name=\"hsn3\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn3}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"4\"\r\n                        id=\"hsn4\"\r\n                        name=\"hsn4\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn4}\r\n                      ></TextField>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"5\"\r\n                        id=\"hsn5\"\r\n                        name=\"hsn5\"\r\n                        onChange={handleChange}\r\n                        value={values.hsn5}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"accountnumber\"\r\n                        label=\"Bank Account Number\"\r\n                        name=\"accountnumber\"\r\n                        autoComplete=\"accountnumber\"\r\n                        onChange={handleChange}\r\n                        value={values.accountnumber}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.accountnumber && touched.accountnumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.accountnumber && errors.accountnumber\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"ifsccode\"\r\n                        label=\"IFSC CODE\"\r\n                        name=\"ifsccode\"\r\n                        autoComplete=\"ifsccode\"\r\n                        onChange={handleChange}\r\n                        value={values.ifsccode}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.ifsccode && touched.ifsccode ? true : false\r\n                        }\r\n                        helperText={touched.ifsccode && errors.ifsccode}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FileUpload\r\n                        onaddfile={upload}\r\n                        fieldName={\"cancelcheqphoto\"}\r\n                        field={values.cancelcheqphoto}\r\n                        downloadReport={downloadReport}\r\n                        setImageName={setImageName}\r\n                        setOpen={setOpen}\r\n                        setFieldValue={setFieldValue}\r\n                        title=\"Cancel Cheque Photo\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.tradelicensenumber &&\r\n                      values.tradelicensenumber !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          id=\"tradelicensenumber\"\r\n                          label=\"Trade License number (Applicable to West Bengal reg only)\"\r\n                          name=\"tradelicensenumber\"\r\n                          autoComplete=\"tradelicensenumber\"\r\n                          onChange={handleChange}\r\n                          value={values.tradelicensenumber}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={\r\n                            errors.tradelicensenumber &&\r\n                            touched.tradelicensenumber\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tradelicensenumber &&\r\n                            errors.tradelicensenumber\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FileUpload\r\n                          onaddfile={upload}\r\n                          fieldName={\"tradelicensephoto\"}\r\n                          field={values.tradelicensephoto}\r\n                          downloadReport={downloadReport}\r\n                          setImageName={setImageName}\r\n                          setOpen={setOpen}\r\n                          setFieldValue={setFieldValue}\r\n                          title=\"Trade License Photo\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        id=\"numberOfOtherGST\"\r\n                        label=\"Number Of Other GST\"\r\n                        name=\"numberOfOtherGST\"\r\n                        autoComplete=\"numberOfOtherGST\"\r\n                        onChange={handleChange}\r\n                        value={values.numberOfOtherGST}\r\n                        InputProps={{ inputProps: { min: 0, max: 10 } }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        error={\r\n                          errors.numberOfOtherGST && touched.numberOfOtherGST\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          touched.numberOfOtherGST && errors.numberOfOtherGST\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {[...Array(values.numberOfOtherGST)].map(\r\n                    (num: any, index: any) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <TextField\r\n                                margin=\"dense\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                id={\"gstNumber\" + index}\r\n                                label={\"GST Number \" + (index + 1)}\r\n                                name={\"gstNumber\" + index}\r\n                                autoComplete={\"gstNumber\" + index}\r\n                                onChange={handleChange}\r\n                                value={values[\"gstNumber\" + index]}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                error={\r\n                                  errors[\"gstNumber\" + index] &&\r\n                                  touched[\"gstNumber\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                helperText={\r\n                                  touched[\"gstNumber\" + index] &&\r\n                                  errors[\"gstNumber\" + index]\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                              <FileUpload\r\n                                onaddfile={upload}\r\n                                fieldName={\"gstAttachment\" + index}\r\n                                field={values[\"gstAttachment\" + index]}\r\n                                downloadReport={downloadReport}\r\n                                setImageName={setImageName}\r\n                                setOpen={setOpen}\r\n                                setFieldValue={setFieldValue}\r\n                                title={\"Gst Attachment \" + (index + 1)}\r\n                                error={\r\n                                  errors[\"gstAttachment\" + index] &&\r\n                                  touched[\"gstAttachment\" + index]\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                  {(isAdmin ||\r\n                    isAgent ||\r\n                    (values.remark && values.remark !== \"\")) && (\r\n                    <Grid container spacing={4}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          margin=\"dense\"\r\n                          size=\"small\"\r\n                          // disabled={sessionStorage.getItem(\"role\") === \"Customer\"}\r\n                          fullWidth\r\n                          id=\"remark\"\r\n                          label=\"Remark\"\r\n                          name=\"remark\"\r\n                          autoComplete=\"remark\"\r\n                          onChange={handleChange}\r\n                          value={values.remark}\r\n                          InputLabelProps={{ shrink: true }}\r\n                          error={errors.remark && touched.remark ? true : false}\r\n                          helperText={touched.remark && errors.remark}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2} justifyContent=\"center\">\r\n                    {sessionStorage.getItem(\"role\") === \"Customer\" &&\r\n                      (orderDetails?.status === \"DRAFT\" ||\r\n                        params.id === undefined) && (\r\n                        <Grid item xs={6}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"10px\" }}\r\n                            // className={classes.submit}\r\n                            onClick={() => {\r\n                              submitForm(values, true);\r\n                            }}\r\n                          >\r\n                            Save as Draft\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                        // className={classes.submit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" &&\r\n                    (orderDetails?.status === \"CREATED\" ||\r\n                      orderDetails?.status === \"PAID\") && (\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            approve();\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          type=\"button\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            reject();\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nexport const SoleProprietor = withSnackbar(SoleProprietorComponent);\r\n","import {\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Company } from \"./Company\";\r\nimport { LLP } from \"./LLP\";\r\nimport { Partnership } from \"./Partnership\";\r\nimport { SoleProprietor } from \"./SoleProprietor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(700 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport const ApplyForGstComponent = () => {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState<any>(\"\");\r\n  const [planList, setPlanList] = React.useState<any>([]);\r\n  const [plan, setPlan] = React.useState<any>(\"\");\r\n  const [planLocationList, setPlanLocationList] = React.useState<any>([]);\r\n  const [planLocation, setPlanLocation] = React.useState<any>(\"\");\r\n  const [location, setLocation] = React.useState<any>(\"\");\r\n\r\n  const [dropdown, setDropdown] = React.useState(\"\");\r\n  const fetchPlanList = () => {\r\n    axios\r\n      .get(\"/api/plan-list\")\r\n      .then((response: any) => {\r\n        setPlanList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const fetchStateList = () => {\r\n    axios\r\n      .get(\"/api/state-list\")\r\n      .then((response: any) => {\r\n        setPlanLocationList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        // props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchPlanList();\r\n    fetchStateList();\r\n    const name = sessionStorage.getItem(\"user\");\r\n    setName(name);\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Apply For GST\r\n          </Typography>\r\n          <Grid container spacing={5}>\r\n            <Grid xs={6} item>\r\n              <TextField\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name of Business\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                value={name}\r\n                disabled\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Constitution of Business\r\n                </InputLabel>\r\n                <Select\r\n                  margin=\"dense\"\r\n                  style={{ marginTop: \"16px\" }}\r\n                  id=\"demo-simple-select-helper\"\r\n                  onChange={(event: any, data: any) => {\r\n                    setDropdown(data?.props?.children);\r\n                  }}\r\n                >\r\n                  <MenuItem value={\"Proprietorship\"}>Proprietorship</MenuItem>\r\n                  <MenuItem value={\"Partnership\"}>Partnership</MenuItem>\r\n                  <MenuItem value={\"LLP\"}>LLP</MenuItem>\r\n                  <MenuItem value={\"Company\"}>Company</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={5}>\r\n            <Grid xs={6} item>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Select a plan\r\n                </InputLabel>\r\n                <Select\r\n                  margin=\"dense\"\r\n                  style={{ marginTop: \"16px\" }}\r\n                  id=\"demo-simple-select-helper\"\r\n                  onChange={(event: any, data: any) => {\r\n                    // setPlanLocationList(data?.props?.value?.payplanLocation);\r\n                    setPlan(data?.props?.value);\r\n                  }}\r\n                >\r\n                  {planList.map((plan: any) => {\r\n                    return (\r\n                      <MenuItem value={plan} key={plan.id}>\r\n                        {plan.payplanname}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Select a Location\r\n                </InputLabel>\r\n                <Select\r\n                  margin=\"dense\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  onChange={(event: any, data: any) => {\r\n                    setPlanLocation(data?.props?.value);\r\n                    setLocation(data.props.children);\r\n                  }}\r\n                >\r\n                  {planLocationList.map((plan: any) => {\r\n                    return <MenuItem value={plan}>{plan.name}</MenuItem>;\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid container spacing={5} style={{ padding: \"26px\" }}>\r\n              <Grid xs={12} item>\r\n                <b>Remarks : </b>\r\n                {plan.remarks}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        {name !== \"\" &&\r\n          plan !== \"\" &&\r\n          planLocation !== \"\" &&\r\n          dropdown === \"Proprietorship\" && (\r\n            <SoleProprietor plan={plan} location={location} />\r\n          )}\r\n        {name !== \"\" &&\r\n          plan !== \"\" &&\r\n          planLocation !== \"\" &&\r\n          dropdown === \"Partnership\" && (\r\n            <Partnership plan={plan} location={location} />\r\n          )}\r\n        {name !== \"\" &&\r\n          plan !== \"\" &&\r\n          planLocation !== \"\" &&\r\n          dropdown === \"LLP\" && <LLP plan={plan} location={location} />}\r\n        {name !== \"\" &&\r\n          plan !== \"\" &&\r\n          planLocation !== \"\" &&\r\n          dropdown === \"Company\" && (\r\n            <Company plan={plan} location={location} />\r\n          )}\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  IconButton,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { GetApp, Search, Visibility } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { failureToast, successToast } from \"../util/util\";\r\nimport Title from \"./Title\";\r\nimport { ViewDocumentDialogComponent } from \"./ViewDocumentDialog\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport XlsxPopulate from \"xlsx-populate\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nfunction OrderListComponent(props: any) {\r\n  const [orderList, setOrderList] = React.useState<any>([]);\r\n  const [orderType, setOrderType] = React.useState(\"All\");\r\n  const history = useHistory();\r\n  const fetchOrderList = () => {\r\n    let url = \"\";\r\n    if (sessionStorage.getItem(\"role\") === \"Customer\") {\r\n      url =\r\n        \"/api/get-order/\" + orderType + \"/\" + sessionStorage.getItem(\"user\");\r\n    } else if (sessionStorage.getItem(\"role\") === \"Agent\") {\r\n      url =\r\n        \"/api/get-all-order/\" +\r\n        orderType +\r\n        \"/\" +\r\n        sessionStorage.getItem(\"user\");\r\n    } else {\r\n      url = \"/api/get-all-order/\" + orderType;\r\n    }\r\n    let params = {};\r\n    if (searchText && searchText !== \"\") {\r\n      params = {\r\n        params: {\r\n          searchText: `%${searchText}%`,\r\n        },\r\n      };\r\n    }\r\n    axios\r\n      .get(url, params)\r\n      .then((response: any) => {\r\n        setOrderList(response.data);\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(reponse.error, failureToast);\r\n      });\r\n  };\r\n  const view = (row: any) => {\r\n    if (row.proprietorshipid) {\r\n      history.push(\"/dashboard/sole-proprietor/\" + row.proprietorshipid);\r\n    } else if (row.partnershipid) {\r\n      history.push(\"/dashboard/partnership/\" + row.partnershipid);\r\n    } else if (row.llpid) {\r\n      history.push(\"/dashboard/llp/\" + row.llpid);\r\n    } else if (row.companydetailsid) {\r\n      history.push(\"/dashboard/company/\" + row.companydetailsid);\r\n    }\r\n  };\r\n  function loadScript(src: any) {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async function displayRazorpay(row: any) {\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n    const razor = JSON.parse(row.razorpayOrder);\r\n    const options = {\r\n      key: \"rzp_test_4zyGtu09Yf3TwL\", // Enter the Key ID generated from the Dashboard\r\n      amount: razor.amount,\r\n      currency: razor.currency,\r\n      name: \"spiraea\",\r\n      description: \"Test Transaction\",\r\n      image: \"/spiraea-logo-bw-web-1.png\",\r\n      order_id: razor.id,\r\n      handler: async function (response: any) {\r\n        axios\r\n          .get(\r\n            \"/api/get-order/\" +\r\n              orderTypeText(row) +\r\n              \"/\" +\r\n              orderTypeId(row) +\r\n              \"/PAID/\"\r\n          )\r\n          .then((response: any) => {\r\n            props.enqueueSnackbar(\"Order Successfully\", successToast);\r\n            fetchOrderList();\r\n          })\r\n          .catch((reponse: any) => {\r\n            props.enqueueSnackbar(\"Order Was not paid\", failureToast);\r\n          });\r\n        console.log(response);\r\n      },\r\n      theme: {\r\n        color: \"#61dafb\",\r\n      },\r\n    };\r\n    const w: any = window;\r\n    const paymentObject = new w.Razorpay(options);\r\n    paymentObject.open();\r\n  }\r\n  useEffect(() => {\r\n    fetchOrderList();\r\n  }, [orderType]); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const upload = (event: any, row: any) => {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", event.currentTarget.files[0]);\r\n    axios\r\n      .post(\"/api/document/uploadFile\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response: any) => {\r\n        const documentUrl = response.data;\r\n        axios\r\n          .get(\r\n            \"/api/get-order/gst/\" +\r\n              orderTypeText(row) +\r\n              \"/\" +\r\n              orderTypeId(row) +\r\n              \"/\" +\r\n              documentUrl\r\n          )\r\n          .then((response: any) => {\r\n            props.enqueueSnackbar(\r\n              \"Document Uploaded Successfully\",\r\n              successToast\r\n            );\r\n          })\r\n          .catch((reponse: any) => {\r\n            props.enqueueSnackbar(reponse.message, failureToast);\r\n            event.target.value = \"\";\r\n          });\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Failed to upload the Document\", failureToast);\r\n      });\r\n  };\r\n  const downloadReport = (filename: any) => {\r\n    axios\r\n      .get(\"/api/document/downloadFile/\" + filename, { responseType: \"blob\" })\r\n      .then((response: any) => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([response.data]);\r\n        element.target = \"_blank\";\r\n        element.download = filename;\r\n        element.href = URL.createObjectURL(file);\r\n        element.click();\r\n        element.remove();\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Unable To Download\", failureToast);\r\n      });\r\n  };\r\n  const role = sessionStorage.getItem(\"role\");\r\n  const [imageName, setImageName] = React.useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (imageName: any) => {\r\n    setOpen(true);\r\n    setImageName(imageName);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setImageName(\"\");\r\n  };\r\n  const orderTypeText = (row: any) => {\r\n    if (row.proprietorshipid) {\r\n      return \"Proprietorship\";\r\n    } else if (row.partnershipid) {\r\n      return \"Partnership\";\r\n    } else if (row.llpid) {\r\n      return \"LLP\";\r\n    } else if (row.companydetailsid) {\r\n      return \"Company\";\r\n    }\r\n  };\r\n  const orderTypeId = (row: any) => {\r\n    if (row.proprietorshipid) {\r\n      return row.proprietorshipid;\r\n    } else if (row.partnershipid) {\r\n      return row.partnershipid;\r\n    } else if (row.llpid) {\r\n      return row.llpid;\r\n    } else if (row.companydetailsid) {\r\n      return row.companydetailsid;\r\n    }\r\n  };\r\n  const search = () => {\r\n    fetchOrderList();\r\n    // let formData = new FormData();\r\n    // formData.append(\"file\", event.currentTarget.files[0]);\r\n    // axios\r\n    //   .post(\"/api/document/uploadFile\", formData, {\r\n    //     headers: {\r\n    //       \"Content-Type\": \"multipart/form-data\",\r\n    //     },\r\n    //   })\r\n    //   .then((response: any) => {\r\n    //     const documentUrl = response.data;\r\n    //     axios\r\n    //       .get(\r\n    //         \"/api/get-order/gst/\" +\r\n    //           orderTypeText(row) +\r\n    //           \"/\" +\r\n    //           orderTypeId(row) +\r\n    //           \"/\" +\r\n    //           documentUrl\r\n    //       )\r\n    //       .then((response: any) => {\r\n    //         props.enqueueSnackbar(\r\n    //           \"Document Uploaded Successfully\",\r\n    //           successToast\r\n    //         );\r\n    //       })\r\n    //       .catch((reponse: any) => {\r\n    //         props.enqueueSnackbar(reponse.message, failureToast);\r\n    //         event.target.value = \"\";\r\n    //       });\r\n    //   })\r\n    //   .catch((reponse: any) => {\r\n    //     props.enqueueSnackbar(\"Failed to upload the Document\", failureToast);\r\n    //   });\r\n  };\r\n  // let isP0: any = sessionStorage.getItem(\"type\");\r\n  // isP0 = isP0 === \"P0\";\r\n  // const getOrderAmount = (row: any) => {\r\n  //   try {\r\n  //     if (row.razorpayOrder) {\r\n  //       const json: any = JSON.parse(row.razorpayOrder);\r\n  //       row.amount = json?.amount;\r\n  //       return json?.amount / 100;\r\n  //     }\r\n  //   } catch (e: any) {}\r\n  // };\r\n  // const saveAmount = (row: any) => {\r\n  //   let url = \"\";\r\n  //   url =\r\n  //     \"/api/get-order/update-order-amount/\" +\r\n  //     orderTypeText(row) +\r\n  //     \"/\" +\r\n  //     orderTypeId(row) +\r\n  //     \"/\" +\r\n  //     row.amount;\r\n  //   axios\r\n  //     .get(url)\r\n  //     .then((response: any) => {\r\n  //       fetchOrderList();\r\n  //     })\r\n  //     .catch((reponse: any) => {\r\n  //       props.enqueueSnackbar(\"Failed to Update the order\", failureToast);\r\n  //     });\r\n  // };\r\n  const [searchText, setSearchText] = React.useState<any>();\r\n\r\n  const handleChange = () => (event: any) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n  const download = () => {\r\n    saveAsExcel();\r\n  };\r\n  function getSheetData(data: any, header: any) {\r\n    // var fields = Object.keys(data[0]);\r\n    var sheetData = data.map(function (row: any) {\r\n      return header.map(function (fieldName: any) {\r\n        return row[fieldName] ? row[fieldName] : \"\";\r\n      });\r\n    });\r\n    sheetData.unshift(header);\r\n    debugger;\r\n    return sheetData;\r\n  }\r\n  async function saveAsExcel() {\r\n    console.log(orderList);\r\n    let header = [\r\n      \"proprietorshipid\",\r\n      \"partnershipid\",\r\n      \"companydetailsid\",\r\n      \"llpid\",\r\n      \"personName\",\r\n      \"legalbusinessName\",\r\n      \"tradeName\",\r\n      \"mobile\",\r\n      \"email\",\r\n      // \"emailVerification\",\r\n      \"pannumber\",\r\n      \"panphoto\",\r\n      \"soleProprietorPhoto\",\r\n      \"composition\",\r\n      \"commencementDate\",\r\n      \"principleplace\",\r\n      \"pricipleelectricityphoto\",\r\n      \"priciplerentphoto\",\r\n      \"priciplenocphoto\",\r\n      \"additionalplace\",\r\n      \"additionalelectricityphoto\",\r\n      \"additionalrentphoto\",\r\n      \"additionalnocphoto\",\r\n      \"propfatherName\",\r\n      \"propadharnumber\",\r\n      \"propadharphotoFront\",\r\n      \"propadharphotoBack\",\r\n      \"resident_address\",\r\n      \"photo\",\r\n      \"hsn1\",\r\n      \"hsn2\",\r\n      \"hsn3\",\r\n      \"hsn4\",\r\n      \"hsn5\",\r\n      \"accountnumber\",\r\n      \"ifsccode\",\r\n      \"cancelcheqphoto\",\r\n      \"tradelicensenumber\",\r\n      \"tradelicensephoto\",\r\n      \"createdOn\",\r\n      \"createdBy\",\r\n      \"modifiedOn\",\r\n      \"modifiedBy\",\r\n      \"status\",\r\n      \"gstDocument\",\r\n      \"remark\",\r\n      \"trading\",\r\n      \"manufacture\",\r\n      \"service\",\r\n      \"razorpayOrder\",\r\n      // \"gstCertificatesInOtherStates\",\r\n      \"paymentPlanDetailsId\",\r\n      \"location\",\r\n      \"amount\",\r\n      \"active\",\r\n      \"firmName\",\r\n      // \"partnerList\",\r\n      \"certificateOfIncorportation\",\r\n      \"partnershipDeed\",\r\n      \"declarationOfAuthorisedSignatory\",\r\n      // \"directorList\",\r\n    ];\r\n\r\n    XlsxPopulate.fromBlankAsync().then(async (workbook: any) => {\r\n      const sheet1 = workbook.sheet(0);\r\n      const sheetData = getSheetData(orderList, header);\r\n      // const totalColumns = sheetData[0].length;\r\n\r\n      sheet1.cell(\"A1\").value(sheetData);\r\n      // const range = sheet1.usedRange();\r\n      // const endColumn = String.fromCharCode(64 + totalColumns);\r\n      sheet1.row(1).style(\"bold\", true);\r\n      // sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"BFBFBF\");\r\n      // range.style(\"border\", true);\r\n      return workbook.outputAsync().then((res: any) => {\r\n        saveAs(res, \"file.xlsx\");\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ViewDocumentDialogComponent\r\n        name={imageName}\r\n        open={open}\r\n        handleClickOpen={handleClickOpen}\r\n        handleClose={handleClose}\r\n      />\r\n      <Title>Application List</Title>\r\n      <Select\r\n        style={{ marginLeft: \"30px\", marginBottom: \"9px\" }}\r\n        defaultValue=\"All\"\r\n        onChange={(event: any, data: any) => {\r\n          setSearchText(\"\");\r\n          // setSelectedSample(data.props.children);\r\n          setOrderType(data?.props?.value);\r\n        }}\r\n      >\r\n        <MenuItem value={\"All\"}>All</MenuItem>\r\n        <MenuItem value={\"Proprietorship\"}>Proprietorship</MenuItem>\r\n        <MenuItem value={\"Partnership\"}>Partnership</MenuItem>\r\n        <MenuItem value={\"LLP\"}>LLP</MenuItem>\r\n        <MenuItem value={\"Company\"}>Company</MenuItem>\r\n      </Select>\r\n      {orderType !== \"All\" && (\r\n        <div>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            style={{ marginLeft: \"10vw\" }}\r\n            placeholder=\"Search\"\r\n            value={searchText}\r\n            onChange={handleChange()}\r\n            endAdornment={\r\n              <IconButton style={{ padding: \"0\" }}>\r\n                <Search\r\n                  onClick={() => {\r\n                    search();\r\n                  }}\r\n                ></Search>\r\n              </IconButton>\r\n            }\r\n          />\r\n          {/* <OutlinedInput  />\r\n     \r\n            aria-label=\"search\"\r\n            style={{ marginTop: \"10px\" }}\r\n          ></IconButton> */}\r\n        </div>\r\n      )}\r\n      <IconButton onClick={download}>\r\n        <GetAppIcon></GetAppIcon>\r\n      </IconButton>\r\n      {orderType === \"All\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Order Type</TableCell>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Trade Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={orderTypeId(row)}>\r\n                <TableCell>{orderTypeText(row)}</TableCell>\r\n                <TableCell>{orderTypeId(row)}</TableCell>\r\n                <TableCell>{row.tradeName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"60%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <>\r\n                      <GetApp\r\n                        style={{ marginTop: \"10px\" }}\r\n                        onClick={() => {\r\n                          downloadReport(row.gstDocument);\r\n                        }}\r\n                      />\r\n                      <Visibility\r\n                        onClick={() => {\r\n                          setImageName(row.gstDocument);\r\n                          setOpen(true);\r\n                        }}\r\n                        style={{ marginTop: \"10px\" }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"Proprietorship\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ProprietorShip ID</TableCell>\r\n              <TableCell>Trade Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.proprietorshipid}>\r\n                <TableCell>{row.proprietorshipid}</TableCell>\r\n                <TableCell>{row.tradeName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"Partnership\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Partnership ID</TableCell>\r\n              <TableCell>Firm Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.partnershipid}>\r\n                <TableCell>{row.partnershipid}</TableCell>\r\n                <TableCell>{row.firmName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"LLP\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>LLP ID</TableCell>\r\n              <TableCell>Firm Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.llpid}>\r\n                <TableCell>{row.llpid}</TableCell>\r\n                <TableCell>{row.firmName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n      {orderType === \"Company\" && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Company ID</TableCell>\r\n              <TableCell>Firm Name</TableCell>\r\n              <TableCell>Legal Business Name</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              {/* {role === \"Admin\" && <TableCell>Amount</TableCell>} */}\r\n              <TableCell>GST Doc</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map((row: any) => (\r\n              <TableRow key={row.companydetailsid}>\r\n                <TableCell>{row.companydetailsid}</TableCell>\r\n                <TableCell>{row.firmName}</TableCell>\r\n                <TableCell>{row.legalbusinessName}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                {/* {role === \"Admin\" && (\r\n                  <TableCell>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      defaultValue={getOrderAmount(row)}\r\n                      fullWidth\r\n                      label=\"Amount\"\r\n                      onChange={(event: any) =>\r\n                        (row.amount = event.currentTarget.value)\r\n                      }\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n\r\n                    <Tooltip title=\"Update Amount\">\r\n                      <Publish\r\n                        onClick={(event: any) => {\r\n                          saveAmount(row);\r\n                        }}\r\n                        style={{ float: \"right\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                )} */}\r\n                <TableCell>\r\n                  {(role === \"Admin\" || role === \"Agent\") && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      type=\"file\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Attach GST Doc\"\r\n                      onChange={(file: any) => upload(file, row)}\r\n                      // value={values.pricipleelectricityphoto}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  )}\r\n                  {row.gstDocument && row.gstDocument !== \"\" && (\r\n                    <Visibility\r\n                      onClick={() => {\r\n                        setImageName(row.gstDocument);\r\n                        setOpen(true);\r\n                      }}\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {sessionStorage.getItem(\"role\") !== \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {sessionStorage.getItem(\"role\") === \"Customer\" && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          view(row);\r\n                        }}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {row.status === \"CREATED\" && (\r\n                        <Button\r\n                          style={{ marginLeft: \"10px\" }}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          onClick={() => displayRazorpay(row)}\r\n                        >\r\n                          Pay\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport const OrderList = withSnackbar(OrderListComponent);\r\n","import React from \"react\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Paper } from \"@material-ui/core\";\n\nexport const CustomizedTimeline = () => {\n  return (\n    <React.Fragment>\n      <Timeline align=\"left\">\n        <Paper style={{ padding: \"10px\" }}>\n          To Register New Candidate, Apply Six easy steps\n        </Paper>\n        <TimelineItem>\n          <TimelineSeparator>\n            {/* <TimelineDot /> */}\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography> </Typography>\n          </TimelineContent>\n        </TimelineItem>\n\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 1</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Registration</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 2</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Login</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 3</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Fill Application</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 4</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Upload Documents</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 5</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Pay Fees</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">Step 6</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Processing by Spiraea</Typography>\n          </TimelineContent>\n        </TimelineItem>\n      </Timeline>\n    </React.Fragment>\n  );\n};\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Link,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { failureToast, successToast } from \"../util/util\";\r\nimport { StickyFooter } from \"./StickyFooter\";\r\nimport { CustomizedTimeline } from \"./TimeLine\";\r\nconst SignInSchema = Yup.object().shape({\r\n  loginUserName: Yup.string().max(10, \"Too Long!\").required(\"Required\"),\r\n  loginPassword: Yup.string().max(10, \"Too Long!\").required(\"Required\"),\r\n  role: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function SignInComponent(props: any) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { params }: any = useRouteMatch();\r\n\r\n  const sessionActive = () => {};\r\n  const verifyEmailFlow = () => {\r\n    const id = params.id;\r\n    if (id) {\r\n      axios\r\n        .get(`/api/verify-email/${id}`)\r\n        .then((response: any) => {\r\n          props.enqueueSnackbar(\"Email verified successfully\", successToast);\r\n          history.push(\"/\");\r\n          // sessionStorage.setItem(\"role\", values.role);\r\n          // sessionStorage.setItem(\"user\", values.loginUserName);\r\n\r\n          // sessionStorage.setItem(\"type\", response.data.vendorType);\r\n          // if (values.role === \"Customer\") {\r\n          //   history.push(\"/dashboard/order-list\");\r\n          // } else if (values.role === \"Agent\") {\r\n          //   history.push(\"/dashboard/order-list\");\r\n          // } else if (values.role === \"Admin\") {\r\n          //   history.push(\"/dashboard/home\");\r\n          // }\r\n        })\r\n        .catch((reponse: any) => {\r\n          props.enqueueSnackbar(\"Unable to verify.\", failureToast);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    sessionActive();\r\n    verifyEmailFlow();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const signInSubmit = (values: any) => {\r\n    // navigateToDashboard();\r\n    axios\r\n      // .post(\"/api/login\", { ...values })\r\n      .post(\"/api/login\", { ...values })\r\n\r\n      .then((response: any) => {\r\n        sessionStorage.setItem(\"role\", values.role);\r\n        sessionStorage.setItem(\"user\", values.loginUserName);\r\n        sessionStorage.setItem(\"type\", response.data.vendorType);\r\n        if (values.role === \"Customer\") {\r\n          history.push(\"/dashboard/order-list\");\r\n        } else if (values.role === \"Agent\") {\r\n          history.push(\"/dashboard/order-list\");\r\n        } else if (values.role === \"Admin\") {\r\n          history.push(\"/dashboard/home\");\r\n        }\r\n      })\r\n      .catch((reponse: any) => {\r\n        props.enqueueSnackbar(\"Invalid Credentials\", failureToast);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Container component=\"main\">\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid item xs={12} sm={6}>\r\n            <div className={classes.paper}>\r\n              <img\r\n                alt=\"\"\r\n                src=\"/spiraea-logo-bw-web-1.png\"\r\n                style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\r\n              />\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Formik\r\n                initialValues={{\r\n                  loginUserName: \"\",\r\n                  loginPassword: \"\",\r\n                  role: \"\",\r\n                }}\r\n                validationSchema={SignInSchema}\r\n                onSubmit={(values: any) => {\r\n                  signInSubmit(values);\r\n                }}\r\n              >\r\n                {({ errors, touched, values, handleChange, setFieldValue }) => (\r\n                  // obj: any\r\n                  <Form className={classes.form} noValidate>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"loginUserName\"\r\n                      label=\"Username\"\r\n                      name=\"loginUserName\"\r\n                      autoComplete=\"loginUserName\"\r\n                      autoFocus\r\n                      onChange={handleChange}\r\n                      value={values.loginUserName}\r\n                      error={\r\n                        errors.loginUserName && touched.loginUserName\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      helperText={touched.loginUserName && errors.loginUserName}\r\n                    />\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      type=\"password\"\r\n                      name=\"loginPassword\"\r\n                      label=\"Password\"\r\n                      id=\"loginPassword\"\r\n                      autoComplete=\"loginPassword\"\r\n                      onChange={handleChange}\r\n                      value={values.loginPassword}\r\n                      error={\r\n                        errors.loginPassword && touched.loginPassword\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      helperText={touched.loginPassword && errors.loginPassword}\r\n                    />\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Role\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ marginTop: \"16px\" }}\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={values.role}\r\n                        error={errors.role && touched.role ? true : false}\r\n                        onChange={(event: any, data: any) => {\r\n                          setFieldValue(\"role\", data?.props?.children);\r\n                        }}\r\n                        // value={age}\r\n                      >\r\n                        <MenuItem value={\"Customer\"}>Customer</MenuItem>\r\n                        <MenuItem value={\"Agent\"}>Agent</MenuItem>\r\n                        <MenuItem value={\"Admin\"}>Admin</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                      <Grid item xs>\r\n                        <Link href=\"#/forgot-password\" variant=\"body2\">\r\n                          Forgot Password?\r\n                        </Link>\r\n                        {/* TODO feature */}\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link href=\"/#/signUp\" variant=\"body2\">\r\n                          {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <div className={classes.paper}>\r\n              <CustomizedTimeline></CustomizedTimeline>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <StickyFooter />\r\n    </>\r\n  );\r\n}\r\n// export const ShareRoomDetail = connect(\r\n//   mapStateToProps,\r\n//   null\r\n// )(ShareRoomDetailComponent);\r\nexport const SignIn = withSnackbar(SignInComponent);\r\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { Form, Formik } from \"formik\";\nimport { withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { failureToast, successToast } from \"../util/util\";\nimport { StickyFooter } from \"./StickyFooter\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignupSchema = Yup.object().shape({\n  businessName: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  vendorType: Yup.string().required(\"Required\"),\n  userEmail: Yup.string().email(\"Invalid userEmail\").required(\"Required\"),\n  mobile: Yup.string().required(\"Required\"),\n});\nexport function SignUpComponent(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n  function navigateToLogin() {\n    history.push(\"/signin\");\n  }\n  const signUpSubmit = (values: any) => {\n    axios\n      .post(\"/api/createRegistration\", values)\n      .then((response: any) => {\n        console.log(response);\n        props.enqueueSnackbar(\"User Sign Up Complete\", successToast);\n        navigateToLogin();\n      })\n      .catch((reponse: any) => {\n        props.enqueueSnackbar(reponse.message, failureToast);\n      });\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <img\n            alt=\"\"\n            src=\"/spiraea-logo-bw-web-1.png\"\n            style={{ height: \"50px\", backgroundColor: \"#3F51B5\" }}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Formik\n            initialValues={{\n              businessName: \"\",\n              vendorType: \"P0\",\n              userEmail: \"\",\n              mobile: \"\",\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values: any) => {\n              signUpSubmit(values);\n            }}\n          >\n            {({ errors, touched, values, handleChange, setFieldValue }) => (\n              // obj: any\n              <Form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      autoComplete=\"businessName\"\n                      required\n                      name=\"businessName\"\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"businessName\"\n                      label=\"Business Name\"\n                      autoFocus\n                      onChange={handleChange}\n                      value={values.businessName}\n                      error={\n                        errors.businessName && touched.businessName\n                          ? true\n                          : false\n                      }\n                      helperText={touched.businessName && errors.businessName}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Vendor Type\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        fullWidth\n                        id=\"demo-simple-select-helper\"\n                        value={values.vendorType}\n                        error={\n                          errors.vendorType && touched.vendorType ? true : false\n                        }\n                        onChange={(event: any, data: any) => {\n                          setFieldValue(\"vendorType\", data?.props?.children);\n                        }}\n                      >\n                        <MenuItem value={\"P0\"}>P0</MenuItem>\n                        <MenuItem value={\"P1\"}>P1</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"userEmail\"\n                      label=\"Email Address\"\n                      name=\"userEmail\"\n                      autoComplete=\"userEmail\"\n                      onChange={handleChange}\n                      value={values.userEmail}\n                      error={\n                        errors.userEmail && touched.userEmail ? true : false\n                      }\n                      helperText={touched.userEmail && errors.userEmail}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      type=\"number\"\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"mobile\"\n                      label=\"Mobile Number\"\n                      name=\"mobile\"\n                      onChange={handleChange}\n                      value={values.mobile}\n                      error={errors.mobile && touched.mobile ? true : false}\n                      helperText={touched.mobile && errors.mobile}\n                    />\n                  </Grid>\n                  {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via userEmail.\"\n              />\n            </Grid> */}\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign Up\n                </Button>\n                <Grid container justifyContent=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"/#/signIn\" variant=\"body2\">\n                      Already have an account? Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </Container>\n      <StickyFooter />\n    </>\n  );\n}\nexport const SignUp = withSnackbar(SignUpComponent);\n","import AllOutIcon from \"@material-ui/icons/AllOut\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport QueueIcon from \"@material-ui/icons/Queue\";\r\nimport React from \"react\";\r\nimport { AdminDashboard } from \"../component/admin/AdminDashboard\";\r\nimport { AdminList } from \"../component/admin/AdminList\";\r\nimport { AgentList } from \"../component/admin/AgentList\";\r\nimport { PlanList } from \"../component/admin/PlanList\";\r\nimport { UserList } from \"../component/admin/UserList\";\r\nimport Dashboard from \"../component/Dashboard\";\r\nimport { ForgotPassword } from \"../component/ForgotPassword\";\r\nimport { ApplyForGstComponent } from \"../component/forms/ApplyForGST\";\r\nimport { Company } from \"../component/forms/Company\";\r\nimport { LLP } from \"../component/forms/LLP\";\r\nimport { Partnership } from \"../component/forms/Partnership\";\r\nimport { SoleProprietor } from \"../component/forms/SoleProprietor\";\r\nimport { OrderList } from \"../component/OrderList\";\r\nimport { SignIn } from \"../component/SignIn\";\r\nimport { SignUp } from \"../component/SignUp\";\r\nexport const dashboardRoutes = [\r\n  {\r\n    path: \"/signin\",\r\n    name: \"Sign In\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignIn></SignIn>,\r\n    layout: \"/signin\",\r\n  },\r\n  {\r\n    path: \"/SignUp\",\r\n    name: \"SignUp\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignUp></SignUp>,\r\n    layout: \"/signup\",\r\n  },\r\n  {\r\n    path: \"/forgot-password\",\r\n    name: \"ForgotPassword\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <ForgotPassword></ForgotPassword>,\r\n    layout: \"/forgot-password\",\r\n  },\r\n\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <Dashboard></Dashboard>,\r\n    layout: \"/dashboard\",\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    name: \"admin\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <Dashboard></Dashboard>,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/verify-email/:id\",\r\n    component: <SignIn></SignIn>,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Sign In\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignIn></SignIn>,\r\n    layout: \"/\",\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Sign In\",\r\n    icon: <DashboardIcon></DashboardIcon>,\r\n    component: <SignIn></SignIn>,\r\n    layout: \"/\",\r\n  },\r\n\r\n\r\n  \r\n];\r\nexport const secondaryRoutes = [\r\n  {\r\n    path: \"/dashboard/home\",\r\n    name: \"/dashboard/home\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <AdminDashboard></AdminDashboard>,\r\n    layout: \"/dashboard/home\",\r\n  },\r\n  {\r\n    path: \"/dashboard/order-list\",\r\n    name: \"Application List\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <OrderList></OrderList>,\r\n    layout: \"/dashboard/order-list\",\r\n  },\r\n  {\r\n    path: \"/dashboard/apply-for-gst\",\r\n    name: \"/dashboard/apply-for-gst\",\r\n    icon: <ApplyForGstComponent></ApplyForGstComponent>,\r\n    component: <ApplyForGstComponent></ApplyForGstComponent>,\r\n    layout: \"/apply-for-gst\",\r\n  },\r\n\r\n  {\r\n    path: \"/dashboard/sole-proprietor/:id\",\r\n    component: <SoleProprietor></SoleProprietor>,\r\n  },\r\n  {\r\n    path: \"/dashboard/partnership/:id\",\r\n    component: <Partnership></Partnership>,\r\n  },\r\n  {\r\n    path: \"/dashboard/llp/:id\",\r\n    component: <LLP></LLP>,\r\n  },\r\n  {\r\n    path: \"/dashboard/company/:id\",\r\n    component: <Company></Company>,\r\n  },\r\n  {\r\n    path: \"/dashboard/userlist\",\r\n    name: \"/dashboard/userlist\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <UserList></UserList>,\r\n    layout: \"/dashboard/userlist\",\r\n  },\r\n  {\r\n    path: \"/dashboard/agentlist\",\r\n    name: \"/dashboard/agentlist\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <AgentList></AgentList>,\r\n    layout: \"/dashboard/agentlist\",\r\n  },\r\n  {\r\n    path: \"/dashboard/adminlist\",\r\n    name: \"/dashboard/adminlist\",\r\n    icon: <AllOutIcon></AllOutIcon>,\r\n    component: <AdminList></AdminList>,\r\n    layout: \"/dashboard/adminlist\",\r\n  },\r\n  {\r\n    path: \"/dashboard/planlist\",\r\n    name: \"/dashboard/planlist\",\r\n    icon: <QueueIcon></QueueIcon>,\r\n    component: <PlanList></PlanList>,\r\n    layout: \"/dashboard/planlist\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { LoaderComponent } from \"./component/Loader\";\r\nimport { dashboardRoutes } from \"./routes/routes\";\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <LoaderComponent></LoaderComponent>\r\n      <Switch>\r\n        {dashboardRoutes.map((route: any) => {\r\n          return (\r\n            <Route path={route.path} key={route.path}>\r\n              {route.component}\r\n            </Route>\r\n          );\r\n        })}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import { SnackbarProvider } from \"notistack\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { App } from \"./App\";\r\nimport \"./index.css\";\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <SnackbarProvider maxSnack={5}>\r\n      <App />\r\n    </SnackbarProvider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}